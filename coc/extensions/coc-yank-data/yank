2e87ffc91b3fedc070f70e350de0344b|file:///Users/mohamedbgassama/.config/fish/config.fish|207|1|V|fish
	setenv NAME "Jon Gjengset"
aab64757ea5fb42d981fe9ecbfdd0d87|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|231|2|V|tutor
	 3. Move the cursor to the end of the correct line (AFTER the first . ).
dd2e5df0bc9ce1df105aba64b4fb36f3|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|231|2|V|tutor
	 Type `dnormal} to delete to the end of the line.
2bbacbd4cda2c2d88b4d8ff32cbca855|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|231|1|v|tutor
	Somebody 
ee188b804274a8ceff912a7f46461895|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|231|1|V|tutor
	typed the end of this line twice. end of this line twice.
5bb23d7df71fe225cbf351723caca6c4|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|224|13|v|tutor
	: MORE DELETION COMMANDS
5562f2dc0b3542326cdc024ab070da1a|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|224|1|V|tutor
	# Lesson 2.2
3769d3c78c4fafa3188bac59cc414605|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	** Type `d$`{normal} to delete to the end of the line. **
139a529b6e2b910acf6e05c80c692113|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|2|V|tutor
	 1. Press `<Esc>`{normal} to make sure you are in Normal mode.
b205ce9fe5e337693583d5ad0775d1dc|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|2|V|tutor
	 2. Move the cursor to the line below marked --->.
d424c45c5bf17d2af12a3da2441ff2b5|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|2|V|tutor
	 4. Type `d$`{normal} to delete to the end of the line.
832396c1536fa0cf6f1c4f13d824ce1f|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	Somebody typed the end of this line twice. end of this line twice.
f94f4c527ad8f82daf4c1e17b2cde976|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|2|V|tutor
	 5. Move on to Lesson 2.3 to understand what is happening.
5b429985d27665cbbca65cf13a850484|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	# Lesson 2.3: ON OPERATORS AND MOTIONS
0185b8ebbc3566cd9523f9c02a00e36b|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	Many commands that change text are made from an [operator](operator) and
894fbec1b84ffb6cb2928648a7501610|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|v|tutor
	a [motion](navigation).
0a108c3ffe6b962310493106e8f3e175|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	The format for a delete command with the [d](d) delete operator is as follows:
adbe4d1312885daabf08f76aeaf97470|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|5|V|tutor
	    d   motion
8a5686b8bf5ba59030413f7905d486ea|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|3|V|tutor
	  Where:
5c59243d5579ffb1639817abd69d55ef|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|5|V|tutor
	    d      - is the delete operator.
87f8377b14e1118fc71a8149b9857e5c|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|5|v|tutor
	motion - is what the operator will operate on (listed below).
70f03bdc58c8970d0296b3c7d3960e62|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|3|V|tutor
	  A short list of motions:
9ffcb1feb2b8ffb63af1237e6295bb4c|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|5|V|tutor
	    [w](w) - until the start of the next word, EXCLUDING its first character.
a0a2eac501476f2fae08cb305009f200|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|5|V|tutor
	    [e](e) - to the end of the current word, INCLUDING the last character.
62de3844861346b847cfe3347f236cb2|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|5|V|tutor
	    [$]($) - to the end of the line, INCLUDING the last character.
c1cc0af2af9891cdfb492a08eb096997|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|3|V|tutor
	  Thus typing `de`{normal} will delete from the cursor to the end of the word.
404969315d95802e5822e6f27310abcf|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	NOTE:  Pressing just the motion while in Normal mode without an operator
5702181b74daca191bdb498128045dc5|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|8|v|tutor
	will move the cursor as specified.
1fc2e1022dd052a456be162aa0a5c315|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	# Lesson 2.4: USING A COUNT FOR A MOTION
33fa6af3d2c9538cdbbb785709a53fe7|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|1|V|tutor
	** Typing a number before a motion repeats it that many times. **
5f79da31ce2494ffd64a130e546d60e1|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|2|V|tutor
	 1. Move the cursor to the start of the line marked ---> below.
b668a275b949e411df94c81fcf9c82bc|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|225|2|V|tutor
	 2. Type `2w`{normal} to move the cursor two words forward.
04068f392d6e58f06606e8429bc0456f|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|309|1|V|tutor
	1)  Roses are red,
af0807ff37d92cde8d185c481bb38caf|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|309|1|V|tutor
	2)  Mud is fun,
61f8b4c543de865c6226157d70372d11|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|309|1|V|tutor
	3)  Violets are blue,
e7c8713a578575b42225d702f5b9bc68|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/tutor/en/vim-01-beginner.tutor|309|1|V|tutor
	4)  I have a car,
	5)  Clocks tell time,
7000f5459b27dbd0d39fe8eab2174bad|file:///Users/mohamedbgassama/.config/fish/config.fish|254|5|V|fish
	    eval sh $HOME/dev/others/base16/shell/scripts/base16-atelier-dune.sh
2a2884f84bc214aea894e952f40cf45a|file:///Users/mohamedbgassama/.config/fish/config.fish|254|19|v|fish
	dev/others/base16/shell/scripts/base16-atelier-dune.sh
	end
	
	# Pretty 
7ca86dfbeeb5bcdd79ddd5e8d46ce308|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|1|V|vim
	" let g:NERDTreeColorMapCustom = {
f8682d8e693e600544911c2c08a644d6|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Staged"    : "#0ee375",  
9f73baa0b2859e52c8a9650e2bc7e216|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Modified"  : "#d9bf91",  
488b7f1fd64ec35aac07570919478a9a|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Renamed"   : "#51C9FC",  
b7611096e0fc59bc688f637f26795a1e|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Untracked" : "#FCE77C",  
89cc8d438ce4ce3f37de387ebc9d7269|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Unmerged"  : "#FC51E6",  
7cc384e74bad756cb74cddfd0b183134|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Dirty"     : "#FFBD61",  
bc633497f0a43fa15d1c298790a62489|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Clean"     : "#87939A",   
692a05740ad861bbcd9cc6a391363eb4|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ "Ignored"   : "#808080"   
b90e9fa3487051844739dda0b9d6a160|file:///Users/mohamedbgassama/.config/nvim/init.vim|109|5|V|vim
	    "\ }                         
	
2019082e8f560d16f853250bc0c5c2f4|file:///Users/mohamedbgassama/.config/nvim/init.vim|110|1|V|vim
	
	let g:NERDTreeIndicatorMapCustom = {
4467043b051cfe447ff5cecf9bd64dd2|file:///Users/mohamedbgassama/.config/nvim/init.vim|124|1|V|vim
	
	" Base16
22298524c7fcfe8a3ec73d28304a6a00|file:///Users/mohamedbgassama/.config/nvim/init.vim|26|1|V|vim
	Plug 'scrooloose/nerdtree'
117f4d3f2df0b373f78c2acc09f913f2|file:///Users/mohamedbgassama/.config/nvim/init.vim|26|1|V|vim
	"Plug 'tsony-tsonev/nerdtree-git-plugin'
	" Fuzzy finder
94cbfa0198a483f8773af0abed6dee0e|file:///Users/mohamedbgassama/.config/nvim/init.vim|27|1|V|vim
	" The NERDTree is a file system explorer for the Vim editor
	
dc074e7b5bb0cc430a50d2d4d483c2b7|file:///Users/mohamedbgassama/.config/nvim/init.vim|30|1|V|vim
	Plugin 'Xuyuanp/nerdtree-git-plugin'
ccefcc0a40cabd160ca9cf83d01723b8|file:///Users/mohamedbgassama/.config/nvim/init.vim|29|1|V|vim
	
	Plugin 'Xuyuanp/nerdtree-git-plugin'
71acdc6921d932569c7d8bd0f6523513|file:///Users/mohamedbgassama/.config/nvim/init.vim|27|1|V|vim
	Plugin 'scrooloose/nerdtree'
3f730ea1ed8b3befa1d679b4274f72af|file:///Users/mohamedbgassama/.config/nvim/init.vim|28|1|V|vim
	Plug 'Xuyuanp/nerdtree-git-plugin'
58f65c09e21d708ccbf7e3f6e8e5fb53|file:///Users/mohamedbgassama/.config/nvim/init.vim|29|1|V|vim
	"Plug 'tsony-tsonev/nerdtree-git-plugin'
f9355875f4273a089d72c4ce62084c0c|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/doc/options.txt|2696|4|v|help
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
			  \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
			  \,sm:block-blinkwait175-blinkoff150-blinkon175
2771f7c545258cfc0cc7c587624eb4a3|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/doc/options.txt|2696|1|V|help
			:set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
6aa6103b9b61eb4dffc461e31fd39c76|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/doc/options.txt|2695|1|V|help
	<	To enable mode shapes, "Cursor" highlight, and blinking: >
206873d1205820168497178441e4088c|file:///Users/mohamedbgassama/.config/nvim/init.vim|73|12|V|vim
	:tabprevious
	
327f75ad09897b1a428ee39f93270993|file:///Users/mohamedbgassama/.config/nvim/init.vim|76|1|V|vim
	:tabprevious
071759650e9506e9e8ebf06361fc9763|file:///Users/mohamedbgassama/.config/nvim/init.vim|76|1|V|vim
	" deal with colors
5853a518d7a7ddfca9aa728c6842c3ea|file:///Users/mohamedbgassama/.config/nvim/init.vim|74|1|V|vim
	tabprevious
244f0d6d058ba3c8ea4f729f540c7284|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/doc/options.txt|2697|12|v|help
	nkwait700-blinkoff400-blinkon250-Cursor/lCursor
43bbb71756bc226a013e78056b4b0ca9|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/doc/options.txt|2694|1|V|help
	
	<	To enable mode shapes, "Cursor" highlight, and blinking: >
20e2dbaa8b624acfb2f657c4bf2273c0|file:///usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/doc/options.txt|2696|2|v|help
		:set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
			  \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
			  \,sm:block-blinkwait175-blinkoff150-blinkon175
	
594e7f1b0f5f055d86659d5b9b154a92|file:///Users/mohamedbgassama/.config/nvim/init.vim|74|1|V|vim
	" To enable mode shapes,"Cursor" highlight, and blinking:
42dc4505935afb571095a55a1b6776fc|file:///Users/mohamedbgassama/.tmux.conf|61|46|v|tmux
	26"
	
	# copy mode highligh
	set-window-option -g mode-style "fg=#bdae93,bg=#504945"
	
	# bell
	set-window-option -g window-status-bell-style "fg=#3c3836,bg=#fb4934"
	
c5c3f40a76e27004a75364061e920546|file:///Users/mohamedbgassama/.tmux.conf|32|1|^v|tmux
	
	# Avoid date/time taking up space
	set -g status-right ' <REMOTE> '
	set -g status-right-length 9
	
	# Colors (gruvbox dark base16)
	
	# default statusbar colors
	# but a shade darker to show remote
	set-option -g status-style "fg=#bdae93,bg=#1c
	
	# default window title colors
	set-window-option -g window-status-style "fg=
	
	# active window title colors
	set-window-option -g window-status-current-st
	
	# pane border
	set-option -g pane-border-style "fg=#3c3836"
	set-option -g pane-active-border-style "fg=#5
	
	# message text
	set-option -g message-style "fg=#d5c4a1,bg=#3
	
	# pane number display
	set-option -g display-panes-active-colour "#b
	set-option -g display-panes-colour "#fabd2f"
	
	# clock
	set-window-option -g clock-mode-colour "#b8bb
db6c5fba26cf92302110d107e8590ea7|file:///Users/mohamedbgassama/.config/nvim/init.vim|242|1|V|vim
	set signcolumn=yes
d5adea1cc4174a2830d3c62261ae6233|file:///Users/mohamedbgassama/.config/nvim/init.vim|75|1|^v|vim
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:h
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/
	       \,sm:block-blinkwait175-blinkoff150-blinkon175
12ce658e43765337a516faf7df4524fe|file:///Users/mohamedbgassama/.config/nvim/init.vim|75|1|V|vim
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
9148f34cf71a7036cacc88e3fc4e19a7|file:///Users/mohamedbgassama/.config/nvim/init.vim|75|1|v|vim
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
	       \,sm:block-blinkwait175-blinkoff150-blinkon175
	
99a9c820eada6d69eb33390ed1817615|file:///Users/mohamedbgassama/.config/nvim/init.vim|75|1|v|vim
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
	       \,sm:block-blinkwait175-blinkoff150-blinkon175
cbecc2f79eb2cd1bc845eeba18a47fa3|file:///Users/mohamedbgassama/.config/nvim/init.vim|74|56|v|vim
	
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
	       \,sm:block-blinkwait175-blinkoff150-blinkon175
c1a9035a7b27cf4ad190b7d91a3ff6d1|file:///Users/mohamedbgassama/.config/nvim/init.vim|74|1|V|vim
	" To enable mode shapes Cursor highlight, and blinking:
5c68b54821ba9c371db763a1acd8d8aa|file:///Users/mohamedbgassama/.config/nvim/init.vim|66|1|V|vim
	    set guicursor=n-v-c:block-Cursor/lCursor-blinkon0,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor
0c8a5c546c6e5edd093aafb3574263ae|file:///Users/mohamedbgassama/.config/nvim/init.vim|74|1|v|vim
	" To enable mode shapes, "Cursor" highlight, and blinking:
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
		 \,sm:block-blinkwait175-blinkoff150-blinkon175
	
b2194d3dd7dd3e665c2c874543b2ef2f|file:///Users/mohamedbgassama/.config/nvim/init.vim|73|1|V|vim
	
	" To enable mode shapes, "Cursor" highlight, and blinking:
cf62d04a02ba79092ab45c9d6ab0495a|file:///Users/mohamedbgassama/.config/nvim/init.vim|66|4|v|vim
	 set guicursor=n-v-c:block-Cursor/lCursor-blinkon0,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor
27ae10efc6252727d6306fd00a5ae1e7|file:///Users/mohamedbgassama/.config/nvim/init.vim|61|24|v|vim
	cript-vim'
	
	call plug#end()
	
	if has('nvim')
	
0cf31b2c283ce3431794586df7b0996d|file:///Users/mohamedbgassama/.config/nvim/init.vim|66|1|v|vim
	    
2c0d3480c60e8f49d54177fac7c1b03f|file:///Users/mohamedbgassama/.config/nvim/init.vim|74|1|v|vim
	" to enable mode shapes, "cursor" highlight, and blinking:
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
		 \,sm:block-blinkwait175-blinkoff150-blinkon175
	
	
31a92a7e4b233bab454326385e9a6fd3|file:///Users/mohamedbgassama/.config/nvim/init.vim|74|1|V|vim
	" to enable mode shapes, "cursor" highlight, and blinking:
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
1303834ded8f6c2bd7b6708ebc8ae6c1|file:///Users/mohamedbgassama/.config/nvim/init.vim|71|2|V|vim
	   set guicursor=n-v-c:block-Cursor/lCursor-blinkon0,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor
	    set inccommand=nosplit
	    noremap <C-q> :confirm qall<CR>
	end
	
2ca1789a6d2e3b1962d326e98eca88f1|file:///Users/mohamedbgassama/.config/nvim/init.vim|71|1|V|vim
	
	
	
	" to enable mode shapes, "cursor" highlight, and blinking:
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
f7c201f194421567272670bb49e49686|file:///Users/mohamedbgassama/.config/nvim/init.vim|71|2|v|vim
	  set guicursor=n-v-c:block-Cursor/lCursor-blinkon0,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor
7474b7a035e395b6ddab892185a1d7e2|file:///Users/mohamedbgassama/.config/nvim/init.vim|78|1|v|vim
	
	" to enable mode shapes, "cursor" highlight, and blinking:
	set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	       \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
		 \,sm:block-blinkwait175-blinkoff150-blinkon175
	
	
f2c4277bbaec59d9f0e73f23bff1102e|file:///Users/mohamedbgassama/.config/nvim/init.vim|35|1|V|vim
	" Any valid git URL is allowed
97bfd41ddcc3d671390206d53f58246e|file:///Users/mohamedbgassama/.config/nvim/init.vim|35|1|V|vim
	Plug 'https://github.com/junegunn/vim-github-dashboard.git'
d4aacefd023d8dc53e834b78d10f67b3|file:///Users/mohamedbgassama/.config/nvim/init.vim|115|1|v|vim
	nmap <C-n> :NERDTreeToggle<CR>
	
aef4c5668aeb77c5debef96c0c308d66|file:///Users/mohamedbgassama/.config/nvim/init.vim|117|1|V|vim
	nmap <C-n> :NERDTreeToggle<CR>
	vmap ++ <plug>NERDCommenterToggle
abf9d81e665ac8799709e05249d3c8cd|file:///Users/mohamedbgassama/.config/nvim/init.vim|103|1|v|vim
	vmap ++ <plug>NERDCommenterToggle
f9e4605460a65ef8855d11126d554593|file:///Users/mohamedbgassama/.config/nvim/init.vim|102|13|v|vim
	NERDTreeToggle
5649a46469a110710fe8ae1805f0acf6|file:///Users/mohamedbgassama/.config/fish/config.fish|3|12|v|fish
	ake
	
4cb96e15152c778f3157fb0a85f1632d|file:///Users/mohamedbgassama/.config/fish/config.fish|4|12|v|fish
	dg-open
3c5fcf97f94c738faf9499773e874382|file:///Users/mohamedbgassama/.config/fish/config.fish|4|3|v|fish
	br -a o xdg-open
b7d5fa088c14dc8ee7b34830f4bc425f|file:///Users/mohamedbgassama/.config/fish/config.fish|4|1|V|fish
	abbr -a o xdg-open
c481a1abbd98e9b5fc63b5e456b469d8|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|fish
	abbr -a c cargo
	abbr -a e nvim
	abbr -a m make
	abbr -a g git
	abbr -a gc 'git checkout'
	abbr -a vimdiff 'nvim -d'
	abbr -a ct 'cargo t'
	abbr -a gah 'git stash; and git pull --rebase; and git stash pop'
	
	
	# History lists your previously entered commands
	abbr -a h='history'
	complete --command yaourt --wraps pacman
	complete --command aurman --wraps pacman
	complete --command pacaur --wraps pacman
	complete --command aurman --wraps pacman
	
	if status --is-interactive
		tmux ^ /dev/null; and exec true
	end
	
	if [ -e /usr/bin/aurman ]
		abbr -a p 'aurman'
		abbr -a up 'aurman -Syu'
	else if [ -e /usr/bin/pacaur ]
		abbr -a p 'pacaur'
		abbr -a up 'pacaur -Syu'
	else if [ -e /usr/bin/yaourt ]
		abbr -a p 'yaourt'
		abbr -a up 'yaourt -Syu --aur'
	else
		abbr -a p 'sudo pacman'
		abbr -a up 'sudo pacman -Syu'
	end
	
	if which exa >/dev/null 2>/dev/null
		abbr -a l 'exa'
		abbr -a ls 'exa'
		abbr -a ll 'exa -l'
		abbr -a lll 'exa -la'
	else
		abbr -a l 'ls'
		abbr -a ll 'ls -l'
		abbr -a lll 'ls -la'
	end
	
	if [ -e /usr/share/fish/functions/fzf_key_bindings.fish ]; and status --is-interactive
		source /usr/share/fish/functions/fzf_key_bindings.fish
	end
	
	if test -f /usr/share/autojump/autojump.fish;
		source /usr/share/autojump/autojump.fish;
	end
	
	function ssh
		switch $argv[1]
		case "*.amazonaws.com"
			env TERM=xterm /usr/bin/ssh $argv
		case "ubuntu@"
			env TERM=xterm /usr/bin/ssh $argv
		case "*"
			/usr/bin/ssh $argv
		end
	end
	
	function apass
		if test (count $argv) -ne 1
			pass $argv
			return
		end
	
		adb shell input text (pass $argv[1] | head -n1 | sed -e 's/ /%s/g' -e 's/\([()<>$|;&*\\~"\'`]\)/\\\\\1/g')
	end
	
	function limit
		numactl -C 0,2 $argv
	end
	
	function remote_alacritty
		# https://gist.github.com/costis/5135502
		set fn (mktemp)
		infocmp alacritty-256color > $fn
		scp $fn $argv[1]":alacritty-256color.ti"
		ssh $argv[1] tic "alacritty-256color.ti"
		ssh $argv[1] rm "alacritty-256color.ti"
	end
	
	function remarkable
		if test (count $argv) -lt 1
			echo "No files given"
			return
		end
	
		ip addr show up to 10.11.99.0/29 | grep enp0s20f0u2 >/dev/null
		if test $status -ne 0
			# not yet connected
			echo "Connecting to reMarkable internal network"
			sudo dhcpcd enp0s20f0u2
		end
		for f in $argv
			curl --form "file=@"$f http://10.11.99.1/upload
			echo
		end
	end
	
	function md2pdf
		set t (mktemp -t md2pdf.XXXXXXX.pdf)
		pandoc --smart --standalone --from markdown_github -V geometry:letterpaper,margin=2cm $argv[1] -o $t
		set --erase argv[1]
		if test (count $argv) -gt 0 -a $argv[1] '!=' '-'
			mv $t $argv[1]
		else
			cat $t
			rm $t
		end
	end
	
	function lpmd
		set infile $argv[1]
		set --erase argv[1]
		md2pdf $infile - | lp $argv -
	end
	
	function pdfo
		echo $argv | xargs pdflatex
		echo $argv | sed 's/\.tex$/.pdf/' | xargs xdg-open
	end
	
	fun
81f3a978d5b48fde04b96f642c94064c|file:///Users/mohamedbgassama/.config/fish/config.fish|55|1|v|fish
	function ssh
		switch $argv[1]
		case "*.amazonaws.com"
			env term=xterm /usr/bin/ssh $argv
		case "ubuntu@"
			env term=xterm /usr/bin/ssh $argv
		case "*"
			/usr/bin/ssh $argv
		end
	e
ceef1b7fdd37a10d7a1b211ab4e93656|file:///Users/mohamedbgassama/.config/fish/config.fish|79|1|v|fish
	function remarkable
		if test (count $argv) -lt 1
			echo "No files given"
			return
		end
	
		ip addr show up to 10.11.99.0/29 | grep enp0s20f0u2 >/dev/null
		if test $status -ne 0
			# not yet connected
			echo "Connecting to reMarkable internal network"
			sudo dhcpcd enp0s20f0u2
		end
		for f in $argv
			curl --form "file=@"$f http://10.11.99.1/upload
			echo
		end
	end
	
	
d03d34934de68f7ff23c670347bd8a49|file:///Users/mohamedbgassama/.config/fish/config.fish|79|7|v|fish
	on md2pdf
		set t (mktemp -t md2pdf.XXXXXXX.pdf)
		pandoc --smart --standalone --from markdown_github -V geometry:letterpaper,margin=2cm $argv[1] -o $t
		set --erase argv[1]
		if test (count $argv) -gt 0 -a $argv[1] '!=' '-'
			mv $t $argv[1]
		else
			cat $t
			rm $t
		end
	end
2c9b533bd27a1e2d3d932d72aba89851|file:///Users/mohamedbgassama/.config/fish/config.fish|137|1|v|fish
	set FORTUNES computers debian linux magic
	set FORTUNES futurama hitchhiker $FORTUNES
	set FORTUNES firefly calvin perl $FORTUNES
	set FORTUNES science wisdom miscellaneous $FORTUNES
	set FORTUNES off/atheism off/debian off/linux off/privates $FORTUNES
	set FORTUNES off/religion off/vulgarity $FORTUNES
	
	
b6d98f870f92a380331d8a7a4610dba6|file:///Users/mohamedbgassama/.config/fish/config.fish|95|1|v|fish
	function athena
		env SSHPASS=(pass www/mit) sshpass -e ssh athena $argv
	end
	
05ed6257ef0d6cab0de7fdb4b156215b|file:///Users/mohamedbgassama/.config/fish/config.fish|87|1|v|fish
	function pdfo
		echo $argv | xargs pdflatex
		echo $argv | sed 's/\.tex$/.pdf/' | xargs xdg-open
	end
	
	function px
		ssh -fND localhost:8080 -C jon@ssh.thesquareplanet.com -p 222
	end
	
3e382e43340a2ef5feb1e176e52f87a2|file:///Users/mohamedbgassama/.config/fish/config.fish|161|1|v|fish
	abbr -a nova 'env OS_PASSWORD=(pass www/mit-openstack | head -n1) nova'
	abbr -a glance 'env OS_PASSWORD=(pass www/mit-openstack | head -n1) glance'
	setenv OS_USERNAME jfrg@csail.mit.edu
	setenv OS_TENANT_NAME usersandbox_jfrg
	setenv OS_AUTH_URL https://nimbus.csail.mit.edu:5001/v2.0
	setenv OS_IMAGE_API_VERSION 1
	setenv OS_VOLUME_API_VERSION 2
	function penv -d "Set up environment for the PDOS openstack service"
		env OS_PASSWORD=(pass www/mit-openstack | head -n1) OS_TENANT_NAME=pdos OS_PROJECT_NAME=pdos $argv
	end
	
d5aebd57ffe6fc9110b794a2a82316c0|file:///Users/mohamedbgassama/.config/fish/config.fish|174|1|v|fish
	#setenv QT_DEVICE_PIXEL_RATIO 2
	#setenv GDK_SCALE 2
	#setenv GDK_DPI_SCALE 0.5
	setenv _JAVA_OPTIONS '-Dawt.useSystemAAFontSettings=lcd -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel'
	setenv JAVA_FONTS /usr/share/fonts/TTF
	setenv MATLAB_JAVA /usr/lib/jvm/default-runtime
	setenv J2D_D3D false
	
	
33609591a758afd3262a95aac169e71b|file:///Users/mohamedbgassama/.config/.tmux.conf|43|20|v|tmux
	lt-command "reattach-to-user-namespace -l ${SHELL}"t
5787f2081e43d24e013231e86d70bf80|file:///Users/mohamedbgassama/.config/nvim/init.vim|32|1|V|vim
	Plug 'prettier/vim-prettier', { 'do': 'yarn install' }
4b93cfcb229ebfa6e7336e00ce150996|file:///Users/mohamedbgassama/.config/nvim/init.vim|31|1|v|vim
	plug 'prettier/vim-prettier', {
	  \ 'do': 'yarn install',
	  \ 'branch': 'release/0.x'
	}" post install (yarn install | npm install) then load plugin only for editing supported files
	
c3441ad0675c0355b597c2365199789e|file:///Users/mohamedbgassama/.config/nvim/init.vim|31|1|v|vim
	Plug 'prettier/vim-prettier', {
	  \ 'do': 'yarn install',
	  \ 'branch': 'release/0.x'
	}
	
9ce80fff3d5bd21dce0780d9b90193e9|file:///Users/mohamedbgassama/.config/nvim/init.vim|31|1|V|vim
	
	Plug 'christoomey/vim-tmux-navigator'
2c19b6e25768452cf9b48cd750336d85|file:///Users/mohamedbgassama/.config/nvim/init.vim|200|1|V|vim
	nmap <leader>p <CR>
6d4d47c67e31c13f34e8be1233f7c03c|file:///Users/mohamedbgassama/.config/nvim/init.vim|108|1|V|vim
	"let g:prettier#quickfix_enabled = 0
adad1323daed17fbeaf4e9172241d5b1|file:///Users/mohamedbgassama/.config/nvim/init.vim|108|1|V|vim
	"let g:prettier#quickfix_auto_focus = 0
71633e70227a8841de7107d83200f30b|file:///Users/mohamedbgassama/.config/nvim/init.vim|111|31|V|vim
	"let g:prettier#autoformat = 1let g:prettier#autoformat = 0
	"autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue,*.yaml,*.html PrettierAsync
	
	let g:secure_modelines_allowed_items = [
		\ "textwidth",   "tw",
b56d79f995b71b6be4e04cae6001ae32|file:///Users/mohamedbgassama/.config/nvim/init.vim|111|31|v|vim
	let g:prettier#autoformat = 0
f562363bac385d3073333750c8669b6e|file:///Users/mohamedbgassama/.config/nvim/init.vim|147|1|V|vim
	" let g:WebDevIconsUnicodeDecorateFolderNodes = 1
7cc5756bb268800fcc37f1a5cca7bef9|file:///Users/mohamedbgassama/.config/nvim/init.vim|147|1|V|vim
	" let g:NERDTreeGitStatusNodeColorization = 1
58c69005965e2891788965a8935aae8d|file:///Users/mohamedbgassama/.config/nvim/init.vim|143|1|V|vim
	" autocmd StdinReadPre * let s:std_in=1
2c7631e7efcd3bc5b8559bd100b93747|file:///Users/mohamedbgassama/.config/nvim/init.vim|143|1|V|vim
	" autocmd VimEnter * NERDTree
e3d9de7aafa8c0cbf83f9615da8cdf6c|file:///Users/mohamedbgassama/.config/nvim/init.vim|358|1|V|vim
	xnoremap <C-k> <Esc>
e3d9de7aafa8c0cbf83f9615da8cdf6c|file:///Users/mohamedbgassama/.config/nvim/init.vim|358|1|V|vim
	xnoremap <C-k> <Esc>
024267dc226d9d87ff34a6d4c5b56f00|file:///Users/mohamedbgassama/.config/nvim/init.vim|134|1|V|vim
	
	let g:NERDTreeGitStatusWithFlags = 1
e2816bda054031248695e05db1e3b105|file:///Users/mohamedbgassama/.config/nvim/init.vim|27|1|V|vim
	
	Plug 'scrooloose/nerdtree'
21800aeb682ff5f97324f650613c0550|file:///Users/mohamedbgassama/.config/nvim/init.vim|61|1|v|vim
	Plug 'fatih/vim-go'
e7e3ddc06f13775d6c820190ab5ba7b7|file:///Users/mohamedbgassama/.config/nvim/init.vim|61|1|v|vim
	Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' 
937627f81c42ceeb62b2c825c9a1c07d|file:///Users/mohamedbgassama/.config/nvim/init.vim|67|1|V|vim
	Plug 'neoclide/coc.nvim', {'do': 'yarn install --frozen-lockfile'}
940d5457cb5819c6a3c94c96e2f3e913|file:///Users/mohamedbgassama/.config/nvim/init.vim|66|1|V|vim
	" coc for tslinting, auto complete and prettier
fd7747ab2a348d16d09b94875b339622|file:///Users/mohamedbgassama/.config/nvim/init.vim|67|1|v|vim
	" coc extensions
	let g:coc_global_extensions = ['coc-tslint-plugin', 'coc-tsserver', 'coc-emmet', 'coc-css', 'coc-html', 'coc-json', 'coc-yank', 'coc-prettier']
	
	
0bcfa7fb077e4c520f707df573c7cab3|file:///Users/mohamedbgassama/.config/nvim/init.vim|67|1|V|vim
	" coc extensions
7c379b8e47d8b5f2940a3014a2ba2da8|file:///Users/mohamedbgassama/.config/nvim/init.vim|67|1|V|vim
	" coc extensions
	let g:coc_global_extensions = ['coc-tslint-plugin', 'coc-tsserver', 'coc-emmet', 'coc-css', 'coc-html', 'coc-json', 'coc-yank', 'coc-prettier']
66c6962a6bdb5b47322e4f4fabbc97df|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
	
	# smart pane switching with awareness of vim splits
	bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
	bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
	bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
	bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
	bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
	
	set -g default-terminal "screen-256color"
	
	# split pane should stay in the same directory
	
	bind '"' split-window -c "#{pane_current_path}"
	bind % split-window -h -c "#{pane_current_path}"
	bind c new-window -c "#{pane_current_path}"
	
	set-option -g mouse on
	se-window-option -g window-status-current-format '#[bg=white,fg=black,bold]#I:#W#[fg=dim]#F'
	set -g status-justify left
	set -g status-bg default
	set -g status-fg colour12
	set -g status-right ''
	set -g status-interval 2
	set-option -g status-position top
	setw -g aggressive-resize on
	bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
	unbind p
	bind p paste-buffer
	
	# Use vim keybindings in copy mode
	set-window-option -g mode-keys vi
	# Setup 'v' to begin selection as in Vim
	bind-key -T copy-mode-vi v send -X begin-selection
	bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"
	
	# Update default binding of `Enter` to also use copy-pipe
	unbind -T copy-mode-vi Enter
	bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"
	
	set-option -g default-command "reattach-to-user-namespace -l $SHELL"
1b821b321fc72eadd38e8960d4da1096|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	# set scroll history to 100,000 lines
	set-option -g history-limit 100000
	
	# modern colors
	set -g default-terminal "tmux-256color"
	set -ga terminal-overrides ",alacritty:Tc"
	
	# unbind the prefix and bind it to Ctrl-a like screen
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
	
	# copy to X clipboard
	bind -T copy-mode-vi v send -X begin-selection
	bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard &> /dev/null'
	bind -T copy-mode-vi Enter send-keys -X cancel
	
	# shortcut for moving tmux buffer to clipboard
	# useful if you've selected with the mouse
	bind-key -nr C-y run "tmux show-buffer | xclip -in -selection clipboard &> /dev/null"
	
	# Avoid ESC delay
	set -s escape-time 0
	
	# Fix titlebar
	set -g set-titles on
	set -g set-titles-sting "#T"
	
	# VIM mode
	set -g mode-keys vi
	
	# Mouse friendly
	set -g mouse on
	
	# Move between panes with vi keys
	bind h select-pane -L
	bind j select-pane -d
	bind k select-pane -u
	bind l select-pane -r
	
	######################
	### design changes ###
	######################
	
	# avoid date/time taking up space
	set -g status-right ''
	set -g status-right-length 0
	
	source-file ~/dev/others/base16/builder/templates/tmux/colors/base16-gruvbox-dark-hard.conf
	
2259dcfd90841e849dfa40436b10221c|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	# scrollback size
	set -g history-limit 10000
	
	################################
	# Keybinds
	###############################
	
	# Changing ctrl b to ctrl a as the command button
	unbind C-b
	set -g prefix C-a
	
	# set first window to index 1 (not 0) to map more to the keyboard layout
	set -g base-index 1
	set -g pane-base-index 1
	
	# pass through xterm keys
	set -g xterm-keys on
	
	# Keep your finger on ctrl, or don't, same result
	bind-key C-d detach-client
	bind-key C-p paste-buffer
	
	# Redraw the client (if interrupted by wall, etc)
	bind R refresh-client
	
	# reload tmux config with ctrl + a + r
	 unbind r
	 bind r \
	     source-file ~/.tmux.conf \;\
	         display 'Reloaded tmux config.'
	
	# Vertical splits with g or C-g
	unbind g
	unbind C-g
	bind-key g split-window -h
	bind-key C-g split-window -h
	
	# Horizontal splits with v or C-h
	unbind h
	unbind C-h
	bind-key h split-window
	bind-key C-h split-window
	
	# Ctrl + a + o rename window
	# unbind o
	# unbind C-o
	# bind-key C-o rename-window
	
	# Using the mouse to switch panes
	set -g mouse-utf8 on
	set -g mouse on
	
	# Ctrl - t or t new window
	unbind t
	unbind C-t
	bind-key t new-window
	bind-key C-t new-window
	
	# Ctrl - w or w to kill panes
	unbind w
	unbind C-w
	bind-key w kill-pane
	bind-key C-w kill-pane
	
	# C + control q to kill session
	unbind q
	unbind C-q
	bind-key q kill-session
	bind-key C-q kill-session
	
	# Switching panes with alt
	bind -n M-Left select-pane -L
	bind -n M-Right select-pane -R
	bind -n M-Up select-pane -U
	bind -n M-Down select-pane -D
	
	# Ctrl + a + n : New session
	unbind n
	unbind C-n
	bind-key n new-session
	bind-key C-n new-session
	
	# Ctrl + a + Pagedown : Next window
	#unbind Pagedown
	unbind Pagedown
	bind-key Pagedown next-window
	
	# Ctrl + a + Pagup : Previous window
	#unbind Pageup
	unbind Pageup
	bind-key Pageup previous-window
	
	# Zoom with ctrl + a + ctrl + '+'
	#unbind C-+
	#bind C-+ \
	#new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read'\;\
	#swap-pane -s tmux-zoom.0 \;\
	#select-window -t tmux-zoom
	
	# Zoom back ctrl + a + ctrl + '-'
	#unbind C--
	#bind C-- \
	#	last-window \;\
	#	swap-pane -s tmux-zoom.0 \;\
	#	kill-window -t tmux-zoom
	
	# Visual Activity Monitoring between windows
	setw -g monitor-activity on
	set -g visual-activity on
	
	# Show tmux positions in titles
	set -g set-titles on
	
	# Set up a basic panel structure for command + ctr D
	bind D source-file ~/.tmux/dev
	
	# Attach to a session if runs otherwise create a new one
	new-session -n $HOST
	
	# Copy from tmux to system clipboard
	# Needs xclip -> sudo apt install xclip
	bind -t vi-copy y copy-pipe "xclip -sel clip -i"
	
	#####################################
	# Plugins
	#https://github.com/tmux-plugins/tpm
	####################################
	
	#####################################
	# tpm plugin manager
	# https://github.com/tmux-plugins/tpm
	#####################################
	set -g @plugin 'tmux-plugins/tpm'
	
	#####################################
	# tmux-sensible - basline settings that get overwritten from .tmux.conf
	# https://github.com/tmux-plugins/tmux-sensible
	######################################
	#set -g @plugin 'tmux-plugins/tmux-sensible'
	
	#####################################
	# tmux-resurrect - save and reload sessions and windows after a restart
	# https://github.com/tmux-plugins/tmux-resurrect
	# Default keybinds : save - command + c + s && restore command + c + r
	######################################
	set -g @plugin 'tmux-plugins/tmux-resurrect'
	### tmux-resurrect extra settings ###
	# keep vim sessions after reboot
	set -g @resurrect-strategy-vim 'session'
	# keep pane contents
	set -g @resurrect-capture-pane-contents 'on'
	# restore bash history
	set -g @resurrect-save-bash-history 'on'
	### /tmux-resurrect extra settings ###
	
	######################################
	# tmux-continuum - automatically save and restore tmux sessions
	# https://github.com/tmux-plugins/tmux-continuum
	#####################################
	set -g @plugin 'tmux-plugins/tmux-continuum'
	# Restore last saved enviroment
	set -g @continuum-restore 'on'
	# Set autosave interval
	set -g @continuum-save-interval '5'
	# Show continiuum state in statusbar
	#set -g status-right 'Continuum status: #{continuum_status}'
	# Starting tmux with system https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md
	
	######################################
	# tmux-yank - advanced copy mode
	# https://github.com/tmux-plugins/tmux-yank
	#####################################
	set -g @plugin 'tmux-plugins/tmux-yank'
	
	# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
	run '~/.tmux/plugins/tpm/tpm'
854b40d91f3e0511c81b00c06f54cc3c|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	# scrollback size
	set -g history-limit 10000
	
	################################
	# Keybinds
	###############################
	
	# Changing ctrl b to ctrl a as the command button
	unbind C-b
	set -g prefix C-a
	
	# set first window to index 1 (not 0) to map more to the keyboard layout
	set -g base-index 1
	set -g pane-base-index 1
	
	# pass through xterm keys
	set -g xterm-keys on
	
	# Keep your finger on ctrl, or don't, same result
	bind-key C-d detach-client
	bind-key C-p paste-buffer
	
	# Redraw the client (if interrupted by wall, etc)
	bind R refresh-client
	
	# reload tmux config with ctrl + a + r
	 unbind r
	 bind r \
	     source-file ~/.tmux.conf \;\
	         display 'Reloaded tmux config.'
	
	# Vertical splits with g or C-g
	unbind g
	unbind C-g
	bind-key g split-window -h
	bind-key C-g split-window -h
	
	# Horizontal splits with v or C-h
	unbind h
	unbind C-h
	bind-key h split-window
	bind-key C-h split-window
	
	# Ctrl + a + o rename window
	# unbind o
	# unbind C-o
	# bind-key C-o rename-window
	
	# Using the mouse to switch panes
	set -g mouse-utf8 on
	set -g mouse on
	
	# Ctrl - t or t new window
	unbind t
	unbind C-t
	bind-key t new-window
	bind-key C-t new-window
	
	# Ctrl - w or w to kill panes
	unbind w
	unbind C-w
	bind-key w kill-pane
	bind-key C-w kill-pane
	
	# C + control q to kill session
	unbind q
	unbind C-q
	bind-key q kill-session
	bind-key C-q kill-session
	
	# Switching panes with alt
	bind -n M-Left select-pane -L
	bind -n M-Right select-pane -R
	bind -n M-Up select-pane -U
	bind -n M-Down select-pane -D
	
	# Ctrl + a + n : New session
	unbind n
	unbind C-n
	bind-key n new-session
	bind-key C-n new-session
	
	# Ctrl + a + Pagedown : Next window
	#unbind Pagedown
	unbind Pagedown
	bind-key Pagedown next-window
	
	# Ctrl + a + Pagup : Previous window
	#unbind Pageup
	unbind Pageup
	bind-key Pageup previous-window
	
	# Zoom with ctrl + a + ctrl + '+'
	#unbind C-+
	#bind C-+ \
	#new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read'\;\
	#swap-pane -s tmux-zoom.0 \;\
	#select-window -t tmux-zoom
	
	# Zoom back ctrl + a + ctrl + '-'
	#unbind C--
	#bind C-- \
	#	last-window \;\
	#	swap-pane -s tmux-zoom.0 \;\
	#	kill-window -t tmux-zoom
	
	# Visual Activity Monitoring between windows
	setw -g monitor-activity on
	set -g visual-activity on
	
	# Show tmux positions in titles
	set -g set-titles on
	
	# Set up a basic panel structure for command + ctr D
	bind D source-file ~/.tmux/dev
	
	# Attach to a session if runs otherwise create a new one
	new-session -n $HOST
	
	# Copy from tmux to system clipboard
	# Needs xclip -> sudo apt install xclip
	bind -t vi-copy y copy-pipe "xclip -sel clip -i"
	
	#####################################
	# Plugins
	#https://github.com/tmux-plugins/tpm
	####################################
	
	#####################################
	# tpm plugin manager
	# https://github.com/tmux-plugins/tpm
	#####################################
	set -g @plugin 'tmux-plugins/tpm'
	
	#####################################
	# tmux-sensible - basline settings that get overwritten from .tmux.conf
	# https://github.com/tmux-plugins/tmux-sensible
	######################################
	#set -g @plugin 'tmux-plugins/tmux-sensible'
	
	#####################################
	# tmux-resurrect - save and reload sessions and windows after a restart
	# https://github.com/tmux-plugins/tmux-resurrect
	# Default keybinds : save - command + c + s && restore command + c + r
	######################################
	set -g @plugin 'tmux-plugins/tmux-resurrect'
	### tmux-resurrect extra settings ###
	# keep vim sessions after reboot
	set -g @resurrect-strategy-vim 'session'
	# keep pane contents
	set -g @resurrect-capture-pane-contents 'on'
	# restore bash history
	set -g @resurrect-save-bash-history 'on'
	### /tmux-resurrect extra settings ###
	
	######################################
	# tmux-continuum - automatically save and restore tmux sessions
	# https://github.com/tmux-plugins/tmux-continuum
	#####################################
	set -g @plugin 'tmux-plugins/tmux-continuum'
	# Restore last saved enviroment
	set -g @continuum-restore 'on'
	# Set autosave interval
	set -g @continuum-save-interval '5'
	# Show continiuum state in statusbar
	#set -g status-right 'Continuum status: #{continuum_status}'
	# Starting tmux with system https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md
	
	######################################
	# tmux-yank - advanced copy mode
	# https://github.com/tmux-plugins/tmux-yank
	#####################################
	set -g @plugin 'tmux-plugins/tmux-yank'
	
	# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
	r
07cd69a96d6cd5184ffe8c2ee867cf96|file:///Users/mohamedbgassama/.tmux.conf|1|1|V|tmux
	xvun '~/.tmux/plugins/tpm/tpm'
667bca20d2c7d5ff9dbc483c19b6fb25|file:///Users/mohamedbgassama/.tmux.conf|49|1|V|tmux
	source-file ~/dev/others/base16/builder/templates/tmux/colors/base16-gruvbox-dark-hard.confdd
ecc6b14afa605809c4f9310c0732dae2|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	# set scroll history to 100,000 lines
	set-option -g history-limit 100000
	
	# modern colors
	set -g default-terminal "tmux-256color"
	set -ga terminal-overrides ",alacritty:Tc"
	
	# unbind the prefix and bind it to Ctrl-a like screen
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
	
	# copy to X clipboard
	bind -T copy-mode-vi v send -X begin-selection
	bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard &> /dev/null'
	bind -T copy-mode-vi Enter send-keys -X cancel
	
	# shortcut for moving tmux buffer to clipboard
	# useful if you've selected with the mouse
	bind-key -nr C-y run "tmux show-buffer | xclip -in -selection clipboard &> /dev/null"
	
	# Avoid ESC delay
	set -s escape-time 0
	
	# Fix titlebar
	set -g set-titles on
	set -g set-titles-string "#T"
	
	# VIM mode
	set -g mode-keys vi
	
	# Mouse friendly
	set -g mouse on
	
	# Move between panes with vi keys
	bind h select-pane -L
	bind j select-pane -D
	bind k select-pane -U
	bind l select-pane -R
	
	######################
	### DESIGN CHANGES ###
	######################
	
	# Avoid date/time taking up space
	set -g status-right ''
	set -g status-right-length 0
	
3e45b521a8cc5e69ee31c86af9e2f3ac|file:///Users/mohamedbgassama/.tmux.conf|78|1|v|tmux
	set -g window-status-current-bg white
	set -g window-status-current-fg black
	set -g window-status-current-attr bold
	
db851e8501cceea9bf10631c31a83919|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	# The best and greatest tmux.conf ever - improved!
	# https://gist.github.com/rsp/f4770a1fe8ea7e2378ac3a16e01a2b53
	
	# Here are some customizations done by Rafał Pocztarski:
	# use Ctrl+Backslash instead of Ctrl+A or Ctrl+B
	# use Slash to split vertically
	# use Backslash to split horizontally
	unbind-key C-b
	set -g prefix 'C-\'
	bind-key 'C-\' send-prefix
	bind-key \ split-window -h
	bind-key / split-window -v
	
	# Everything below is taken from:
	# The best and greatest tmux.conf ever
	# by Chad Humphries
	# https://gist.github.com/spicycode/1229612
	
	# 0 is too far from ` ;)
	set -g base-index 1
	
	# Automatically set window title
	set-window-option -g automatic-rename on
	set-option -g set-titles on
	
	#set -g default-terminal screen-256color
	set -g status-keys vi
	set -g history-limit 10000
	
	setw -g mode-keys vi
	set -g mode-mouse on
	setw -g monitor-activity on
	
	bind-key v split-window -h
	bind-key s split-window -v
	
	
69088dd4f7dac112d9811f61ed82c58c|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	bind-key J resize-pane -D 5
	bind-key K resize-pane -U 5
	bind-key H resize-pane -L 5
	bind-key L resize-pane -R 5
	
	bind-key M-j resize-pane -D
	bind-key M-k resize-pane -U
	bind-key M-h resize-pane -L
	bind-key M-l resize-pane -R
	
	# Vim style pane selection
	bind h select-pane -L
	bind j select-pane -D
	bind k select-pane -U
	bind l select-pane -R
	
	# Use Alt-vim keys without prefix key to switch panes
	bind -n M-h select-pane -L
	bind -n M-j select-pane -D
	bind -n M-k select-pane -U
	bind -n M-l select-pane -R
	
	# Use Alt-arrow keys without prefix key to switch panes
	bind -n M-Left select-pane -L
	bind -n M-Right select-pane -R
	bind -n M-Up select-pane -U
	bind -n M-Down select-pane -D
	
	# Shift arrow to switch windows
	bind -n S-Left  previous-window
	bind -n S-Right next-window
	
	# No delay for escape key press
	set -sg escape-time 0
	
	# Reload tmux config
	bind r source-file ~/.tmux.conf
	
	# THEME
	set -g status-bg black
	set -g status-fg white
	set -g status-interval 60
	set -g status-left-length 30
	set -g status-left '#[fg=green](#S) #(whoami)'
	s
e3547f6d7056201dbe2965e8bd2696a6|file:///Users/mohamedbgassama/.tmux.conf|1|1|V|tmux
	et -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'
0720ca16e2d30dc420cadd4e2e819645|file:///Users/mohamedbgassama/.config/nvim/init.vim|35|1|V|vim
	Tmux plugin
4bcacbffcee5ab822e9a828975222eff|file:///Users/mohamedbgassama/.config/nvim/init.vim|35|1|V|vim
	Plug 'christoomey/vim-tmux-navigator'
9bc74588b451825ed1dd35b5bfb18bcb|file:///Users/mohamedbgassama/.tmux.conf|1|1|v|tmux
	# set scroll history to 100,000 lines
	set-option -g history-limit 100000
	
	# modern colors
	set -g default-terminal "tmux-256color"
	set -ga terminal-overrides ",alacritty:Tc"
	
	# unbind the prefix and bind it to Ctrl-a like screen
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
	
	# copy to X clipboard
	bind -T copy-mode-vi v send -X begin-selection
	bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard &> /dev/null'
	bind -T copy-mode-vi Enter send-keys -X cancel
	
	# shortcut for moving tmux buffer to clipboard
	# useful if you've selected with the mouse
	bind-key -nr C-y run "tmux show-buffer | xclip -in -selection clipboard &> /dev/null"
	
	# Avoid ESC delay
	set -s escape-time 0
	
	# Fix titlebar
	set -g set-titles on
	set -g set-titles-string "#T"
	
	# VIM mode
	set -g mode-keys vi
	
	# Mouse friendly
	set -g mouse on
	
	# Move between panes with vi keys
	bind h select-pane -L
	bind j select-pane -D
	bind k select-pane -U
	bind l select-pane -R
	
	######################
	### DESIGN CHANGES ###
	######################
	
	# Avoid date/time taking up space
	set -g status-right ''
	set -g status-right-length 0
	
	# source-file ~/dev/others/base16/builder/templates/tmux/colors/base16-gruvbox-dark-hard.conf
	
6b5f3eb0ed04c42db7be91120a481860|file:///Users/mohamedbgassama/.tmux.conf|23|1|v|tmux
	bind-key -t vi-copy 'v' begin-selection
	bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
	
	
	
	
a0f9e75b20a1cc3cf3ba8ef5e8e0bbe3|file:///Users/mohamedbgassama/.config/nvim/init.vim|35|1|V|vim
	lug 'christoomey/vim-tmux-navigator'
b13311ab51c4c34757f67f26580018dd|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|63|17|v|yaml
	Windowed
6c028395dbd4dbd7588db2c5f5f8d99b|file:///Users/mohamedbgassama/.tmux.conf|18|4|^v|tmux
	w
	w
	w
4e958a0d106542e9caa02444adb27f56|file:///Users/mohamedbgassama/.tmux.conf|24|1|V|tmux
	bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
60e181f4350e9c4ec2ac7344ba236979|file:///Users/mohamedbgassama/.tmux.conf|23|1|V|tmux
	bind-key -t vi-copy 'v' begin-selection
8ff3cb0ce0bc5a20d736ba227c5966b7|file:///Users/mohamedbgassama/.tmux.conf|24|1|V|tmux
	bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
8bfe0889e23e1fb7525d20061a452f2c|file:///Users/mohamedbgassama/.config/fish/functions/fzf_key_bindings.fish|73|1|V|fish
	      if [ -n "$result" ]
	        cd $result
ad610e30cb84d2c12f401cf1c76872cb|file:///Users/mohamedbgassama/.config/fish/functions/fzf_key_bindings.fish|76|1|V|fish
	      end
	    end
874975ccf27e26f35cf18f34ff56d2cf|file:///Users/mohamedbgassama/.config/fish/functions/fzf_key_bindings.fish|77|1|V|fish
	    commandline -f repaint
	  end
f286ec99e27334e32b323327c8084fe6|file:///Users/mohamedbgassama/.config/fish/functions/fzf_key_bindings.fish|77|1|V|fish
	
	  function __fzfcmd
839499bb78e8154e5e87a41955a0fb0a|file:///Users/mohamedbgassama/.config/fish/functions/fzf_key_bindings.fish|77|5|V|fish
	    set -q FZF_TMUX; or set FZF_TMUX 0
d686653cbfac8d62ac1250ec29497ee7|file:///Users/mohamedbgassama/.config/fish/functions/fzf_key_bindings.fish|77|5|V|fish
	    set -q FZF_TMUX_HEIGHT; or set FZF_TMUX_HEIGHT 40%
	    if [ $FZF_TMUX -eq 1 ]
00d8afc753c64399ec655a65c30bca0f|file:///Users/mohamedbgassama/.config/fish/functions/tmux.fish|1|2|v|fish
	unct
452950d336685a3f7457fc1a252a1b32|file:///Users/mohamedbgassama/.tmux.conf|1|1|V|tmux
	# Default termtype. If the rcfile sets $TERM, that overrides this value.
393ae462c84f37d94062aac17f941121|file:///Users/mohamedbgassama/.tmux.conf|1|1|V|tmux
	set -g default-terminal screen-256color
02afa933c3b84e25fa6c4d5fa5e0ecad|file:///Users/mohamedbgassama/.tmux.conf|1|1|V|tmux
	
	# modern colors
c7fba2fad17de81e2d03168e7205494b|file:///Users/mohamedbgassama/.tmux.conf|18|1|V|tmux
	set -g mode-mouse on
7a6333bfb7cf9897bbf0520eb1e23f87|file:///Users/mohamedbgassama/.tmux.conf|20|1|v|tmux
	setw -g mouse-resize-pane on
	setw -g mouse-select-window on
	setw -g mouse-select-pane on
	
f1faae6918edbf18f9623f6a056cc38b|file:///Users/mohamedbgassama/.tmux.conf|51|1|v|tmux
	# Rename session and window
	
b2e6b2334ec5cc8ab294e71ef444b783|file:///Users/mohamedbgassama/.tmux.conf|48|1|V|tmux
	# Rename session and window
1a33f17239e2f26204c7d60eb7c8325f|file:///Users/mohamedbgassama/.tmux.conf|64|1|V|tmux
	unbind '"'
877ba43f13fd2a7cce1345e9095595fd|file:///Users/mohamedbgassama/.tmux.conf|42|1|v|tmux
	# Kill pane/window/session shortcuts
	unbind &
	
efb8713bf756d4cc74ecbb90679e8c63|file:///Users/mohamedbgassama/.tmux.conf|153|1|v|tmux
	# scrolling with terminal scroll bar
	set -g terminal-overrides 'xterm*:smcup@:rmcup@'
a021cb6c805e9248a3cb1a6cb790beb3|file:///Users/mohamedbgassama/.tmux.conf|90|1|v|tmux
	
	# Zoom pane
	unbind z # zoom-pane
	bind + resize-pane -Z
41078e2da188d45f0ac94f669361933e|file:///Users/mohamedbgassama/.tmux.conf|71|1|v|tmux
	# Select pane and windows
	unbind }    # swap-pane -D
	unbind {    # swap-pane -U
	unbind [    # paste-buffer
	unbind ]
	unbind "'"  # select-window
	unbind n    # next-window
	unbind p    # previous-window
	unbind l    # last-window
	bind -r C-[ previous-window
	bind -r C-] next-window
	bind -r [ select-pane -t :.-
	bind -r ] select-pane -t :.+
	bind -r Tab last-window   # cycle thru MRU tabs
	bind -r C-o swap-pane -D
	
	
6a2a1a6d1454de1420d0b41a624d1eb2|file:///Users/mohamedbgassama/.tmux.conf|41|1|v|tmux
	
	# Kill pane/window/session shortcuts
	unbind &  # kill-window
	bind x kill-pane
	bind X kill-window
	bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
	bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
85a3a0457ba78eb0a8ee524acbd17d8e|file:///Users/mohamedbgassama/.tmux.conf|36|1|v|tmux
	# Swap panes back and forth with 1st pane
	# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
	bind \ if '[ #{pane_index} -eq 1 ]' \
	     'swap-pane -s "!"' \
	     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'
f3e1be22b85dc7a4ccb37574c2a09b12|file:///Users/mohamedbgassama/.tmux.conf|157|19|v|tmux
	colour221
	
c3df4b1a70c420551a42bd1e555abf82|file:///Users/mohamedbgassama/.tmux.conf|158|1|V|tmux
	set Kdd-g message-bg colour221
5ccaa7ff8b34521d8fa13ce4751e687f|file:///Users/mohamedbgassama/.tmux.conf|158|1|V|tmux
	set -g message-attr bold
be54c68adda0639141564b740249a6ce|file:///Users/mohamedbgassama/.tmux.conf|153|26|v|tmux
	4
	set -g pane-border-style colour245
	set -g pane-active-border-style colour39
	set -g message-style fg=colour16, bg=colour221, attr=bold
	
bdd7d6b0f5603ba2b7bd89e3b028f90d|file:///Users/mohamedbgassama/.tmux.conf|149|1|v|tmux
	# color scheme (styled as vim-powerline)
	set -g status-left-length 52
	set -g status-right-length 451
	set -g status-fg white
	set -g status-bg colour234
	set -g pane-border-style colour245
	set -g pane-active-border-style colour39
	set -g message-style fg=colour16, bg=colour221, attr=bold
	
	# set -g status-left '#[fg=colour235,bg=colour252,bold] â #S #[fg=colour252,bg=colour238,nobold]â®€#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]â®€'
	# set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
	# set -g window-status-current-format "#[fg=colour234,bg=colour39]â®€#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]â®€"
	
	
12901ca8dc4335fea370ee05c417827c|file:///Users/mohamedbgassama/.tmux.conf|89|1|V|tmux
	set -g status-utf8 on                  # set utf-8 for the status bar
5f9b1877bb78299bc22f7058f938fea3|file:///Users/mohamedbgassama/.tmux.conf|70|1|V|tmux
		-option -g message-fg brightred #orange
4918c82be1d744c71e8be7cc72e42992|file:///Users/mohamedbgassama/.tmux.conf|162|1|v|tmux
	
	# Screen like binding for last window
	unbind l
	bind C-a last-window
ac4b95273646a3baf7132323cf8802e7|file:///Users/mohamedbgassama/.tmux.conf|29|1|v|tmux
	# Avoid ESC delay
	set -s escape-time 0
c2d864d454f5307d82f5b95c76f1286e|file:///Users/mohamedbgassama/.tmux.conf|41|1|v|tmux
	# Set the prefix to ^A.
	unbind C-b
	set -g prefix ^A
	bind a send-prefix
	
563969e72ec43c0d78fe1ab3398eb1ca|file:///Users/mohamedbgassama/.config/nvim/init.vim|34|1|v|vim
	
	
	" Emmet plugin for Html/css
	Plug 'mattn/emmet-vim'
	
	" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
	Plug 'junegunn/vim-easy-align'
	
	Plug 'Shougo/deoplete.nvim'
	
	" Multiple Plug commands can be written in a single line using | separators
	Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
	
	Plug 'airblade/vim-rooter'
	Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
	Plug 'junegunn/fzf.vim'
	
	" Semantic language support
	Plug 'neoclide/coc.nvim', {'branch': 'release'}
	
	" Syntactic language support
	Plug 'cespare/vim-toml'
	Plug 'stephpy/vim-yaml'
	Plug 'rust-lang/rust.vim'
	Plug 'rhysd/vim-clang-format'
	Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
	Plug 'dag/vim-fish'
	Plug 'godlygeek/tabular'
	Plug 'plasticboy/vim-markdown'
	
	
	" by default, if you open tsx file, neovim does not show syntax colors
	" vim-tsx will do all the coloring for jsx in the .tsx file
	Plug 'ianks/vim-tsx'
	
	" by default, if you open tsx file, neovim does not show syntax colors
	" typescript-vim will do all the coloring for typescript keywords
	Plug 'leafgarland/typescript-vim'
	
	call plug#end()
	
	if has('nvim')
	 " to enable mode shapes, "cursor" highlight, and blinking:
	    set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	           \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
		     \,sm:block-blinkwait175-blinkoff150-blinkon175
	
	
	    set inccommand=nosplit
	    noremap <C-q> :confirm qall<CR>
	end
	
	
	" deal with colors
	if !has('gui_running')
	  set t_Co=256
	endif
	if (match($TERM, "-256color") != -1) && (match($TERM, "screen-256color") == -1)
	  " screen does not (yet) support truecolor
	  set termguicolors
	endif
	" Colors
	set background=dark
	colorscheme 
b6d21fd4bd8f58c7445d41db2accf850|file:///Users/mohamedbgassama/.config/nvim/init.vim|97|1|V|vim
	colorscheme base16-gruvbox-dark-hard
782bafd8301262ba31fe8729d47b847f|file:///Users/mohamedbgassama/.tmux.conf|42|1|v|tmux
	# unbind the prefix and bind it to Ctrl-a like screen
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
50995e717cbf5613db77f94f12e87dd3|file:///Users/mohamedbgassama/.tmux.conf|41|1|v|tmux
	# Set the prefix to ^A.
	unbind C-b
	set -g prefix ^A
	bind a send-prefix
955227886a60a5ac98e3441aeae438f6|file:///Users/mohamedbgassama/.tmux.conf|2|26|v|tmux
	tmux-256color
95648c9974e3e270154183fd9bac600d|file:///Users/mohamedbgassama/.config/fish/config.fish|22|1|v|fish
	if [ -e /usr/bin/aurman ]
		abbr -a p 'aurman'
		abbr -a up 'aurman -Syu'
	else if [ -e /usr/bin/pacaur ]
		abbr -a p 'pacaur'
		abbr -a up 'pacaur -Syu'
	else if [ -e /usr/bin/yaourt ]
		abbr -a p 'yaourt'
		abbr -a up 'yaourt -Syu --aur'
	else
		abbr -a p 'sudo pacman'
		abbr -a up 'sudo pacman -Syu'
	end
	
e562972e40375e9594a039576670d54f|file:///Users/mohamedbgassama/.config/fish/config.fish|147|1|v|fish
	function pvm -d "Run nova/glance commands against the PDOS openstack service"
		switch $argv[1]
		case 'image-*'
			penv glance $argv
		case 'c'
			penv cinder $argv[2..-1]
		case 'g'
			penv glance $argv[2..-1]
		case '*'
			penv nova $argv
		end
	end
	
	
7347b3c153bf904aaf6b9b9c770486bf|file:///Users/mohamedbgassama/.config/fish/config.fish|186|2|v|fish
	echo -ne (\
			 addr show up scope global | \
				grep -E ': <|inet' | \
				sed \
					-e 's/^[[:digit:]]\+: //' \
					-e 's/: <.*//' \
					-e 's/.*inet[[:digit:]]* //' \
					-e 's/\/.*//'| \
				awk 'BEGIN {i=""} /\.|:/ {print i" "$0"\\\n"; next} // {i = $0}' | \
				sort | \
				column -t -R1 | \
				# public addresses are underlined for visibility \
				sed 's/ \([^ ]\+\)$/ \\\e[4m\1/' | \
				# private addresses are not \
				sed 's/m\(\(10\.\|172\.\(1[6-9]\|2[0-9]\|3[01]\)\|192\.168\.\).*\)/m\\\e[24m\1/' | \
				# unknown interfaces are cyan \
				sed 's/^\( *[^ ]\+\)/\\\e[36m\1/' | \
				# ethernet interfaces are normal \
				sed 's/\(\(en\|em\|eth\)[^ ]* .*\)/\\\e[39m\1/' | \
				# wireless interfaces are purple \
				sed 's/\(wl[^ ]* .*\)/\\\e[35m\1/' | \
				# wwan interfaces are yellow \
				sed 's/\(ww[^ ]* .*\).*/\\\e[33m\1/' | \
				sed 's/$/\\\e[0m/' | \
				sed 's/^/\t/' \
			)
712c4bb78cc0edf4a43fae319b6d38ad|file:///Users/mohamedbgassama/.config/fish/config.fish|187|1|V|fish
		echo
ec2431c77d870d3e1721ebe221536567|file:///Users/mohamedbgassama/.config/fish/config.fish|13|1|v|fish
	complete --command yaourt --wraps pacman
	complete --command aurman --wraps pacman
	complete --command pacaur --wraps pacman
	complete --command aurman --wraps pacman
	
31c792e509377766ec669d91c23dd30d|file:///Users/mohamedbgassama/.config/fish/config.fish|124|1|V|fish
	setenv LD_LIBRARY_PATH (rustc +nightly --print sysroot)"/lib:$LD_LIBRARY_PATH"
599eba19aa93a929cb8589f148b8a6c4|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|63|21|v|yaml
	screen
bba71d8e475979b9214a63027d52b992|file:///Users/mohamedbgassama/.config/nvim/init.vim|32|1|v|vim
	" post install (yarn install | npm install) then load plugin only for editing supported files
	Plug 'prettier/vim-prettier', {
	  \ 'do': 'yarn install',
	  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue', 'yaml', 'html'] }
	
d9f89a27faabca2f06aa790137c5f167|file:///Users/mohamedbgassama/.config/fish/config.fish|16|1|v|fish
	
	```bash
	
bbb5a8a3a03021a0f0e8ac72069bdd97|file:///Users/mohamedbgassama/.config/fish/config.fish|21|1|v|fish
	```bash
aa74e2ab804b3d8219551eeb35e1df35|file:///Users/mohamedbgassama/.config/fish/config.fish|46|1|v|fish
	```bash
	
26ad29d54d4ae56ce42791356c77a6d6|file:///Users/mohamedbgassama/.config/fish/config.fish|104|1|v|fish
	
	``` bash
	
48fb935d9a16c9b70a7e64180853b2ed|file:///Users/mohamedbgassama/.config/fish/config.fish|56|1|v|fish
	alias yof=
	
e87552d14b05260434bef4df814de8f1|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|109|13|v|yaml
	"Noto Sans Mono"
5d9b47bd3b65072e0d5daf55f01da086|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|109|24|v|yaml
	Mono
2bc49a157e67c92f7e9fcac66987e144|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|5|1|v|rust
	
	fn maybe_add_four(y: Option<i32>) -> Option<i32> {
	    y.map(|x| x + 4)
	}
c6a55801d65d296b26b0e082091554a6|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|2|1|V|rust
	    println!("Map 4 {:?}", maybe_add_four(Some(88)))
7d16389d80563bec7e55d8ad160fde9e|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|2|5|v|rust
	println
3182756eaf6f5a4a39616af82aba0c0c|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|2|4|V|rust
	    !("Map 4 {:?}", maybe_add_four(Some(88)))
ed8da9516f06110c6362c6e61b2331ea|file:///Users/mohamedbgassama/code/open-source/rust/src/librustc_lint/array_into_iter.rs|3|1|V|rust
	use rustc::ty::adjustment::{Adjust, Adjustment};
b8934e2c47f3e0aa166ba2f44f84fae3|file:///Users/mohamedbgassama/code/open-source/rust/src/librustc_lint/array_into_iter.rs|3|1|V|rust
	use rustc_errors::Applicability;
9af176a6bf78e2fd9711882f918dac29|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|3|5|V|rust
	    println!("Hello World");
d1a7fb5eab1c16cb4f7cf341cf188c3d|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|3|5|v|rust
	Hello 
f5a7924e621e84c9280a9a27e1bcb7f6|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|3|5|v|rust
	World
38b202765c34b30ca13fd08315dfb521|file:///Users/mohamedbgassama/.config/fish/config.fish|267|1|v|fish
	function fish_greeting
		echo
		echo -e (uname -ro | awk '{print " \\\\e[1mOS: \\\\e[0;32m"$0"\\\\e[0m"}')
		echo -e (uptime -p | sed 's/^up //' | awk '{print " \\\\e[1mUptime: \\\\e[0;32m"$0"\\\\e[0m"}')
		echo -e (uname -n | awk '{print " \\\\e[1mHostname: \\\\e[0;32m"$0"\\\\e[0m"}')
		echo -e " \\e[1mDisk usage:\\e[0m"
		echo
		echo -ne (\
			df -l -h | grep -E 'dev/(xvda|sd|mapper)' | \
			awk '{printf "\\\\t%s\\\\t%4s / %4s  %s\\\\n\n", $6, $3, $2, $5}' | \
			sed -e 's/^\(.*\([8][5-9]\|[9][0-9]\)%.*\)$/\\\\e[0;31m\1\\\\e[0m/' -e 's/^\(.*\([7][5-9]\|[8][0-4]\)%.*\)$/\\\\e[0;33m\1\\\\e[0m/' | \
			paste -sd ''\
		)
		echo
	
		echo -e " \\e[1mNetwork:\\e[0m"
		echo
		# http://tdt.rocks/linux_network_interface_naming.html
		echo -ne (\
			"ip addr show up scope global" | \
				grep -E ': <|inet' | \
				sed \
					-e 's/^[[:digit:]]\+: //' \
					-e 's/: <.*//' \
					-e 's/.*inet[[:digit:]]* //' \
					-e 's/\/.*//'| \
				awk 'BEGIN {i=""} /\.|:/ {print i" "$0"\\\n"; next} // {i = $0}' | \
				sort | \
				column -t -R1 | \
				# public addresses are underlined for visibility \
				sed 's/ \([^ ]\+\)$/ \\\e[4m\1/' | \
				# private addresses are not \
				sed 's/m\(\(10\.\|172\.\(1[6-9]\|2[0-9]\|3[01]\)\|192\.168\.\).*\)/m\\\e[24m\1/' | \
				# unknown interfaces are cyan \
				sed 's/^\( *[^ ]\+\)/\\\e[36m\1/' | \
				# ethernet interfaces are normal \
				sed 's/\(\(en\|em\|eth\)[^ ]* .*\)/\\\e[39m\1/' | \
				# wireless interfaces are purple \
				sed 's/\(wl[^ ]* .*\)/\\\e[35m\1/' | \
				# wwan interfaces are yellow \
				sed 's/\(ww[^ ]* .*\).*/\\\e[33m\1/' | \
				sed 's/$/\\\e[0m/' | \
				sed 's/^/\t/' \
			)
		echo
	
		set r (random 0 100)
		if [ $r -lt 5 ] # only occasionally show backlog (5%)
			echo -e " \e[1mBacklog\e[0;32m"
			set_color blue
			echo "  [project] <description>"
			echo
		end
	
		set_color normal
		echo -e " \e[1mTODOs\e[0;32m"
		echo
		if [ $r -lt 10 ]
			# unimportant, so show rarely
			set_color cyan
			# echo "  [project] <description>"
		end
		if [ $r -lt 25 ]
			# back-of-my-mind, so show occasionally
			set_color green
			# echo "  [project] <description>"
		end
		if [ $r -lt 50 ]
			# upcoming, so prompt regularly
			set_color yellow
			# echo "  [project] <description>"
		end
	
		# urgent, so prompt always
		set_color red
		# echo "  [project] <description>"
	
		echo
	
		if test -s ~/todo
			set_color magenta
			cat todo | sed 's/^/ /'
			echo
		end
	
		set_color normal
	end
	
5eaeb1b36f402fbb585fe83553e79d3d|file:///Users/mohamedbgassama/.config/fish/config.fish|266|1|V|fish
	set fish_greeting
eb985046ace2f4f4687b6c3b416b40eb|file:///Users/mohamedbgassama/.config/fish/config.fish|7|1|V|fish
	abbr -a ct 'cargo t'
f34e8ffa9ffe1de5b3cb7b2f5ad105f1|file:///Users/mohamedbgassama/.config/nvim/init.vim|352|1|V|vim
	inoremap <Cj> <Esc>
08c4f7d1a70fc3ab14d0b63382b264f0|file:///Users/mohamedbgassama/.config/nvim/init.vim|355|1|V|vim
	inodremap <C-k> <Esc>
94c0fd9c076a40cf76a5105271719420|file:///Users/mohamedbgassama/.config/nvim/init.vim|363|1|v|vim
	nnoremap <C-c> <Esc>
	inoremap <C-c> <Esc>
	vnoremap <C-c> <Esc>
	snoremap <C-c> <Esc>
	xnoremap <C-c> <Esc>
	cnoremap <C-c> <Esc>
	onoremap <C-c> <Esc>
	lnoremap <C-c> <Esc>
	tnoremap <C-c> <Esc>
550911f4583d6e1bb6642c068bc687ee|file:///Users/mohamedbgassama/.config/nvim/init.vim|354|1|V|vim
	nnoremap <C-k> <Esc>
0a1c0fd33e4e08a77e07a8e062ee2ad3|file:///Users/mohamedbgassama/.config/nvim/init.vim|355|1|v|vim
	snoremap <C-k> <Esc>
	xnoremap <C-k> <Esc>
	
fccda03b2a4ea915c411cb55cbe1f98f|file:///Users/mohamedbgassama/.config/nvim/init.vim|356|1|v|vim
	onoremap <C-k> <Esc>
	lnoremap <C-k> <Esc>
	tnoremap <C-k> <Esc>
	
ddbb909c340e2c45cd8797f81ab3c8b1|file:///Users/mohamedbgassama/.config/nvim/init.vim|305|1|v|vim
	nnoremap 
13dad85518090d7fed8bb55af841a78e|file:///Users/mohamedbgassama/.config/nvim/init.vim|129|1|v|vim
	nmap 
936a08466626ac39596dfe3c2d60a8d7|file:///Users/mohamedbgassama/.config/nvim/init.vim|130|1|v|vim
	vmap
7c0132070a0ef71d542663e9dc1f5dee|file:///Users/mohamedbgassama/.config/nvim/init.vim|188|1|v|vim
	nmap
6367f3004f6614ccf7df7daf39e4ab12|file:///Users/mohamedbgassama/.config/nvim/init.vim|3|18|v|vim
	\<Space>
7f57b962b9253c61e31f25d5657af67e|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|187|5|v|yaml
	background: '0x1d2021'
	    foreground: '0xd5c4a1'
4524cbffafb812a523e3b1e7abe5fafa|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|187|4|v|yaml
	 background: '0x1d2021'
	    foreground: '0xd5c4a1'
	
01d9101fafa4d789f779524776a1cca9|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|203|4|v|yaml
	 text: '0x1d2021'
	    cursor: '0xd5c4a1'
	
	
1369212c27543ae19abda12f6b666358|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|203|4|v|yaml
	 text: '0x1d2021'
	    cursor: '0xd5c4a1'
b5b9c3a058d3a2d3be454ac83201b4b4|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|216|3|v|yaml
	  black:   '0x1d2021'
	    red:     '0xfb4934'
	    green:   '0xb8bb26'
	    yellow:  '0xfabd2f'
	    blue:    '0x83a598'
	    magenta: '0xd3869b'
	    cyan:    '0x8ec07c'
	    white:   '0xd5c4a1'
	
4a89b0111668c7764bd7dd1c23820e07|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|227|4|v|yaml
	 black:   '0x665c54'
	    red:     '0xfb4934'
	    green:   '0xb8bb26'
	    yellow:  '0xfabd2f'
	    blue:    '0x83a598'
	    magenta: '0xd3869b'
	    cyan:    '0x8ec07c'
	    white:   '0xfbf1c7'
951feac7229eddd3ff7b07a94256a05a|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|63|5|v|yaml
	artup_mode:
49d903a5c02560cf79bf6b516cc89457|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|63|17|v|yaml
	Maximized
3e7c31e8d9990dda4af2a8b142ef3190|file:///Users/mohamedbgassama/.config/nvim/init.vim|25|1|v|vim
	" A fancy start screen for NeoVim.
	Plug 'mhinz/vim-startify'
a72327c2d9d0669c2701af2e406bca88|file:///Users/mohamedbgassama/.config/nvim/init.vim|37|1|v|vim
	" Emmet plugin for Html/css
	Plug 'mattn/emmet-vim'
afa2631be8c392f5bafd8a3641265938|file:///Users/mohamedbgassama/.config/nvim/init.vim|83|1|v|vim
	
	if has('nvim')
	 " to enable mode shapes, "cursor" highlight, and blinking:
	    set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	           \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
		     \,sm:block-blinkwait175-blinkoff150-blinkon175
	
	
	    set inccommand=nosplit
	    noremap <C-q> :confirm qall<CR>
	end
	
	
8d61bc1e7ef17bf860a27a047d356510|file:///Users/mohamedbgassama/.config/nvim/init.vim|44|1|v|vim
	" Dark powered asynchronous unite all interfaces for NeoVim/Vim.
	if has('nvim')
	  Plug 'Shougo/denite.nvim', { 'do': ':UpdateRemotePlugins' }
	else
	  Plug 'Shougo/denite.nvim'
	  Plug 'roxma/nvim-yarp'
	  Plug 'roxma/vim-hug-neovim-rpc'
	endif
6deb50b6b5c253ce285b08af2dc46ee1|file:///Users/mohamedbgassama/.config/nvim/init.vim|76|1|v|vim
	" Define mappings denite
	autocmd FileType denite call s:denite_my_settings()
	function! s:denite_my_settings() abort
	  nnoremap <silent><buffer><expr> <CR>
	  \ denite#do_map('do_action')
	  nnoremap <silent><buffer><expr> d
	  \ denite#do_map('do_action', 'delete')
	  nnoremap <silent><buffer><expr> p
	  \ denite#do_map('do_action', 'preview')
	  nnoremap <silent><buffer><expr> q
	  \ denite#do_map('quit')
	  nnoremap <silent><buffer><expr> i
	  \ denite#do_map('open_filter_buffer')
	  nnoremap <silent><buffer><expr> <Space>
	  \ denite#do_map('toggle_select').'j'
	endfunction
	
	
ff3420905f2b6d121b1018c106718fdc|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|35|1|v|vim
	Plug 'easymotion/vim-easymotion'
7625a307189db9cb6e538a2087f72cd3|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|27|1|v|vim
	
	" Trailing whitespace highlighting & automatic fixing
	Plug 'ntpeters/vim-better-whiespace'
	
	" auto-close plugin
	Plug 'rstacruz/vim-closer'
	
	" Improved motion in Vim
	P
3cb31f2b9ccc15b3ec258eee8d47a430|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|30|15|v|vim
	
	/
	im-matchupz'
9eeb696491734087fd7ed8351ccdbf7e|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|30|1|V|vim
	Plug 'andymass
5d3ce0f4dce11579dd45f3a7d2c90522|file:///Users/mohamedbgassama/.config/nvim/init.vim|15|1|v|vim
	" VIM enhancements
	Plug 'ciaranm/securemodelines'
	Plug 'editorconfig/editorconfig-vim'
	Plug 'justinmk/vim-sneak'
	
	" GUI enhancements
	Plug 'itchyny/lightline.vim'
	Plug 'machakann/vim-highlightedyank'
	Plug 'andymass/vim-matchup'
044c9c72cf7b9b9876ade64465a90255|file:///Users/mohamedbgassama/.config/nvim/init.vim|14|1|V|vim
	" Load plugins
	
	
c56a267472c059648e162962f238b655|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|25|1|v|vim
	Plug 'ciaranm/securemodelines'
	plug 'editorconfig/editorconfig-vim'
	
	" Gui enhanements
	Plug 'machakann/vim-highlightedyank'
	k:`
	
	
c36471c247cee0c697c124aa814eafb5|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|24|1|v|vim
	" Vim enhanements
	Plug 'ciaranm/securemodelines'
	plug 'editorconfig/editorconfig-vim'
	
	" Gui enhanements
	Plug 'machakann/vim-highlightedyank'
	k:`
b17b570fc3a14c35953c21729e8ee8a0|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|1|1|v|vim
	" ============================================================================ "
	" ===                               PLUGINS                                === "
	" ============================================================================ "
	
	" check whether vim-plug is installed and install it if necessary
	let plugpath = expand('<sfile>:p:h'). '/autoload/plug.vim'
	if !filereadable(plugpath)
	    if executable('curl')
	        let plugurl = 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
	        call system('curl -fLo ' . shellescape(plugpath) . ' --create-dirs ' . plugurl)
	        if v:shell_error
	            echom "Error downloading vim-plug. Please install it manually.\n"
	            exit
	        endif
	    else
	        echom "vim-plug not installed. Please install it manually or install curl.\n"
	        exit
	    endif
	endif
	
	call plug#begin('~/.config/nvim/plugged')
	
	" === Editing Plugins === "
	" Vim enhanements
	Plug 'ciaranm/securemodelines'
	plug 'editorconfig/editorconfig-vim'
	
	" Gui enhanements
	Plug 'machakann/vim-highlightedyank'
	Plug 'andymass/vim-matchup'
	
	" Trailing whitespace highlighting & automatic fixing
	Plug 'ntpeters/vim-better-whiespace'
	
	" auto-close plugin
	Plug 'rstacruz/vim-closer'
	
	" Improved motion in Vim
	P
	" Trailing whitespace highlighting & automatic fixing
	Plug 'ntpeters/vim-better-whiespace'
	
	" auto-close plugin
	Plug 'rstacruz/vim-closer'
	
	" Improved motion in Vim
	P
	" Trailing whitespace highlighting & automatic fixing
	Plug 'ntpeters/vim-better-whiespace'
	
	" auto-close plugin
	Plug 'rstacruz/vim-closer'
	
	" Improved motion in Vim
	Plug 'easymotion/vim-easymotion'
	
	" Intellisense Engine
	Plug 'neoclide/coc.nvim', {'branch': 'release'}
	
	" Denite - Fuzzy finding, buffer management
	Plug 'Shougo/denite.nvim'
	
	" Snippet support
	Plug 'Shougo/neosnippet'
	Plug 'Shougo/neosnippet-snippets'
	
	" Print function signatures in echo area
	Plug 'Shougo/echodoc.vim'
	
	" === Git Plugins === "
	" Enable git changes to be shown in sign column
	Plug 'mhinz/vim-signify'
	Plug 'tpope/vim-fugitive'
	
	" === Javascript Plugins === "
	" Typescript syntax highlighting
	Plug 'HerringtonDarkholme/yats.vim'
	
	" ReactJS JSX syntax highlighting
	Plug 'mxw/vim-jsx'
	
	" Emmet plugin for HTML/CSS
	Plug 'mattn/emmet-vim'
	
	" Generate JSDoc commands based on function signature
	Plug 'heavenshell/vim-jsdoc'
	
	" === Syntax Highlighting === "
	
	" Syntax highlighting for nginx
	Plug 'chr4/nginx.vim'
	
	" Syntax highlighting for javascript libraries
	Plug 'othree/javascript-libraries-syntax.vim'
	
	" Improved syntax highlighting and indentation
	Plug 'othree/yajs.vim'
	
	" === UI === "
	" File explorer
	Plug 'scrooloose/nerdtree'
	
	" Colorscheme
	Plug 'mhartington/oceanic-next'
	
	" Customized vim status line
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
	
	" Icons
	Plug 'ryanoasis/vim-devicons'
	Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
	
	" Initialize plugin system
	call plug#end()
78cec8df17fc40ed222267f14ebab66e|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|26|2|v|vim
	
	zsecuremodelines'
	
bcab3366bd272cfa3f01a6f8b10c2c2a|file:///Users/mohamedbgassama/.config/nvim/init.vim|15|1|v|vim
	" VIM enhancements
	Plug 'ciaranm/securemodelines'
	Plug 'editorconfig/editorconfig-vim'
	Plug 'justinmk/vim-sneak'
	
	" GUI enhancements
	Plug 'itchyny/lightline.vim'
	Plug 'machakann/vim-highlightedyank'
	Plug 'andymass/vim-matchup'
	
	
894d6dbcab09cf90f69a458e2de62b33|file:///Users/mohamedbgassama/.config/nvim/init.vim|41|1|v|vim
	
	" Semantic language support
	Plug 'neoclide/coc.nvim', {'branch': 'release'}
617647ba5ac5ce1b3a95bf7a07b1a6b1|file:///Users/mohamedbgassama/.config/nvim/init.vim|54|1|v|vim
	" by default, if you open tsx file, neovim does not show syntax colors
	" vim-tsx will do all the coloring for jsx in the .tsx file
	Plug 'ianks/vim-tsx'
	
	
492d9cf5ae27a021544b72075a352873|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|77|3|v|vim
	Typescript 
ce89cbf2957b5e9690b1edc18c502b08|file:///Users/mohamedbgassama/.config/nvim/init.vim|54|1|v|vim
	" by default, if you open tsx file, neovim does not show syntax colors
	" typescript-vim will do all the coloring for typescript keywords
	Plug 'leafgarland/typescript-vim'
	
	
657d83e1b31097ff568ab5a191f21542|file:///Users/mohamedbgassama/.config/nvim/init.vim|17|1|v|vim
	" The NERDTree is a file system explorer for the Vim editor
	Plug 'Xuyuanp/nerdtree-git-plugin'
c6551415720f6bd4e91292e8f08bbffd|file:///Users/mohamedbgassama/.config/nvim/init.vim|17|1|v|vim
	
	Plug 'jiangmiao/auto-pairs'
	
c1d2d346afb29e74ff58932f35784a2d|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|77|1|v|vim
	" Syntax highlighting for Typescript
	plug 'leafgarland/typescript-vim'
	
caaaa865c53f451209f51b317d50c828|file:///Users/mohamedbgassama/.config/nvim/init.vim|17|1|v|vim
	
	" post install (yarn install | npm install) then load plugin only for editing supported files
	Plug 'prettier/vim-prettier', {
	  \ 'do': 'yarn install',
	  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue', 'yaml', 'html'] }
	
	
	
5c693e74cef1e04b573ae169ed88470b|file:///Users/mohamedbgassama/.config/nvim/init.vim|20|1|v|vim
	Plug 'junegunn/vim-easy-align'
5639cd08f863edd1c0c648d5ee400d35|file:///Users/mohamedbgassama/.config/nvim/init.vim|13|1|v|vim
	
	" Load plugins
	
	
	
	
	" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
	
	Plug 'Shougo/deoplete.nvim'
	
	
016da3edf7fd5b518552482e5767b1b8|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|39|1|v|vim
	Plug rhysd
	/
	vim-clang-format
	
e4db157ff1110606f3bec27539c9dc7a|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|43|1|v|vim
	plasticboy/vim-markdown
	
c3f07eebd138a75da95d2245620b69f4|file:///Users/mohamedbgassama/.config/nvim/init.vim|12|1|v|vim
	call plug#begin()
	
	
	" Multiple Plug commands can be written in a single line using | separators
	Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
	
	Plug 'airblade/vim-rooter'
	Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
	Plug 'junegunn/fzf.vim'
	
	
	" Syntactic language support
	Plug 'cespare/vim-toml'
	Plug 'stephpy/vim-yaml'
	Plug 'rust-lang/rust.vim'
	Plug 'rhysd/vim-clang-format'
	Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
	Plug 'dag/vim-fish'
	Plug 'godlygeek/tabular'
	Plug 'plasticboy/vim-markdown'
	
	
	call plug#end()
20969a8b0ef7bab838244c583dbd962b|file:///Users/mohamedbgassama/.config/nvim/init.vim|12|1|v|vim
	call plug#begin()
	
	" Load plugins
	" VIM enhancements
	Plug 'ciaranm/securemodelines'
	Plug 'editorconfig/editorconfig-vim'
	Plug 'justinmk/vim-sneak'
	
	" GUI enhancements
	Plug 'itchyny/lightline.vim'
	Plug 'machakann/vim-highlightedyank'
	Plug 'andymass/vim-matchup'
	
	" A fancy start screen for NeoVim.
	Plug 'mhinz/vim-startify'
	
	" The NERDTree is a file system explorer for the Vim editor
	Plug 'Xuyuanp/nerdtree-git-plugin'
	Plug 'jiangmiao/auto-pairs'
	
	" post install (yarn install | npm install) then load plugin only for editing supported files
	Plug 'prettier/vim-prettier', {
	  \ 'do': 'yarn install',
	  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue', 'yaml', 'html'] }
	
	
	" Emmet plugin for Html/css
	Plug 'mattn/emmet-vim'
	
	" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
	Plug 'junegunn/vim-easy-align'
	Plug 'Shougo/deoplete.nvim'
	
	" Dark powered asynchronous unite all interfaces for NeoVim/Vim.
	if has('nvim')
	  Plug 'Shougo/denite.nvim', { 'do': ':UpdateRemotePlugins' }
	else
	  Plug 'Shougo/denite.nvim'
	  Plug 'roxma/nvim-yarp'
	  Plug 'roxma/vim-hug-neovim-rpc'
	endif
	
	" Multiple Plug commands can be written in a single line using | separators
	Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
	
	Plug 'airblade/vim-rooter'
	Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
	Plug 'junegunn/fzf.vim'
	
	" Semantic language support
	Plug 'neoclide/coc.nvim', {'branch': 'release'}
	
	" Syntactic language support
	Plug 'cespare/vim-toml'
	Plug 'stephpy/vim-yaml'
	Plug 'rust-lang/rust.vim'
	Plug 'rhysd/vim-clang-format'
	Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
	Plug 'dag/vim-fish'
	Plug 'godlygeek/tabular'
	Plug 'plasticboy/vim-markdown'
	
	
	" by default, if you open tsx file, neovim does not show syntax colors
	" vim-tsx will do all the coloring for jsx in the .tsx file
	Plug 'ianks/vim-tsx'
	
	" by default, if you open tsx file, neovim does not show syntax colors
	" typescript-vim will do all the coloring for typescript keywords
	Plug 'leafgarland/typescript-vim'
	
	call plug#end()
	
000bf6b6284f66cbd2179907910ecdaf|file:///Users/mohamedbgassama/.config/nvim/init.vim|13|1|v|vim
	if has('nvim')
	 " to enable mode shapes, "cursor" highlight, and blinking:
	    set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
	           \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
		     \,sm:block-blinkwait175-blinkoff150-blinkon175
	
	
	    set inccommand=nosplit
	    noremap <C-q> :confirm qall<CR>
	end
	
	" Define mappings denite
	autocmd FileType denite call s:denite_my_settings()
	function! s:denite_my_settings() abort
	  nnoremap <silent><buffer><expr> <CR>
	  \ denite#do_map('do_action')
	  nnoremap <silent><buffer><expr> d
	  \ denite#do_map('do_action', 'delete')
	  nnoremap <silent><buffer><expr> p
	  \ denite#do_map('do_action', 'preview')
	  nnoremap <silent><buffer><expr> q
	  \ denite#do_map('quit')
	  nnoremap <silent><buffer><expr> i
	  \ denite#do_map('open_filter_buffer')
	  nnoremap <silent><buffer><expr> <Space>
	  \ denite#do_map('toggle_select').'j'
	endfunction
	
0ec6be92f04ad55ea930667d27a9cb80|file:///Users/mohamedbgassama/.config/nvim/init.vim|11|1|v|vim
	set rtp+=~/dev/others/base16/builder/templates/vim/
f76d4d78416114b954a19668705cad85|file:///Users/mohamedbgassama/.config/nvim/init.vim|8|1|v|vim
	" Load vundle
e5103ea2b882a33efae362e433b3ceb7|file:///Users/mohamedbgassama/.config/nvim/init.vim|54|1|v|vim
	nnoremap <C-n> :NERDTreeToggle<CR>
	vnoremap ++ <plug>NERDCommenterToggle
	nnoremap ++ <plug>NERDCommenterToggle
00061a841e9ce10cb2176085cf374295|file:///Users/mohamedbgassama/.config/nvim/init.vim|56|1|v|vim
	" open NERDTree automatically
	let g:NERDTreeIndicatorMapCustom = {
	\ "Modified"  : "✹",
	\ "Staged"    : "✚",
	\ "Untracked" : "✭",
	\ "Renamed"   : "➜",
	\ "Unmerged"  : "═",
	\ "Deleted"   : "✖",
	\ "Dirty"     : "✗",
	\ "Clean"     : "✔︎",
	\ 'Ignored'   : '☒',
	\ "Unknown"   : "?"
	\ }
	
	let g:NERDTreeIgnore = ['^node_modules$']
be64de92417e783a0511a62a968314c8|file:///Users/mohamedbgassama/.config/nvim/init.vim|58|1|v|vim
	let base16colorspace=256
	let g:base16_shell_path="~/dev/others/base16/builder/templates/shell/scripts/"
	
	" Lightline
	" let g:lightline = { 'colorscheme': 'wombat' }
	let g:lightline = {
	\ 'component_function': {
	\   'filename': 'LightlineFilename',
	\ },
	\ }
	
9ff8c94e86232ec814aaf7d67878317c|file:///Users/mohamedbgassama/.config/nvim/init.vim|57|1|v|vim
	
	function! LightlineFilename()
	return expand('%:t') !=# '' ? @% : '[No Name]'
	endfunction
cc678dee5ec53818635d682341eee306|file:///Users/mohamedbgassama/.config/nvim/init.vim|113|1|v|vim
	" Enable Pretttier
	nnoremap <Leader>py <Plug>(Prettier)
52749456426049b6a57feef0bff2e1cb|file:///Users/mohamedbgassama/.config/nvim/init.vim|389|1|v|vim
	
	" =============================================================================
	" # Autocommands
	" =============================================================================
	
	" Prevent accidental writes to buffers that shouldn't be edited
	autocmd BufRead *.orig set readonly
	autocmd BufRead *.pacnew set readonly
	
	" Leave paste mode when leaving insert mode
	autocmd InsertLeave * set nopaste
	
	" Jump to last edit position on opening file
	if has("autocmd")
	  " https://stackoverflow.com/questions/31449496/vim-ignore-specifc-file-in-autocommand
	  au BufReadPost * if expand('%:p') !~# '\m/\.git/' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
	endif
	
	" Follow Rust code style rules
	au Filetype rust source ~/.config/nvim/scripts/spacetab.vim
	au Filetype rust set colorcolumn=100
	
	" Help filetype detection
	autocmd BufRead *.plot set filetype=gnuplot
	autocmd BufRead *.md set filetype=markdown
	autocmd BufRead *.lds set filetype=ld
	autocmd BufRead *.tex set filetype=tex
	autocmd BufRead *.trm set filetype=c
	autocmd BufRead *.xlsx.axlsx set filetype=ruby
	
	" Script plugins
	autocmd Filetype html,xml,xsl,php source ~/.config/nvim/scripts/closetag.vim
	
	" =============================================================================
	" # Footer
	" =============================================================================
	
	" nvim
	if has('nvim')
		runtime! plugin/python_setup.vim
	endif
a1b68a6260129d11f829d4c2e252d142|file:///Users/mohamedbgassama/.config/nvim/init.vim|268|1|v|vim
	" ; as :
	nnoremap ; :
	
	" Ctrl+c and Ctrl+j as Esc
	" Ctrl-j is a little awkward unfortunately:
	" https://github.com/neovim/neovim/issues/5916
	" So we also map Ctrl+k
	inoremap jk <Esc>
	vnoremap jk <Esc>
	cnoremap jk <Esc>
	
	
	" " Copy to clipboard
	vnoremap  <leader>y  "+y
	nnoremap  <leader>Y  "+yg_
	nnoremap  <leader>y  "+y
	nnoremap  <leader>yy  "+yy
	
	" " Paste from clipboard
	nnoremap <leader>p "+p
	nnoremap <leader>P "+P
	vnoremap <leader>p "+p
	vnoremap <leader>P "+P
	
	
	" Ctrl+h to stop searching
	vnoremap <C-h> :nohlsearch<cr>
	nnoremap <C-h> :nohlsearch<cr>
	
	" Suspend with Ctrl+f
	inoremap <C-f> :sus<cr>
	vnoremap <C-f> :sus<cr>
	nnoremap <C-f> :sus<cr>
	
	" Jump to start and end of line using the home row keys
	map H ^
	map L $
	
	" Neat X clipboard integration
	" ,p will paste clipboard into buffer
	" ,c will copy entire buffer into clipboard
	noremap <leader>p :read !xsel --clipboard --output<cr>
	noremap <leader>c :w !xsel -ib<cr><cr>
	
	" <leader>s for Rg search
	noremap <leader>s :Rg
	
7b123446728d732b4a67d45c11ddb327|file:///Users/mohamedbgassama/.config/nvim/init.vim|286|1|v|vim
	
	" Open new file adjacent to current file
	nnoremap <leader>e :e <C-R>=expand("%:p:h") . "/" <CR>
	
	" No arrow keys --- force yourself to use the home row
	nnoremap <up> <nop>
	nnoremap <down> <nop>
	inoremap <up> <nop>
	inoremap <down> <nop>
	inoremap <left> <nop>
	inoremap <right> <nop>
	
	" Left and right can switch buffers
	nnoremap <left> :bp<CR>
	nnoremap <right> :bn<CR>
	
	" Move by line
	nnoremap j gj
	nnoremap k gk
	
	" 'Smart' nevigation
	nmap <silent> E <Plug>(coc-diagnostic-prev)
	nmap <silent> W <Plug>(coc-diagnostic-next)
	nmap <silent> <leader>l <Plug>(coc-diagnostic-info)
	nmap <silent> gd <Plug>(coc-definition)
	nmap <silent> gy <Plug>(coc-type-definition)
	nmap <silent> gi <Plug>(coc-implementation)
	nmap <silent> gr <Plug>(coc-references)
	
e97ab3fbc2399329b7508dbfa2607ffb|file:///Users/mohamedbgassama/.config/nvim/init.vim|286|1|v|vim
	" Use K to show documentation in preview window
	nnoremap <silent> K :call <SID>show_documentation()<CR>
	function! s:show_documentation()
	  if (index(['vim','help'], &filetype) >= 0)
	    execute 'h '.expand('<cword>')
	  else
	    call CocAction('doHover')
	  endif
	endfunction
	" nmap <silent> F <Plug>(ale_lint)
	" nmap <silent> <C-l> <Plug>(ale_detail)
	" nmap <silent> <C-g> :close<cr>
	
	
	" <leader><leader> toggles between buffers
	nnoremap <leader><leader> <c-^>
	
	" <leader>, shows/hides hidden characters
	nnoremap <leader>, :set invlist<cr>
	
	" <leader>q shows stats
	nnoremap <leader>q g<c-g>
	
	" Keymap for replacing up to next _ or -
	noremap <leader>m ct_
	
	" I can type :help on my own, thanks.
	map <F1> <Esc>
	imap <F1> <Esc>
541aba02078cb5ea7d857cde44e354fe|file:///Users/mohamedbgassama/.config/nvim/init.vim|152|1|v|vim
	" Golang
	let g:go_play_open_browser = 0
	let g:go_fmt_fail_silently = 1
	let g:go_fmt_command = "goimports"
	let g:go_bin_path = expand("~/dev/go/bin")
c09a467ad198f0df19e5185d30b2cb9c|file:///Users/mohamedbgassama/.config/nvim/init.vim|154|1|v|vim
	" Use deoplete.
	let g:deoplete#enable_at_startup = 1
	
	let g:user_emmet_install_global = 0
	autocmd FileType html,css EmmetInstall
8f5549cb9af7146a85ffe4896761c0bd|file:///Users/mohamedbgassama/.config/nvim/init.vim|118|1|v|vim
	" racer + rust
	" https://gi:splitthub.com/rust-lang/rust.vim/issues/192
	let g:rustfmt_autosave = 1
	let g:rustfmt_emit_files = 1
	let g:rustfmt_fail_silently = 0
	let g:rust_clip_command = 'xclip -selection clipboard'
	"let g:racer_cmd = "/usr/bin/racer"
	"let g:racer_experimental_completer = 1
	let $RUST_SRC_PATH = systemlist("rustc --print sysroot")[0] . "/lib/rustlib/src/rust/src"
	
826b31a35a4101ee6ce03ebb3ce86659|file:///Users/mohamedbgassama/.config/nvim/init.vim|32|1|v|vim
	" vim-prettier
	" prettier command for coc
	command! -nargs=0 Prettier :CocCommand prettier.formatFile
	" run prettier on save
	let g:prettier#autoformat = 1
	let g:prettier#autoformat_config_present = 1
	"autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue,*.yaml,*.html PrettierAsync
	
	
493839325708335c7f89acca0059ba70|file:///Users/mohamedbgassama/.config/nvim/init.vim|28|1|v|vim
	" Plugin settings
	 nnoremap <C-j> :PlugInstall<CR>
	 nnoremap <C-k> :PlugUpdate<CR>
	
	
ab32320700054ee890d90a447ca53f8f|file:///Users/mohamedbgassama/.config/nvim/init.vim|28|1|v|vim
	let g:secure_modelines_allowed_items = [
		\ "textwidth",   "tw",
		\ "softtabstop", "sts",
		\ "tabstop",     "ts",
		\ "shiftwidth",  "sw",
		\ "expandtab",   "et",   "noexpandtab", "noet",
		\ "filetype",    "ft",
		\ "foldmethod",  "fdm",
		\ "readonly",    "ro",   "noreadonly", "noro",
		\ "rightleft",   "rl",   "norightleft", "norl",
		\ "colorcolumn"
		\ ]
d0222415006de6edf585d53a420a881a|file:///Users/mohamedbgassama/.config/nvim/init.vim|34|1|v|vim
	
	let base16colorspace=256
	let g:base16_shell_path="~/dev/others/base16/builder/templates/shell/scripts/"
	
	
7831a7e9b65cac2a519fc1882ba140e7|file:///Users/mohamedbgassama/.config/nvim/init.vim|34|1|v|vim
	" Lightline
	" let g:lightline = { 'colorscheme': 'wombat' }
	let g:lightline = {
	\ 'component_function': {
	\   'filename': 'LightlineFilename',
	\ },
	\ }
fde3361e9f554c9e07d6c685d12c8754|file:///Users/mohamedbgassama/.config/nvim/init.vim|33|1|v|vim
	
	
	function! LightlineFilename()
	return expand('%:t') !=# '' ? @% : '[No Name]'
	endfunction
56dfe1969a5f221803a199d730a7c3e2|file:///Users/mohamedbgassama/.config/nvim/init.vim|158|1|v|vim
	" Search results centered please
	nnoremap <silent> n nzz
	nnoremap <silent> N Nzz
	nnoremap <silent> * *zz
	nnoremap <silent> # #zz
	nnoremap <silent> g* g*zz
	
	" Very magic by default
	nnoremap ? ?\v
	nnoremap / /\v
	cnoremap %s/ %sm/
f56413ce2b3d6da44ac559c90ec6dedc|file:///Users/mohamedbgassama/.config/nvim/init.vim|55|1|v|vim
	" Open hotkeys
	map <C-p> :Files<CR>
	nnoremap <leader>; :Buffers<CR>
	
	" Quick-save
	nnoremap <leader>w :w!<CR>
1783d7198faae05c7940e227bb5a7f5d|file:///Users/mohamedbgassama/.config/nvim/init.vim|33|1|v|vim
	
	
	" from http://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/
	if executable('ag')
	set grepprg=ag\ --nogroup\ --nocolor
	endif
	if executable('rg')
	set grepprg=rg\ --no-heading\ --vimgrep
	set grepformat=%f:%l:%c:%m
	endif
85bd71ef7663b92f459fc90366b28d6b|file:///Users/mohamedbgassama/.config/nvim/init.vim|94|1|v|vim
	set hidden
9105df28cd6afeeebf24a124d7fec300|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network/server/src/microservices/post/post.resolvers.ts|132|4|v|typescript
	 
	    
942295057bcd6d72c70299bf6749390c|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network/server/src/microservices/post/post.resolvers.ts|130|3|v|typescript
	Post: {
	    user: async (a: any): Promise<any> => {
	   }
	  }
	  C
249c997d15d96b227eb39cf2d708599f|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network/server/src/microservices/post/post.resolvers.ts|130|3|v|typescript
	omment: {
4780c53b78ce0529c61925876335d2b7|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network/server/src/microservices/post/post.resolvers.ts|50|1|V|typescript
	          return { post };
f70dfcae1f35b4772f89ae6779da284a|file:///Users/mohamedbgassama/.config/nvim/init.vim|537|1|V|vim
	nmap <silent> <leader>gy <Plug>(coc-diagnostic-next)
c0642142542526949e585c0260658b10|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|25|1|V|vim
	plug 'ciaranm/securemodelines'
346e98b503e361ebdee6ecd9c4cd57a5|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|26|1|V|vim
	plug 'editorconfig/editorconfig-vim'
399920c6ec246179f6daa65b6933dfa2|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|24|1|v|vim
	" Vim enchacements
	plug 'ciaranm/securemodelines'
	plug 'editorconfig/editorconfig-vim'
	
	
1e7526116b15594d2c7100ff7976c7c9|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|37|1|^v|vim
	"
	"
	"
	"
	"
	"
	"
	"
	
a95741773ab5d766a4dd2ca560d24506|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|47|1|V|vim
	Plug 'ntpeters/vim-better-whiespace'
e65c27d9b92d479aa759a35cdc3629c0|file:///Users/mohamedbgassama/.config/nvim/init.vim|6|1|V|vim
	set nocompatible
	filetype off
8b6ac44320e46f88a651cb75ce9c0d96|file:///Users/mohamedbgassama/.config/nvim/init.vim|4|1|V|vim
	set shell=/bin/bash
	" Load vundle
	set nocompatible
e96d8afc259593a20838480dfb84400b|file:///Users/mohamedbgassama/.config/nvim/init.vim|731|1|V|vim
	endif
8a0f94b111ac35818fb9232a7e6c2197|file:///Users/mohamedbgassama/.config/nvim/init.vim|730|2|V|vim
		runtime! plugin/python_setup.vim
349345d33246f7e645c60d60c98f0fa8|file:///Users/mohamedbgassama/.config/nvim/init.vim|729|1|V|vim
	if has('nvim')
8b03d5ecf64808de73ffbca397e515b7|file:///Users/mohamedbgassama/.config/nvim/init.vim|728|1|V|vim
	" nvim
2b5ec04e0b8446e705716f354bf8bc9a|file:///Users/mohamedbgassama/.config/nvim/init.vim|726|1|V|vim
	" =============================================================================
7d01e27b1859f39b3b54c0f10872ded0|file:///Users/mohamedbgassama/.config/nvim/init.vim|725|1|V|vim
	" # Footer
973bd7477243c13d8c4fe3b9bc54fbc2|file:///Users/mohamedbgassama/.config/nvim/init.vim|722|1|V|vim
	autocmd Filetype html,xml,xsl,php source ~/.config/nvim/scripts/closetag.vim
bc374995f3117d10c7856628180c008a|file:///Users/mohamedbgassama/.config/nvim/init.vim|721|1|V|vim
	" Script plugins
3c709b2a40f3f03b49e8c3f834970ff3|file:///Users/mohamedbgassama/.config/nvim/init.vim|719|1|V|vim
	autocmd BufRead *.xlsx.axlsx set filetype=ruby
53dae966301885c5ac7bb11bcb754b26|file:///Users/mohamedbgassama/.config/nvim/init.vim|718|1|V|vim
	autocmd BufRead *.trm set filetype=c
f099640b0a8e98915b2fffdc95061d5b|file:///Users/mohamedbgassama/.config/nvim/init.vim|717|1|V|vim
	autocmd BufRead *.tex set filetype=tex
159e4f60848993afb223d5d885112d8f|file:///Users/mohamedbgassama/.config/nvim/init.vim|716|1|V|vim
	autocmd BufRead *.lds set filetype=ld
14a857c972e1141caa3e8306a8a8a007|file:///Users/mohamedbgassama/.config/nvim/init.vim|715|1|V|vim
	autocmd BufRead *.md set filetype=markdown
cdf894dcff275dfcab36df7dc52a8ed2|file:///Users/mohamedbgassama/.config/nvim/init.vim|714|1|V|vim
	autocmd BufRead *.plot set filetype=gnuplot
128bd9b765f6e6415f32ca974b709c1a|file:///Users/mohamedbgassama/.config/nvim/init.vim|713|1|V|vim
	" Help filetype detection
d5630a3dc7eaa0a2589a4908e3fd577c|file:///Users/mohamedbgassama/.config/nvim/init.vim|711|1|V|vim
	au Filetype rust set colorcolumn=100
cf4689a469013da47a979532e3dd20ec|file:///Users/mohamedbgassama/.config/nvim/init.vim|710|1|V|vim
	au Filetype rust source ~/.config/nvim/scripts/spacetab.vim
bbc88c353cb9daec70594ee5506d8397|file:///Users/mohamedbgassama/.config/nvim/init.vim|709|1|V|vim
	" Follow Rust code style rules
fc12e5cfccb25b0ed025aafca06b329b|file:///Users/mohamedbgassama/.config/nvim/init.vim|706|3|V|vim
	  au BufReadPost * if expand('%:p') !~# '\m/\.git/' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
78525bb83cf33c1c8535be33ab37e3b3|file:///Users/mohamedbgassama/.config/nvim/init.vim|705|3|V|vim
	  " https://stackoverflow.com/questions/31449496/vim-ignore-specifc-file-in-autocommand
fa6fec5e19d6b620fae05ec0ca4401e9|file:///Users/mohamedbgassama/.config/nvim/init.vim|704|1|V|vim
	if has("autocmd")
9ff348c0980d0d56dc185197bb3320df|file:///Users/mohamedbgassama/.config/nvim/init.vim|703|1|V|vim
	" Jump to last edit position on opening file
a944fd893f64ae73d3b189130b5499c6|file:///Users/mohamedbgassama/.config/nvim/init.vim|701|1|V|vim
	autocmd InsertLeave * set nopaste
25dbcec8db4883e5ab75d7b6203ce810|file:///Users/mohamedbgassama/.config/nvim/init.vim|700|1|V|vim
	" Leave paste mode when leaving insert mode
c6736dd13e991b2b369b0b52731fd137|file:///Users/mohamedbgassama/.tmux.conf|45|1|v|tmux
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
	
	#
d629874841852cca89de576ff09eb937|file:///Users/mohamedbgassama/.tmux.conf|49|1|v|tmux
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
	
	
3b91d43c747d4755552edaa31fc10691|file:///Users/mohamedbgassama/.tmux.conf|48|1|V|tmux
	# unbind the prefix and bind it to Ctrl-a like screen
e2107b5305f03bdf09e0403f78fbc83f|file:///Users/mohamedbgassama/.tmux.conf|66|1|v|tmux
	
	# Start index of window/pane with 1, because we're humans, not computers
	set -g base-index 1
	setw -g pane-base-index 1
ec07ec7bc3191ae23de012b95fbd5970|file:///Users/mohamedbgassama/.tmux.conf|66|14|v|tmux
	e
	set -g mouse on
	
	
46192c06c077a1b39a280f3285076171|file:///Users/mohamedbgassama/.tmux.conf|66|1|v|tmux
	# Enable mouse
	set -g mouse on
	
	
a12a3e0d6db6186623e22812f0566a77|file:///Users/mohamedbgassama/.tmux.conf|33|1|V|tmux
	bind C-a send-prefix
bcef7b9ec74bd32b8bb9a1856abd4a46|file:///Users/mohamedbgassama/.tmux.conf|213|1|v|tmux
	# Reload key
	unbind R
	bind R source-file ~/.tmux.conf
	
	
b5987e0b9779a62811f3f9ff45ce0b48|file:///Users/mohamedbgassama/.tmux.conf|212|1|V|tmux
	set -g history-limit 10000
4265e68e88e41c5dcc4770c60f62b6dd|file:///Users/mohamedbgassama/.tmux.conf|211|1|V|tmux
	# Bigger history
944562aa9c66f1b2f6242785614a84fb|file:///Users/mohamedbgassama/.tmux.conf|106|1|V|tmux
	# bind c new-window -c "#{pane_current_path}" \; split-window -h -c "#{pane_current_path}" \; select-pane -L
000f04517d35270a69628775119afa05|file:///Users/mohamedbgassama/.tmux.conf|107|1|V|tmux
	# set pane colors - hilight the active pane
1f4464281cc26a99069015956206e430|file:///Users/mohamedbgassama/.tmux.conf|107|1|V|tmux
	#set-option -g pane-border-fg colour60 #base02
97ca77a9325226b4a9ab2f215d1f7be4|file:///Users/mohamedbgassama/.tmux.conf|107|1|V|tmux
	#set-option -g pane-active-border-fg colour62 #base01
90301a27ee68ad9c85cc715cc999b63a|file:///Users/mohamedbgassama/.tmux.conf|108|1|V|tmux
	# colorize messages in the command line
671f14d269e7a4de5fc44422db419c89|file:///Users/mohamedbgassama/.tmux.conf|108|1|V|tmux
	#set-option -g message-bg black #base02
9be539a441ea9b833095ebbec12e95dc|file:///Users/mohamedbgassama/.tmux.conf|108|1|V|tmux
	#set-option -g message-fg brightred #orange
1f87e4c5e79ace4779ee326acd1e4331|file:///Users/mohamedbgassama/.tmux.conf|94|1|v|tmux
	#hsplit
	unbind '"'  # split-window
	bind | split-window -h -c "#{pane_current_path}"
	
	#vsplit
	unbind %  # split-window -h
	bind - split-window -v -c "#{pane_current_path}"
	
	# new window and retain cwd
	bind c new-window -c "#{pane_current_path}"
	
	
	
4f7446268d7108ee56820d8548750626|file:///Users/mohamedbgassama/.tmux.conf|93|1|V|tmux
	
	#hsplit
d54d3e4e1a7cc1eafef15f05d33ef65e|file:///Users/mohamedbgassama/.tmux.conf|107|1|V|tmux
	
	# colorize messages in the command line
ce4bb6c894305fb0fa11752c9bba7720|file:///Users/mohamedbgassama/.tmux.conf|106|1|v|tmux
	# Open new stuff with correct CWD
	
	#hsplit
	unbind '"'  # split-window
	bind | split-window -h -c "#{pane_current_path}"
	
	#vsplit
	unbind %  # split-window -h
	bind - split-window -v -c "#{pane_current_path}"
	
	# new window and retain cwd
	bind c new-window -c "#{pane_current_path}"
	
	
	
3c343f6aafb303ccf3b16d353b6295ad|file:///Users/mohamedbgassama/.tmux.conf|107|1|v|tmux
	# smart pane switching with awareness of vim splits
	bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
	bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
	bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
	bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
	bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
	
	b
33251f198c8965169660d5ccb59bdf95|file:///Users/mohamedbgassama/.tmux.conf|66|1|V|tmux
	#vsplit
3b971e6366427de2f1da9a0acdf4fa6c|file:///Users/mohamedbgassama/.tmux.conf|62|1|V|tmux
	#hsplit
61e0ebd31d0d6f5b648b1a1b3a16e7f3|file:///Users/mohamedbgassama/.tmux.conf|65|1|V|tmux
	# Bind <prefix>- to split window horizontally
0834a3e3894d7c0ed614927d4ee712d2|file:///Users/mohamedbgassama/.tmux.conf|69|1|v|tmux
	# new window and retain cwd
	bind c new-window -c "#{pane_current_path}"
	
	
cd57cf8e2c45c7dc7534e33632475888|file:///Users/mohamedbgassama/.tmux.conf|61|1|V|tmux
	
	# new window and retain cwd
c3ac262d8d263f609e128d9428eb6e67|file:///Users/mohamedbgassama/.tmux.conf|71|1|v|tmux
	# new window and retain cwd
	b
f74d2e2c8c2631eb43ab824048bcf7db|file:///Users/mohamedbgassama/.tmux.conf|113|1|v|tmux
	# smart pane switching with awareness of vim splits
	bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
	bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
	bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
	bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
	bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
	
	
399e56be1258e8a1c68513e7abead14e|file:///Users/mohamedbgassama/.tmux.conf|155|1|v|tmux
	
	# Panes
	bind up resize-pane -U 5
	bind down resize-pane -D 5
	bind left resize-pane -L 5
	bind right resize-pane -R 5
	
faa107e38fc30a1504580b1079b73bdd|file:///Users/mohamedbgassama/.tmux.conf|25|1|v|tmux
	########################
	# ***    GENERAL   *** #
	########################
	
	
3038634a85a057eb7a6f8c1450c8d4d5|file:///Users/mohamedbgassama/.tmux.conf|35|1|v|tmux
	# Start windows numbering at 1
	set -g base-index 1
	
	
43a984809fc61faa0c09aca00c486b33|file:///Users/mohamedbgassama/.tmux.conf|115|1|v|tmux
	unbind , # rename-window
	bind W command-prompt -I "#{window_name}" "rename-window '%%'"
	
4b92d9b6348dcff662bc19e412ff1092|file:///Users/mohamedbgassama/.tmux.conf|57|1|v|tmux
	########################
	# ***   WINDOW    *** #
	########################
	
	
70e2a9fa5d5ec49dc67453eab551251d|file:///Users/mohamedbgassama/.tmux.conf|72|9|v|tmux
	WINDOW
215016671cc726f2959bbb5398f5854e|file:///Users/mohamedbgassama/.tmux.conf|126|1|v|tmux
	# shortcuts
	bind - split-window -l 20 -c "#{pane_current_path}"
	bind _ split-window -l 20 -c "#{pane_current_path}" node
	
	
bc324cbcc157bd62c38d8c00116be6ea|file:///Users/mohamedbgassama/.tmux.conf|126|1|V|tmux
	# shortcuts
c50b2cdb91fb0cfa1cdeb3abc2fe333d|file:///Users/mohamedbgassama/.tmux.conf|126|1|V|tmux
	bind - split-window -l 20 -c "#{pane_current_path}"
19b28f64e67f10880abdb7a9c17ea650|file:///Users/mohamedbgassama/.tmux.conf|126|1|V|tmux
	bind _ split-window -l 20 -c "#{pane_current_path}" node
3ab78a70b472e0c003b0d9013623dc2e|file:///Users/mohamedbgassama/.tmux.conf|126|1|v|tmux
	# shortcuts
	bind - split-window -l 20 -c "#{pane_current_path}"
	bind _ split-window -l 20 -c "#{pane_current_path}" node
	
	#
addec426932e71323700afa1911f8f1c|file:///Users/mohamedbgassama/.tmux.conf|83|3|v|tmux
	more
ebf87251d092a6de9c12cc3e85c1707a|file:///Users/mohamedbgassama/.tmux.conf|131|1|V|tmux
	shortcuts
53e05df4e19e1b156a0bc509260e0924|file:///Users/mohamedbgassama/.tmux.conf|125|1|v|tmux
	# Rename session and window
	unbind $ # rename-session
	bind S command-prompt -I "#{session_name}" "rename-session '%%'"
	
	bind C-l send-keys 'C-l'
	
	
	
2374dbc40fce8939d8c90239ddf71b46|file:///Users/mohamedbgassama/.tmux.conf|125|1|V|tmux
	unbind $ # rename-session
4f757b3565e6affaa2c12cbe04bb0b30|file:///Users/mohamedbgassama/.tmux.conf|125|1|V|tmux
	bind S command-prompt -I "#{session_name}" "rename-session '%%'"
e6a6cf9608c6b05173b0c7800b4113fc|file:///Users/mohamedbgassama/.tmux.conf|125|1|V|tmux
	bind C-l send-keys 'C-l'
29c339ec8dd3da481175bd5653b50f72|file:///Users/mohamedbgassama/.tmux.conf|34|1|v|tmux
	# Start pane numbering at 1
	setw -g pane-base-index 1
	
	
3bd8268a71fafda74a374b64a70bcc10|file:///Users/mohamedbgassama/.tmux.conf|87|1|V|tmux
	#
	# smart pane switching with awareness of vim splits
8c340653ed86fabd36f60ff322a65b0b|file:///Users/mohamedbgassama/.tmux.conf|87|1|V|tmux
	
	# smart pane switching with awareness of vim splits
168e7e40e31b864f2fe830c1c6a19038|file:///Users/mohamedbgassama/.tmux.conf|37|1|v|tmux
	# Re-draw status window every 5 seconds
	set -g status-interval 5
	
	
41c2b494f8b17dbf7a05896fc5782c34|file:///Users/mohamedbgassama/.tmux.conf|37|1|V|tmux
	# Re-draw status window every 5 seconds
7a41e85b11c5075704f56d5cecc5d1e7|file:///Users/mohamedbgassama/.tmux.conf|37|1|V|tmux
	set -g status-interval 5
b2828440340c34e3a25615af34b32caf|file:///Users/mohamedbgassama/.tmux.conf|34|1|V|tmux
	# Start pane numbering at 1
f252ceb094ab9c278e345e8f98e66b94|file:///Users/mohamedbgassama/.tmux.conf|34|1|V|tmux
	setw -g pane-base-index 1
345c9c32beb0610b628bc4a8577b3ca2|file:///Users/mohamedbgassama/.tmux.conf|131|1|v|tmux
	shortcuts
	bind - split-window -l 20 -c "#{pane_current_path}"
	bind _ split-window -l 20 -c "#{pane_current_path}" node
	
	
85870bcf401fd912de436cac71224b40|file:///Users/mohamedbgassama/.tmux.conf|106|1|v|tmux
	# support logging out and back in
	set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"
	
	# pbcopy support
	set-option -g default-command "reattach-to-user-namespace -l bash"
	
	#
3cb022fe7fdef633a4c406944d9f6f71|file:///Users/mohamedbgassama/.tmux.conf|113|1|V|tmux
	# support logging out and back in
d04600281715f7f5c4337c0257dd81c0|file:///Users/mohamedbgassama/.tmux.conf|113|1|V|tmux
	set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"
f36b6562a40c3b0935155bcafef39e65|file:///Users/mohamedbgassama/.tmux.conf|113|1|V|tmux
	# pbcopy support
5450665206017d97f6af5f7ec88e83cb|file:///Users/mohamedbgassama/.tmux.conf|113|1|V|tmux
	set-option -g default-command "reattach-to-user-namespace -l bash"
8d7ff71d15ba76beefa134d8a856c574|file:///Users/mohamedbgassama/.tmux.conf|75|1|v|tmux
	########################
	# ***   Panes    *** #
	########################
	
	
85de8203a624072306ab7358e726a0b4|file:///Users/mohamedbgassama/.tmux.conf|114|9|v|tmux
	Panes
544e651824902a82c8f2f5373fa20881|file:///Users/mohamedbgassama/.tmux.conf|113|1|v|tmux
	########################
	# ***   Vim    *** #
	########################
	
	
e9611db4d1d64cbad84fd6247cd4aa41|file:///Users/mohamedbgassama/.tmux.conf|132|1|v|tmux
	
	# VIM mode
	set -g mode-keys vi
	
	
	
d11c60f75d8d82b26e1274829c7cb87d|file:///Users/mohamedbgassama/.tmux.conf|136|1|V|tmux
	# VIM mode
be41cf257ca08eb9ee82db7187601c80|file:///Users/mohamedbgassama/.tmux.conf|136|1|V|tmux
	set -g mode-keys vi
760146f3bfa27d2305f17c9c584dfd0c|file:///Users/mohamedbgassama/.tmux.conf|140|1|v|tmux
	# Rename session and window
	unbind $ # rename-session
	bind S command-prompt -I "#{session_name}" "rename-session '%%'"
	
	bind C-l send-keys 'C-l'
	
	
acf29008e4a2bfaab44b2ba83320adb0|file:///Users/mohamedbgassama/.tmux.conf|63|18|v|tmux
	and window
051ce081240fff7d460513a528db067d|file:///Users/mohamedbgassama/.tmux.conf|227|1|v|tmux
	#########################
	# ***  STATUS BAR   *** #
	#########################
	
	#
204ba62c9112b908cfd699127675ccdc|file:///Users/mohamedbgassama/.tmux.conf|271|9|v|tmux
	TATUS BAR
7a58d434395543b31e1dcd0481735984|file:///Users/mohamedbgassama/.tmux.conf|275|1|V|tmux
	# The fish shell path
da93e827c0acfc5050656d28d27f6e39|file:///Users/mohamedbgassama/.tmux.conf|213|1|v|tmux
	# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
	
d7ef8fd043bb52d2280d8c582c7fc3bd|file:///Users/mohamedbgassama/.tmux.conf|123|1|v|tmux
	# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
a300fba8a01badf9321e37903bf7c906|file:///Users/mohamedbgassama/.tmux.conf|213|1|v|tmux
	# Pane resize in all four directions using vi bindings.
	# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
	bind-key J resize-pane -D
	bind-key K resize-pane -U
	bind-key H resize-pane -L
	bind-key L resize-pane -R
	
	
b2741d7b7602384700924fe9b58bcb94|file:///Users/mohamedbgassama/.tmux.conf|213|1|v|tmux
	# easily toggle synchronization (mnemonic: e is for echo)
	# sends input to all panes in a given window.
	bind e setw synchronize-panes on
	bind E setw synchronize-panes off
	
	#
26cf4090b17ac9fed00ef4e217174029|file:///Users/mohamedbgassama/.tmux.conf|200|1|v|tmux
	# kill current pane/window
	bind-key q confirm-before kill-pane
	
1a4323d945e7a9e3a4d8fe7d5edcaaed|file:///Users/mohamedbgassama/.tmux.conf|135|20|v|tmux
	/window
4cc149e0a140720ca1f38248163c59ee|file:///Users/mohamedbgassama/.tmux.conf|201|1|v|tmux
	# kill current pane/window
	bind-key q confirm-before kill-pane
	bind-key Q confirm-before kill-window
	
	#
c6c6ce72f4dff102e38d74f7143a2ea8|file:///Users/mohamedbgassama/.tmux.conf|91|16|v|tmux
	pane
5812cc08ae154a2566f306489a72c279|file:///Users/mohamedbgassama/.tmux.conf|92|1|V|tmux
	bind-key q confirm-before kill-pane
1f354ea75f2a163877c417c37440d71f|file:///Users/mohamedbgassama/.tmux.conf|169|1|V|tmux
	# visual notification of activity in other windows
0ee6db8286c618bde339b40db9e70f55|file:///Users/mohamedbgassama/.tmux.conf|169|1|V|tmux
	setw -g monitor-activity on
d69c0537821fe5d05babcafd77268893|file:///Users/mohamedbgassama/.tmux.conf|169|1|V|tmux
	set -g visual-activity on
686bc76cc941244c2cd28a7a8e9df619|file:///Users/mohamedbgassama/.tmux.conf|226|1|v|tmux
	#########################
	# ***  STATUS BAR   *** #
	#########################
	
	
ba4c7f99ca9c5673f59bbd5864a85e97|file:///Users/mohamedbgassama/.tmux.conf|160|8|v|tmux
	STATUS BAR
2061eb3048fb231829beb29cb529a916|file:///Users/mohamedbgassama/.tmux.conf|187|1|v|tmux
	# list all paste buffers (default key is '#')
	bind-key b list-buffers
	
	# choose buffer to paste interactively (default key was '=')
	bind-key p choose-buffer
	
	# delete the most recently copied buffer of text (default key was '-')
	bind-key x delete-buffer
	
	
9b3d2e5eb27979a97187f48279152708|file:///Users/mohamedbgassama/.tmux.conf|203|1|v|tmux
	# kill current pane/window
	bind-key q confirm-before kill-pane
	bind-key Q confirm-before kill-window
	
	
3475a06f936a81b76a3619da4f54f253|file:///Users/mohamedbgassama/.tmux.conf|206|1|v|tmux
	# window title
	# enable wm window titles
	set-option -g set-titles on
	
	
dd70bc1d67eeb28b2eaacaa228144501|file:///Users/mohamedbgassama/.tmux.conf|221|1|v|tmux
	# easily toggle synchronization (mnemonic: e is for echo)
	# sends input to all panes in a given window.
	bind e setw synchronize-panes on
	bind E setw synchronize-panes off
	
	
e1559de609c5d7aac3f7c80feec3a5d7|file:///Users/mohamedbgassama/.tmux.conf|214|1|v|tmux
	# Patch for OS X pbpaste and pbcopy under tmux.
	set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
	
	
ae6dfcba7aa8a1bdfecbd5e6f7eb17a4|file:///Users/mohamedbgassama/.tmux.conf|216|1|v|tmux
	# No escape time for vi mode
	set -sg escape-time 0
	
	
0d7f3df26d5cc192ff0d58e6b3f55e61|file:///Users/mohamedbgassama/.tmux.conf|185|1|V|tmux
	set-option -g status on                # turn the status bar on
18d82ee858c33661544fab6e1cf55d9f|file:///Users/mohamedbgassama/.tmux.conf|186|1|V|tmux
	set -g status-justify centre           # center window list for clarity
3564adff42129de9b70314a241461234|file:///Users/mohamedbgassama/.tmux.conf|185|1|v|tmux
	set -g status-interval 2               # set update frequencey (default 15 seconds)
	
85bb31d59b3586cfb52e1c1b75030746|file:///Users/mohamedbgassama/.tmux.conf|221|24|V|tmux
	set -g status-interval 2               # set update frequencey (default 15 seconds)
	# Enable status bar
	set-option -g status on
	
	# Set window list to center
	set -g status-justify centre
	
	# Set default bg/fg settings for status bar
	set-option -g status-style bright,bg='#1B2B34',fg=default
	
	set-window-option -g window-status-current-format ''
	set-window-option -g window-status-current-format ''
	set-window-option -g window-status-current-style fg=colour114,bg=default,bright
	
	# Configure CPU plugin colors for statusline
	set -g @cpu_low_fg_color "#[fg=green]"
	set -g @cpu_medium_fg_color "#[fg=yellow]"
	set -g @cpu_high_fg_color "#[fg=red]"
	
	set -g @cpu_low_bg_color "#[bg=default]"
	set -g @cpu_medium_bg_color "#[bg=default]"
	set -g @cpu_high_bg_color "#[bg=default]"
	
	# Left Status Bar: [CPU Usage]
	set -g status-left "#{cpu_bg_color}#{cpu_fg_color} #{cpu_icon}#{cpu_percentage}"
	set -g status-left-length 85
	
	# Right Status Bar: [Session Name][Date][Time]
	set -g status-right "#[fg=magenta]#S #[fg=colour8]‹#[fg=yellow]#fg=yellow,bold,bg=default] %b %d %Y #[fg=colour8]‹#[fg=green,bg=default]#[bg=default,fg=green,bold]%l:%M %p #[fg=blue]"
	
	# Auto-hide status bar if pane is maximized
	set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'
	
	# Initialize TMUX plugin manager
	run '~/.tmux/plugins/tpm/tpm'[
	
	#########################
	# ***  FISH SHELL   *** #
	#########################
	
	set -g default-command /usr/local/bin/fish
2b7d16ae11f15d7a6c2d9e3cc57835f5|file:///Users/mohamedbgassama/.tmux.conf|185|1|V|tmux
	set -g status-interval 2               # set update frequencey (default 15 seconds)
930106c906881eed2c4c592639fd7823|file:///Users/mohamedbgassama/.tmux.conf|185|1|V|tmux
	# set-option -g status-position top    # position the status bar at top of screen
732fa8ed917b36cbbf31735bae7c29e8|file:///Users/mohamedbgassama/.tmux.conf|182|1|V|tmux
	# ----------------------
66962b76edd6c68b5b7e53881fcb5dc3|file:///Users/mohamedbgassama/.tmux.conf|182|1|V|tmux
	# Status Bar
54af37ebf2d23f426486e9dd833e6ba2|file:///Users/mohamedbgassama/.tmux.conf|182|1|V|tmux
	# -----------------------
ea2cc8b874ff919ea7e76ba6316ec842|file:///Users/mohamedbgassama/.tmux.conf|183|1|V|tmux
	# show session name, window & pane number, date and time on right side of
3cf2f563b81fee90fab172b46a525540|file:///Users/mohamedbgassama/.tmux.conf|183|1|V|tmux
	# status bar
60594f13de4a8e132f14cbd823e26f16|file:///Users/mohamedbgassama/.tmux.conf|183|1|V|tmux
	# set -g status-right-length 60
c9d60d58a81e1a6d003505cebdf29110|file:///Users/mohamedbgassama/.tmux.conf|183|1|V|tmux
	set -g status-right "%b %d %Y @ %l:%M %p"
44727fa2a49503677722e213644b5378|file:///Users/mohamedbgassama/.tmux.conf|184|1|v|tmux
	# split automatically on startup
	split-window -h -c "#{pane_current_path}"
	select-pane -L
	
	# control automatic window renaming
	set-window-option -g automatic-rename on # auto name
	setw -g automatic-rename
	
	bind tab next-layout
	unbind C-o
	bind r rotate-window
	bind space select-pane -t:.+
	
	# To allow easy resetting to a sensible layout across machines and terminal dimensions,
	bind m set-window-option main-pane-height 60\; select-layout main-horizontal
	
	# Monitor Activity
	bind m set-window-option monitor-activity
	
	# wm window title string (uses statusbar variables)
	set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)
	
	
	
50ce2da63bea6a618e7578fa50690040|file:///Users/mohamedbgassama/code/wdi/labs/redux_app/src/App.js|23|13|v|javascriptreact
	React
0829ea6734059d66e6bf87096b215dc1|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|63|17|v|yaml
	Fullscreen
7999f079799acab7ac8db7bc192e532d|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|63|1|v|yaml
	  startup_mode
41af127caa565133f221c94766b4c740|file:///Users/mohamedbgassama/.config/alacritty/alacritty.yml|59|3|V|yaml
	  #   - Fullscreen
	  #
	  # Values for `startup_mode` (macOS only):
	  #   - SimpleFullscreen
	  startup_mode: Windowed
f0c1d78fb15158257d2aec516cc2a24f|file:///Users/mohamedbgassama/.tmux.conf|189|1|v|tmux
	# show session name, window & pane number, date and time on right side of
	# status bar
	# set -g status-right-length 60
	set -g status-right "%b %d %Y @ %l:%M %p"
	
	
40fed1e0df9a4ebee97f8f1f70edd13a|file:///Users/mohamedbgassama/.tmux.conf|47|1|V|tmux
	
	bind C-a send-prefix
d5afe701fa9d316a1c082670f4eb14a2|file:///Users/mohamedbgassama/.tmux.conf|182|1|v|tmux
	set -g status-interval 2               # set update frequencey (default 15 seconds)
	# set-option -g status-position top    # position the status bar at top of screen
	
	
	# split automatically on startup
	split-window -h -c "#{pane_current_path}"
	select-pane -L
	
	# control automatic window renaming
	#set-window-option -g automatic-rename on # auto name
	#setw -g automatic-rename
	
	#bind tab next-layout
	#unbind C-o
	#bind r rotate-window
	#bind space select-pane -t:.+
	
	# To allow easy resetting to a sensible layout across machines and terminal dimensions,
	#bind m set-window-option main-pane-height 60\; select-layout main-horizontal
	
	# Monitor Activity
	#bind m set-window-option monitor-activity
	
	# wm window title string (uses statusbar variables)
	#set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)
	
	
	
1cd498ddbd10541ee4977ba68613d308|file:///Users/mohamedbgassama/.tmux.conf|209|1|V|tmux
	#########################
57d085d3e90980b2875cf3d06b853ed6|file:///Users/mohamedbgassama/.tmux.conf|209|1|v|tmux
	#########################
	# ***  STATUS BAR   *** #
	#########################
	# Set update frequencey (default 15 seconds)
	#set -g status-interval 2       
	# Enable status bar
	set-option -g status on
	
	# Set window list to center
	set -g status-justify centre
	
	# Set default bg/fg settings for status bar
	set-option -g status-style bright,bg='#1B2B34',fg=default
	
	set-window-option -g window-status-current-format ''
	set-window-option -g window-status-current-format ''
	set-window-option -g window-status-current-style fg=colour114,bg=default,bright
	
	# Configure CPU plugin colors for statusline
	set -g @cpu_low_fg_color "#[fg=green]"
	set -g @cpu_medium_fg_color "#[fg=yellow]"
	set -g @cpu_high_fg_color "#[fg=red]"
	
	set -g @cpu_low_bg_color "#[bg=default]"
	set -g @cpu_medium_bg_color "#[bg=default]"
	set -g @cpu_high_bg_color "#[bg=default]"
	
	# Left Status Bar: [CPU Usage]
	set -g status-left "#{cpu_bg_color}#{cpu_fg_color} #{cpu_icon}#{cpu_percentage}"
	set -g status-left-length 85
	
	# Right Status Bar: [Session Name][Date][Time]
	set -g status-right "#[fg=magenta]#S #[fg=colour8]‹#[fg=yellow]#fg=yellow,bold,bg=default] %b %d %Y #[fg=colour8]‹#[fg=green,bg=default]#[bg=default,fg=green,bold]%l:%M %p #[fg=blue]"
	
	# Auto-hide status bar if pane is maximized
	set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'
	
	# Initialize TMUX plugin manager
	run '~/.tmux/plugins/tpm/tpm'
	
	
95b619df2c3acd6e1b0b5a0de80a54cf|file:///Users/mohamedbgassama/.tmux.conf|214|1|v|tmux
	# Enable status bar
	set-option -g status on
	
	# Set window list to center
	set -g status-justify centre
	
	# Set default bg/fg settings for status bar
	set-option -g status-style bright,bg='#1B2B34',fg=default
	
	set-window-option -g window-status-current-format ''
	set-window-option -g window-status-current-format ''
	set-window-option -g window-status-current-style fg=colour114,bg=default,bright
	
	# Configure CPU plugin colors for statusline
	set -g @cpu_low_fg_color "#[fg=green]"
	set -g @cpu_medium_fg_color "#[fg=yellow]"
	set -g @cpu_high_fg_color "#[fg=red]"
	
	set -g @cpu_low_bg_color "#[bg=default]"
	set -g @cpu_medium_bg_color "#[bg=default]"
	set -g @cpu_high_bg_color "#[bg=default]"
	
	# Left Status Bar: [CPU Usage]
	set -g status-left "#{cpu_bg_color}#{cpu_fg_color} #{cpu_icon}#{cpu_percentage}"
	set -g status-left-length 85
	
	# Right Status Bar: [Session Name][Date][Time]
	set -g status-right "#[fg=magenta]#S #[fg=colour8]‹#[fg=yellow]#fg=yellow,bold,bg=default] %b %d %Y #[fg=colour8]‹#[fg=green,bg=default]#[bg=default,fg=green,bold]%l:%M %p #[fg=blue]"
	
	# Auto-hide status bar if pane is maximized
	set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
	set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'
	
	# Initialize TMUX plugin manager
	run '~/.tmux/plugins/tpm/tpm'
	
	
f2516599f1eda7d528b0864990ae212b|file:///Users/mohamedbgassama/.tmux.conf|209|1|v|tmux
	#########################
	# ***  STATUS BAR   *** #
	#########################
	
f96f5da23aa436c4dd90bf356a722f82|file:///Users/mohamedbgassama/.tmux.conf|208|1|v|tmux
	
	# Set update frequencey (default 15 seconds)
	#set -g status-interval 2       
	
	
21ec0dbc9f3b3297458ed842267c8245|file:///Users/mohamedbgassama/.tmux.conf|190|1|V|tmux
	# control automatic window renaming
b797ffaf15eb0c2b8f06e59aab0ebfb4|file:///Users/mohamedbgassama/.tmux.conf|190|1|V|tmux
	#set-window-option -g automatic-rename on # auto name
dc8a40894e482dced85686e665299a88|file:///Users/mohamedbgassama/.tmux.conf|190|1|V|tmux
	#setw -g automatic-rename
18461b13dd6922410087a48f76178d40|file:///Users/mohamedbgassama/.tmux.conf|196|1|V|tmux
	# To allow easy resetting to a sensible layout across machines and terminal dimensions,
8f4bf1ef15f2ce9c789235e6fb509cdd|file:///Users/mohamedbgassama/.tmux.conf|196|1|V|tmux
	#bind m set-window-option main-pane-height 60\; select-layout main-horizontal
8d4b10d756758a249b49b09423c9ce0d|file:///Users/mohamedbgassama/.tmux.conf|182|1|V|tmux
	t -g status-interval 2               # set update frequencey (default 15 seconds)
9dde8a9a4616cef06deba8dad733d5fa|file:///Users/mohamedbgassama/.tmux.conf|198|1|V|tmux
	#set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)
9a79a0bebbc099395821a6b16f6375f4|file:///Users/mohamedbgassama/.tmux.conf|197|1|V|tmux
	# wm window title string (uses statusbar variables)
2c049a1ef5522254fc7acb5f94ac6d35|file:///Users/mohamedbgassama/.tmux.conf|183|1|v|tmux
	# split automatically on startup
	split-window -h -c "#{pane_current_path}"
	select-pane -L
	
	
	#bind tab next-layout
	unbind C-o
	bind r rotate-window
	bind space select-pane -t:.+
	
	
	# Monitor Activity
	bind m set-window-option monitor-activity
	
	
	
6c8e3fa5550679823dedb74c27b32bb7|file:///Users/mohamedbgassama/.tmux.conf|197|1|V|tmux
	
	#########################
9953bd87120eee3d2a0d676f47e14014|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|24|1|v|vim
	" Vim enchacements
	plug 'ciaranm/securemodelines'
	plug 'editorconfig/editorconfig-vim'
	
	" Gui enchacements
	plug 'machakann/vim-highlightedyank'
	plug 'andymass/vim-matchup'
	
	" Multiple plug commands can be written in a single line using | separators
	Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
	
	"
bd2b44dfbbdaa533d7e6c4351e53cae3|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|24|1|v|vim
	" Vim enchacements
	plug 'ciaranm/securemodelines'
	plug 'editorconfig/editorconfig-vim'
	
	" Gui enchacements
	plug 'machakann/vim-highlightedyank'
	plug 'andymass/vim-matchup'
	
	" Multiple plug commands can be written in a single line using | separators
	Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
	
	
e253c5d76208898a84dcf4d826c0ed0c|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|24|1|V|vim
	" Vim enchacements
	plug 'ciaranm/securemodelines'
0982399ad8ff0de74dee691fd42ae689|file:///Users/mohamedbgassama/.config/nvim/plugged/vim-airline/autoload/airline/themes/dark.vim|1|1|v|vim
	" MIT License. Copyright (c) 2013-2020 Bailey Ling et al.
	" vim: et ts=2 sts=2 sw=2 tw=80
	
	scriptencoding utf-8
	
	" Airline themes are generated based on the following concepts:
	"   * The section of the status line, valid Airline statusline sections are:
	"       * airline_a (left most section)
	"       * airline_b (section just to the right of airline_a)
	"       * airline_c (section just to the right of airline_b)
	"       * airline_x (first section of the right most sections)
	"       * airline_y (section just to the right of airline_x)
	"       * airline_z (right most section)
	"   * The mode of the buffer, as reported by the :mode() function.  Airline 
	"     converts the values reported by mode() to the following:
	"       * normal
	"       * insert
	"       * replace
	"       * visual
	"       * inactive
	"       The last one is actually no real mode as returned by mode(), but used by
	"       airline to style inactive statuslines (e.g. windows, where the cursor
	"       currently does not reside in).
	"   * In addition to each section and mode specified above, airline themes 
	"     can also specify overrides.  Overrides can be provided for the following
	"     scenarios:
	"       * 'modified'
	"       * 'paste'
	"
	" Airline themes are specified as a global viml dictionary using the above
	" sections, modes and overrides as keys to the dictionary.  The name of the
	" dictionary is significant and should be specified as:
	"   * g:airline#themes#<theme_name>#palette
	" where <theme_name> is substituted for the name of the theme.vim file where the
	" theme definition resides.  Airline themes should reside somewhere on the
	" 'runtimepath' where it will be loaded at vim startup, for example:  
	"   * autoload/airline/themes/theme_name.vim
	"
	" For this, the dark.vim, theme, this is defined as
	let g:airline#themes#dark#palette = {}
	
	" Keys in the dictionary are composed of the mode, and if specified the
	" override.  For example:
	"   * g:airline#themes#dark#palette.normal 
	"       * the colors for a statusline while in normal mode
	"   * g:airline#themes#dark#palette.normal_modified 
	"       * the colors for a statusline while in normal mode when the buffer has
	"         been modified
	"   * g:airline#themes#dark#palette.visual 
	"       * the colors for a statusline while in visual mode
	"
	" Values for each dictionary key is an array of color values that should be
	" familiar for colorscheme designers:
	"   * [guifg, guibg, ctermfg, ctermbg, opts]
	" See "help attr-list" for valid values for the "opt" value.
	"
	" Each theme must provide an array of such values for each airline section of
	" the statusline (airline_a through airline_z).  A convenience function, 
	" airline#themes#generate_color_map() exists to mirror airline_a/b/c to
	" airline_x/y/z, respectively.
	
	" The dark.vim theme:
	let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]
	let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]
	let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]
	let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal, s:airline_b_normal, s:airline_c_normal)
	
	" It should be noted the above is equivalent to:
	" let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(
	"    \  [ '#00005f' , '#dfff00' , 17  , 190 ],  " section airline_a
	"    \  [ '#ffffff' , '#444444' , 255 , 238 ],  " section airline_b
	"    \  [ '#9cffd3' , '#202020' , 85  , 234 ]   " section airline_c
	"    \)
	"
	" In turn, that is equivalent to:
	" let g:airline#themes#dark#palette.normal = {
	"    \  'airline_a': [ '#00005f' , '#dfff00' , 17  , 190 ],  "section airline_a
	"    \  'airline_b': [ '#ffffff' , '#444444' , 255 , 238 ],  "section airline_b
	"    \  'airline_c': [ '#9cffd3' , '#202020' , 85  , 234 ],  "section airline_c
	"    \  'airline_x': [ '#9cffd3' , '#202020' , 85  , 234 ],  "section airline_x
	"    \  'airline_y': [ '#ffffff' , '#444444' , 255 , 238 ],  "section airline_y
	"    \  'airline_z': [ '#00005f' , '#dfff00' , 17  , 190 ]   "section airline_z
	"    \}
	"
	" airline#themes#generate_color_map() also uses the values provided as
	" parameters to create intermediary groups such as:
	"   airline_a_to_airline_b
	"   airline_b_to_airline_c
	"   etc...
	
	" Here we define overrides for when the buffer is modified.  This will be
	" applied after g:airline#themes#dark#palette.normal, hence why only certain keys are
	" declared.
	let g:airline#themes#dark#palette.normal_modified = {
	      \ 'airline_c': [ '#ffffff' , '#5f005f' , 255     , 53      , ''     ] ,
	      \ }
	
	
	let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]
	let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]
	let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]
	let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)
	let g:airline#themes#dark#palette.insert_modified = {
	      \ 'airline_c': [ '#ffffff' , '#5f005f' , 255     , 53      , ''     ] ,
	      \ }
	let g:airline#themes#dark#palette.insert_paste = {
	      \ 'airline_a': [ s:airline_a_insert[0]   , '#d78700' , s:airline_a_insert[2] , 172     , ''     ] ,
	      \ }
	
	
	let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)
	let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:airline_b_insert[2] , 124     , ''     ]
	let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified
	
	
	let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]
	let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]
	let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]
	let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual, s:airline_b_visual, s:airline_c_visual)
	let g:airline#themes#dark#palette.visual_modified = {
	      \ 'airline_c': [ '#ffffff' , '#5f005f' , 255     , 53      , ''     ] ,
	      \ }
	
	
	let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]
	let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]
	let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]
	let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inactive, s:airline_b_inactive, s:airline_c_inactive)
	let g:airline#themes#dark#palette.inactive_modified = {
	      \ 'airline_c': [ '#875faf' , '' , 97 , '' , '' ] ,
	      \ }
	
	" For commandline mode, we use the colors from normal mode, except the mode
	" indicator should be colored differently, e.g. light green
	let s:airline_a_commandline = [ '#0000ff' , '#0cff00' , 17  , 40 ]
	let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]
	let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]
	let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_commandline, s:airline_b_commandline, s:airline_c_commandline)
	
	" Accents are used to give parts within a section a slightly different look or
	" color. Here we are defining a "red" accent, which is used by the 'readonly'
	" part by default. Only the foreground colors are specified, so the background
	" colors are automatically extracted from the underlying section colors. What
	" this means is that regardless of which section the part is defined in, it
	" will be red instead of the section's foreground color. You can also have
	" multiple parts with accents within a section.
	let g:airline#themes#dark#palette.accents = {
	      \ 'red': [ '#ff0000' , '' , 160 , ''  ]
	      \ }
	
	
	" Here we define the color map for ctrlp.  We check for the g:loaded_ctrlp
	" variable so that related functionality is loaded iff the user is using
	" ctrlp. Note that this is optional, and if you do not define ctrlp colors
	" they will be chosen automatically from the existing palette.
	if get(g:, 'loaded_ctrlp', 0)
	  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(
	        \ [ '#d7d7ff' , '#5f00af' , 189 , 55  , ''     ],
	        \ [ '#ffffff' , '#875fd7' , 231 , 98  , ''     ],
	        \ [ '#5f00af' , '#ffffff' , 55  , 231 , 'bold' ])
d08ec2033caf2a572e7b21afa1eeabf3|file:///Users/mohamedbgassama/.config/nvim/plugged/vim-airline/autoload/airline/themes/dark.vim|321|1|V|vim
	endif 
75fcc531a6a3c7464482dc648681883a|file:///Users/mohamedbgassama/.config/nvim/plugged/vim-airline/autoload/airline/themes/dark.vim|1|1|v|vim
	" vim-airline template by chartoin (http://github.com/chartoin)
	" Base 16 Oceanic Next Scheme by Chris Kempson (http://chriskempson.com)
	" Base 16 Oceanic Next Vim Airline Scheme
	" (https://github.com/vim-airline/vim-airline-themes/blob/master/autoload/airline/themes/base16_oceanicnext.vim)
	let g:airline#themes#space#palette = {}
	let s:gui00 = "#1b2b34"
	let s:gui01 = "#343d46"
	let s:gui02 = "#4f5b66"
	let s:gui03 = "#65737e"
	let s:gui04 = "#a7adba"
	let s:gui05 = "#c0c5ce"
	let s:gui06 = "#cdd3de"
	let s:gui07 = "#d8dee9"
	let s:gui08 = "#ec5f67"
	let s:gui09 = "#f99157"
	let s:gui0A = "#fac863"
	let s:gui0B = "#99c794"
	let s:gui0C = "#5fb3b3"
	let s:gui0D = "#6699cc"
	let s:gui0E = "#c594c5"
	let s:gui0F = "#ab7967"
	
	" Terminal color definitions
	let s:cterm00 = 00
	let s:cterm03 = 08
	let s:cterm05 = 07
	let s:cterm07 = 15
	let s:cterm08 = 01
	let s:cterm0A = 03
	let s:cterm0B = 02
	let s:cterm0C = 06
	let s:cterm0D = 04
	let s:cterm0E = 05
	if exists('base16colorspace') && base16colorspace == "256"
	  let s:cterm01 = 18
	  let s:cterm02 = 19
	  let s:cterm04 = 20
	  let s:cterm06 = 21
	  let s:cterm09 = 16
	  let s:cterm0F = 17
	else
	  let s:cterm01 = 10
	  let s:cterm02 = 11
	  let s:cterm04 = 12
	  let s:cterm06 = 13
	  let s:cterm09 = 09
	  let s:cterm0F = 14
	endif
	
	let s:N1   = [ s:gui0B, s:gui00, s:cterm0B, s:cterm0B]
	let s:N2   = [ s:gui0C, s:gui00, s:cterm02, s:cterm02]
	let s:N3   = [ s:gui05, s:gui00, s:cterm01, s:cterm01]
	let g:airline#themes#space#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)
	
	let s:I1   = [ s:gui0D, s:gui00, s:cterm0D, 'NONE' ]
	let s:I2   = [ s:gui0C, s:gui00, s:cterm02, 'NONE' ]
	let s:I3   = [ s:gui05, s:gui00, s:cterm01, 'NONE' ]
	let g:airline#themes#space#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)
	
	let s:R1   = [ s:gui08, s:gui00, s:cterm08, 'NONE' ]
	let s:R2   = [ s:gui0C, s:gui00, s:cterm02, 'NONE' ]
	let s:R3   = [ s:gui05, s:gui00, s:cterm01, 'NONE' ]
	let g:airline#themes#space#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)
	
	lets:V1   = [ s:gui0E, s:gui00, s:cterm0E, 'NONE' ]
	let s:V2   = [ s:gui0C, s:gui00, s:cterm02, 'NONE' ]
	let s:V3   = [ s:gui05, s:gui00, s:cterm01, 'NONE' ]
	let g:airline#themes#space#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)
	
	let s:IA1   = [ s:gui04, s:gui00, s:cterm01, 'NONE' ]
	let s:IA2   = [ s:gui04, s:gui00, s:cterm01, 'NONE' ]
	let s:IA3   = [ s:gui0D, s:gui00, s:cterm01, 'NONE' ]
	let g:airline#themes#space#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)
	
	" Warning Section
	let g:airline#themes#space#palette.normal.airline_warning = [
	     \ s:gui0A, s:gui00, s:cterm0A, 'NONE'
	     \ ]
	
	let g:airline#themes#space#palette.insert.airline_warning =
	    \ g:airline#themes#space#palette.normal.airline_warning
	
	let g:airline#themes#space#palette.visual.airline_warning =
	    \ g:airline#themes#space#palette.normal.airline_warning
	
	let g:airline#themes#space#palette.replace.airline_warning =
	    \ g:airline#themes#space#palette.normal.airline_warning
	
	" Error Section
	let g:airline#themes#space#palette.normal.airline_error = [
	     \ s:gui08, s:gui00, s:cterm08, 'NONE'
	     \ ]
	
	let g:airline#themes#space#palette.insert.airline_error =
	    \ g:airline#themes#space#palette.normal.airline_error
	
	let g:airline#themes#space#palette.visual.airline_error =
	    \ g:airline#themes#space#palette.normal.airline_error
	
	let g:airline#themes#space#palette.replace.airline_error =
	    \ g:airline#themes#space#palette.normal.airline_error
	
	" Here we define the color map for ctrlp.  We check for the g:loaded_ctrlp
	" variable so that related functionality is loaded iff the user is using
	" ctrlp. Note that this is optional, and if you do not define ctrlp colors
	" they will be chosen automatically from the existing palette.
	if !get(g:, 'loaded_ctrlp', 0)
	  finish
	endif
	let g:airline#themes#base16_oceanicnext#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(
	      \ [ s:gui07, s:gui02, s:cterm07, s:cterm02, '' ],
	      \ [ s:gui07, s:gui04, s:cterm07, s:cterm04, '' ],
	      \ [ s:gui05, s:gui01, s:cterm05, s:cterm01, 'bold' ]) 
7ad90b7dd2e3d4849f7d86c238cf00e8|file:///Users/mohamedbgassama/.config/fish/config.fish|118|1|^v|
	alias
	alias
	alias
724874d1be77f450a09b305fc1534afb|file:///Users/mohamedbgassama/.config/fish/config.fish|118|1|v|
	alias
9c25022c7fc854015a67c500cabdf936|file:///Users/mohamedbgassama/.config/fish/config.fish|188|1|V|
	
	set nooverride PATH PWD
d37c3cda81af18be4376c1af60b1d383|file:///Users/mohamedbgassama/.config/fish/config.fish|117|1|v|
	# Tmux commands
	abbr tks tmux kill-session -t
	abbr trs tmux rename-session -t
	abrr tl tmux ls
	
	i
5702df7b8d91c6bcca917cb9cbcdf817|file:///Users/mohamedbgassama/.config/fish/config.fish|117|1|V|
	# Tmux commands
	abbr tks tmux kill-session -t
eb59ecc5e5e7c7e883ba475f9a18438c|file:///Users/mohamedbgassama/.config/fish/config.fish|117|1|v|
	# Tmux commands
	abbr tks tmux kill-session -t
	abbr trs tmux rename-session -t
	abrr tl tmux ls
	
	
de9b9b3c87e143c27d6e40d7c0a216ff|file:///Users/mohamedbgassama/.config/fish/config.fish|117|1|v|
	# Tmux commands
	abbr tks tmux kill-session -t
	abbr trs tmux rename-session -t
	abrr tl tmux ls
	
6b878b3fb1b273870057c7d501ac1f65|file:///Users/mohamedbgassama/.config/fish/config.fish|119|1|V|
	# Attaches tmux to the last session; creates a new session if none exists.
16b833cfd07682f5046b7113cb16df50|file:///Users/mohamedbgassama/.config/fish/config.fish|120|1|V|
	# Attaches tmux to a session (example: ta portal)
273e0e9649d55e7c40418c37e2bec7c2|file:///Users/mohamedbgassama/.config/fish/config.fish|121|1|V|
	# Creates a new session
4881f0d80e1c92187fc858948a8ec9fe|file:///Users/mohamedbgassama/.config/fish/config.fish|122|1|V|
	# Lists all ongoing sessions
66e95b5dc2c7424c659b58540eb88331|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|V|conf
	#abbr -a c cargo
be419717df7ea45a711a60b37dcfba77|file:///Users/mohamedbgassama/.config/fish/config.fish|418|1|V|
	starship init fish | source
4e46a78190b9a26bddce8c813f818e4d|file:///Users/mohamedbgassama/.config/starship.toml|68|1|V|toml
	# ~/.config/starship.toml
a8df34c8ffd1dad81b07311345697dbd|file:///Users/mohamedbgassama/.config/starship.toml|104|1|V|toml
	#Options
7c2c0a9edf94351d646ea08fe1e7c6ff|file:///Users/mohamedbgassama/.config/starship.toml|130|68|v|toml
	. The module will be shown if any of
db8d16aec358cdb3d731ded28e3e88de|file:///Users/mohamedbgassama/.config/starship.toml|150|1|V|toml
	ddjdd
c27ae0749a288973abcfe71fb2055b43|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|V|
	abbr -a c cargo
3230ed9c0b7cdcb88154517c32200112|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|
	abbr -a c cargo
	abbr -a e nvim
	abbr -a m make
	abbr -a g git
	abbr -a gc 'git checkout'
	abbr -a vimdiff 'nvim -d'
	abbr -a ct 'cargo t'
	abbr -a gah 'git stash; and git pull --rebase; and git stash pop'
	
	
	
0d5e936246be76c858152613839e279a|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|
	abbr -a c cargo
	abbr -a e nvim
	abbr -a m make
	abbr -a g git
	abbr -a gc 'git checkout'
	abbr -a vimdiff 'nvim -d'
	abbr -a ct 'cargo t'
	abbr -a gah 'git stash; and git pull --rebase; and git stash pop'
	
	
	# History lists your previously entered commands
	abbr -a h='history'
	
	
	# python
	alias pyenvs='python3 -m venv env'
	alias pyenva='source env/bin/activate'
	alias host_file='python3 -m http.server'
	
	# node commands
	alias ni='npm install'
	alias nii='npm init'
	alias nis='npm install -S'
	alias nid='npm install -D'
	alias nuds='npm update -S'
	alias nudd='npm update -D'
	alias no='npm outdated'
	alias nl='npm ls --depth 0'
	alias nus='npm uninstall -S'
	alias nud='npm uninstall -D'
	alias nt='npm test'
	alias nit='npm install && npm test'
	alias nk='npm link'
	alias nr='npm run'
	alias ns='npm start'
	alias nf='npm cache clean && rm -rf node_modules && npm install'
	alias nlg='npm list --global --depth=0'
	alias nig='npm install --global'
	alias nug='npm uninstall --global'
	alias nug='npm update -g'
	alias nog='npm outdated -g --depth=0'
	alias npku='ncu --upgrade && ni'
	
	# yarn commands
	alias yi='yarn install'
	alias yii='yarn init'
	alias yas='yarn add'
	alias yad='yarn add --dsev'
	alias yr= 'yarn remove'
	alias yug='yarn upgrade'
	alias yl='yarn list --depth=0'
	alias yod='yarn outdated'
	alias yg='yarn global'
	alias yru='yarn run'
	alias yt='yarn test'
	alias ygu='yarn global upgrade'
	alias ypku='ncu --upgrade && yi'
	
	
	# git commands
	alias gi='git init'
	alias ga='git add -A'
	alias gc='git commit -m'
	alias gp='git push'
	alias gb='git branch'
	alias gbd="git branch -d"
	alias gco='git checkout'
	alias gm='git merge'
	alias gr='git reset'
	alias gpum='git pull upstream master'
	alias grv='git remote -v'
	alias grro='git remote rm origin'
	alias grao='git remote add origin'
	alias grru='git remote rm upstream'
	alias grau='git remote add upstream'
	alias gcl='git clone'
	alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
	alias gs='git status'
	alias gd='git diff'
	alias gsl='git shortlog'
	alias gk='gitk --all&'
	alias gx='gitx --all'
	alias got='git '
	
	
	# file commands
	alias work='cd code'
	alias com='cd Company'
	alias key='ssh-add'
	
	# docker commands
	alias dkps='docker ps'
	alias dkst='docker stats'
	alias dkpsa='docker ps -a'
	alias dkimgs='docker images'
	alias dkcpup='docker-compose up -d'
	alias dkcpdown='docker-compose down'
	alias dkcpstart='docker-compose start'
	alias dkcpstop='docker-compose stop'
	
	
	# heroku commands
	alias hlo='heroku login'
	alias hc= 'heroku create'
	alias hpm='git push heroku master'
	alias hp='heroku ps:scale web=1'
	alias ho='heroku open'
	alias hla='heroku local web'
	alias hacp='heroku addons:create papertrail'
	alias ha='heroku addons'
	alias haop='heroku addons:open papertrail'
	alias hrb='heroku run bash'
	alias hacbd='heroku addons:create heroku-postgresql:hobby-dev'
	alias hpsql='heroku pg:psql'
	alias hl='heroku logs --tail'
	
	# Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
	alias ta='tmux attach -t'
	alias tn='tmux new-session'
	alias tl='tmux list-sessions'
	alias trs='tmux rename-session -t'
	alias tks='tmux kill-session -t'
	
3c6a181a94f5235b3a533b14eeffe940|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|
	abbr -a c cargo
	abbr -a e nvim
	abbr -a m make
	abbr -a g git
	abbr -a gc 'git checkout'
	abbr -a vimdiff 'nvim -d'
	abbr -a ct 'cargo t'
	abbr -a gah 'git stash; and git pull --rebase; and git stash pop'
	
	
	# History lists your previously entered commands
	abbr -a h='history'
	
	
	# python
	alias pyenvs='python3 -m venv env'
	alias pyenva='source env/bin/activate'
	alias host_file='python3 -m http.server'
	
	# node commands
	alias ni='npm install'
	alias nii='npm init'
	alias nis='npm install -S'
	alias nid='npm install -D'
	alias nuds='npm update -S'
	alias nudd='npm update -D'
	alias no='npm outdated'
	alias nl='npm ls --depth 0'
	alias nus='npm uninstall -S'
	alias nud='npm uninstall -D'
	alias nt='npm test'
	alias nit='npm install && npm test'
	alias nk='npm link'
	alias nr='npm run'
	alias ns='npm start'
	alias nf='npm cache clean && rm -rf node_modules && npm install'
	alias nlg='npm list --global --depth=0'
	alias nig='npm install --global'
	alias nug='npm uninstall --global'
	alias nug='npm update -g'
	alias nog='npm outdated -g --depth=0'
	alias npku='ncu --upgrade && ni'
	
	# yarn commands
	alias yi='yarn install'
	alias yii='yarn init'
	alias yas='yarn add'
	alias yad='yarn add --dsev'
	alias yr= 'yarn remove'
	alias yug='yarn upgrade'
	alias yl='yarn list --depth=0'
	alias yod='yarn outdated'
	alias yg='yarn global'
	alias yru='yarn run'
	alias yt='yarn test'
	alias ygu='yarn global upgrade'
	alias ypku='ncu --upgrade && yi'
	
	
	# git commands
	alias gi='git init'
	alias ga='git add -A'
	alias gc='git commit -m'
	alias gp='git push'
	alias gb='git branch'
	alias gbd="git branch -d"
	alias gco='git checkout'
	alias gm='git merge'
	alias gr='git reset'
	alias gpum='git pull upstream master'
	alias grv='git remote -v'
	alias grro='git remote rm origin'
	alias grao='git remote add origin'
	alias grru='git remote rm upstream'
	alias grau='git remote add upstream'
	alias gcl='git clone'
	alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
	alias gs='git status'
	alias gd='git diff'
	alias gsl='git shortlog'
	alias gk='gitk --all&'
	alias gx='gitx --all'
	alias got='git '
	
	
	# file commands
	alias work='cd code'
	alias com='cd Company'
	alias key='ssh-add'
	
	# docker commands
	alias dkps='docker ps'
	alias dkst='docker stats'
	alias dkpsa='docker ps -a'
	alias dkimgs='docker images'
	alias dkcpup='docker-compose up -d'
	alias dkcpdown='docker-compose down'
	alias dkcpstart='docker-compose start'
	alias dkcpstop='docker-compose stop'
	
	
	# heroku commands
	alias hlo='heroku login'
	alias hc= 'heroku create'
	alias hpm='git push heroku master'
	alias hp='heroku ps:scale web=1'
	alias ho='heroku open'
	alias hla='heroku local web'
	alias hacp='heroku addons:create papertrail'
	alias ha='heroku addons'
	alias haop='heroku addons:open papertrail'
	alias hrb='heroku run bash'
	alias hacbd='heroku addons:create heroku-postgresql:hobby-dev'
	alias hpsql='heroku pg:psql'
	alias hl='heroku logs --tail'
	
	# Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
	alias ta='tmux attach -t'
	alias tn='tmux new-session'
	alias tl='tmux list-sessions'
	alias trs='tmux rename-session -t'
	alias tks='tmux kill-session -t'
	
	
9a195b9c8ae7dbdbd171ae7a6ae05cfa|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|
	abbr -a c cargo
	abbr -a e nvim
	abbr -a m make
	abbr -a g git
	abbr -a gc 'git checkout'
	abbr -a vimdiff 'nvim -d'
	abbr -a ct 'cargo t'
	abbr -a gah 'git stash; and git pull --rebase; and git stash pop'
	
	
	# History lists your previously entered commands
	abbr -a h='history'
	
	
	# python
	alias pyenvs='python3 -m venv env'
	alias pyenva='source env/bin/activate'
	alias host_file='python3 -m http.server'
	
	# node commands
	alias ni='npm install'
	alias nii='npm init'
	alias nis='npm install -S'
	alias nid='npm install -D'
	alias nuds='npm update -S'
	alias nudd='npm update -D'
	alias no='npm outdated'
	alias nl='npm ls --depth 0'
	alias nus='npm uninstall -S'
	alias nud='npm uninstall -D'
	alias nt='npm test'
	alias nit='npm install && npm test'
	alias nk='npm link'
	alias nr='npm run'
	alias ns='npm start'
	alias nf='npm cache clean && rm -rf node_modules && npm install'
	alias nlg='npm list --global --depth=0'
	alias nig='npm install --global'
	alias nug='npm uninstall --global'
	alias nug='npm update -g'
	alias nog='npm outdated -g --depth=0'
	alias npku='ncu --upgrade && ni'
	
	# yarn commands
	alias yi='yarn install'
	alias yii='yarn init'
	alias yas='yarn add'
	alias yad='yarn add --dsev'
	alias yr= 'yarn remove'
	alias yug='yarn upgrade'
	alias yl='yarn list --depth=0'
	alias yod='yarn outdated'
	alias yg='yarn global'
	alias yru='yarn run'
	alias yt='yarn test'
	alias ygu='yarn global upgrade'
	alias ypku='ncu --upgrade && yi'
	
	
	# git commands
	alias gi='git init'
	alias ga='git add -A'
	alias gc='git commit -m'
	alias gp='git push'
	alias gb='git branch'
	alias gbd="git branch -d"
	alias gco='git checkout'
	alias gm='git merge'
	alias gr='git reset'
	alias gpum='git pull upstream master'
	alias grv='git remote -v'
	alias grro='git remote rm origin'
	alias grao='git remote add origin'
	alias grru='git remote rm upstream'
	alias grau='git remote add upstream'
	alias gcl='git clone'
	alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
	alias gs='git status'
	alias gd='git diff'
	alias gsl='git shortlog'
	alias gk='gitk --all&'
	alias gx='gitx --all'
	alias got='git '
	
	
	# file commands
	alias work='cd code'
	alias com='cd Company'
	alias key='ssh-add'
	
	# docker commands
	alias dkps='docker ps'
	alias dkst='docker stats'
	alias dkpsa='docker ps -a'
	alias dkimgs='docker images'
	alias dkcpup='docker-compose up -d'
	alias dkcpdown='docker-compose down'
	alias dkcpstart='docker-compose start'
	alias dkcpstop='docker-compose stop'
	
	
	# heroku commands
	alias hlo='heroku login'
	alias hc= 'heroku create'
	alias hpm='git push heroku master'
	alias hp='heroku ps:scale web=1'
	alias ho='heroku open'
	alias hla='heroku local web'
	alias hacp='heroku addons:create papertrail'
	alias ha='heroku addons'
	alias haop='heroku addons:open papertrail'
	alias hrb='heroku run bash'
	alias hacbd='heroku addons:create heroku-postgresql:hobby-dev'
	alias hpsql='heroku pg:psql'
	alias hl='heroku logs --tail'
	
	# Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
	alias ta='tmux attach -t'
	alias tn='tmux new-session'
	alias tl='tmux list-sessions'
	alias trs='tmux rename-session -t'
	alias tks='tmux kill-session -t'
	
	
	
0bf39052fb833a4ba1453e6fd126f05a|file:///Users/mohamedbgassama/.config/nvim/init.vim|669|1|v|vim
	
	" Use K to show documentation in preview window
	nnoremap <silent> K :call <SID>show_documentation()<CR>
	function! s:show_documentation()
	  if (index(['vim','help'], &filetype) >= 0)
	    execute 'h '.expand('<cword>')
	  else
	    call CocAction('doHover')
	  endif
	endfunction
	
	" nmap <silent> F <Plug>(ale_lint)
	" nmap <silent> <C-l> <Plug>(ale_detail)
	" nmap <silent> <C-g> :close<cr>
	
	
	" <leader><leader> toggles between buffers
	nnoremap <leader><leader> <c-^>
	
	" <leader>, shows/hides hidden characters
	nnoremap <leader>, :set invlist<cr>
	
	" <leader>q shows stats
	nnoremap <leader>q g<c-g>
	
	" Keymap for replacing up to next _ or -
	noremap <leader>m ct_
	
	" I can type :help on my own, thanks.
	map <F1> <Esc>
	imap <F1> <Esc>
	
	" Use K to show documentation in preview window
	nnoremap <silent> K :call <SID>show_documentation()<CR>
	function! s:show_documentation()
	  if (index(['vim','help'], &filetype) >= 0)
	    execute 'h '.expand('<cword>')
	  else
	    call CocAction('doHover')
	  endif
	endfunction
	
	" nmap <silent> F <Plug>(ale_lint)
	" nmap <silent> <C-l> <Plug>(ale_detail)
	" nmap <silent> <C-g> :close<cr>
	
	
	" <leader><leader> toggles between buffers
	nnoremap <leader><leader> <c-^>
	
	" <leader>, shows/hides hidden characters
	nnoremap <leader>, :set invlist<cr>
	
	" <leader>q shows stats
	nnoremap <leader>q g<c-g>
	
	" Keymap for replacing up to next _ or -
	noremap <leader>m ct_
	
	" I can type :help on my own, thanks.
	map <F1> <Esc>
	imap <F1> <Esc>
	
	"
e54ab80f8135f88722af277fa53266ce|file:///Users/mohamedbgassama/.config/nvim/init.vim|668|1|V|vim
	"inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\<C-y>" : "\<C-g>u\<CR>"
ff19b79681be4aedeb5f48132be088b9|file:///Users/mohamedbgassama/.config/nvim/init.vim|664|1|v|vim
	" Use <cr> to confirm completion, `<C-g>u` means break undo hain at current position.
	" Coc only does snippet and additional edit on confirm.
	" inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
	" Or use `complete_info` if your vim support it, like:
	" Use K to show documentation in preview window
	nnoremap <silent> K :call <SID>show_documentation()<CR>
	
	function! s:show_documentation()
	  if (index(['vim','help'], &filetype) >= 0)
	    execute 'h '.expand('<cword>')
	  else
	    call CocAction('doHover')
	  endif
	endfunction
	
	" nmap <silent> F <Plug>(ale_lint)
	" nmap <silent> <C-l> <Plug>(ale_detail)
	" nmap <silent> <C-g> :close<cr>
	
	
	" <leader><leader> toggles between buffers
	nnoremap <leader><leader> <c-^>
	
	" <leader>, shows/hides hidden characters
	nnoremap <leader>, :set invlist<cr>
	
	" <leader>q shows stats
	nnoremap <leader>q g<c-g>
	
	" Keymap for replacing up to next _ or -
	noremap <leader>m ct_
	
	" I can type :help on my own, thanks.
	map <F1> <Esc>
	imap <F1> <Esc>
	
563151a09ac2f3102d37503d98c8990d|file:///Users/mohamedbgassama/.config/nvim/init.vim|601|1|V|vim
	nnoremap <leader><leader> <c-^>
6806281044e8f5c8026036ba47705ffc|file:///Users/mohamedbgassama/.config/fish/alias.fish|143|1|V|
	alias ev 'vim ~/.vimrc'
f42f4d2e105b366752e02802e1ae7a42|file:///Users/mohamedbgassama/.config/fish/alias.fish|144|1|V|
	alias es 'vim ~/bin/autosort'
af18bc5f2a33b9ac0c8dafb8342bcde7|file:///Users/mohamedbgassama/.config/fish/alias.fish|143|1|V|
	alias ev 'nvim ~/.vimrc'
1eec1cea36024d895614ce3aa2bcf88e|file:///Users/mohamedbgassama/.config/fish/alias.fish|143|20|v|
	imrc
4d80dcb96592d7bfc6e926e6725f36ba|file:///Users/mohamedbgassama/.config/fish/config.fish|304|1|V|
	
	# Install Starship
d8256bfca1cd92ce945d700ad3c8c28e|file:///Users/mohamedbgassama/.config/fish/config.fish|295|1|v|
	set -g fish_user_paths "/usr/local/opt/expat/bin" $fish_user_paths
	
366e6a43e252208af5bb691492a82fb0|file:///Users/mohamedbgassama/.config/fish/config.fish|295|1|V|
	set -g fish_user_paths "/usr/local/opt/expat/bin" $fish_user_paths
c2d1368a8f3f68a53fe24e874e7d10fb|file:///Users/mohamedbgassama/.config/fish/config.fish|307|1|v|
	# Install Starship
	starship init fish | source
	
0e5d7fa21dc176f21c91610e0a56dc20|file:///Users/mohamedbgassama/.config/fish/config.fish|307|1|V|
	# Install Starship
6263e7aec37789dece9f4f923ba4b271|file:///Users/mohamedbgassama/.config/fish/config.fish|316|1|v|
	set -g fish_user_paths "/usr/local/opt/openjdk/bin" $fish_user_paths
f072261f9f240c0e08358b1ceba426c1|file:///Users/mohamedbgassama/.config/fish/config.fish|313|1|V|
	
	set -g fish_user_paths "/usr/local/opt/openjdk/bin" $fish_user_paths
251a351bcc1e333ddf8fea33eb4f6ab2|file:///Users/mohamedbgassama/.config/nvim/init.vim|621|1|V|vim
	nnoremap ++ <plug>NERDCommenterToggle
0af45da5f4afc7ad4f7bce7bc7293323|file:///Users/mohamedbgassama/.config/nvim/init.vim|620|1|V|vim
	vnoremap ++ <plug>NERDCommenterToggle
4945b01cf69389e5eae46e131cf453c3|file:///Users/mohamedbgassama/.config/nvim/init.vim|619|1|V|vim
	nnoremap <C-n> :NERDTreeToggle<CR>
	
d0ee77deda140b3eecb9dad0ba244767|file:///Users/mohamedbgassama/.config/nvim/init.vim|619|1|V|vim
	nnoremap <C-n> :NERDTreeToggle<CR>
f4ab3d75a41f51cf7b6aa5191a44ef78|file:///Users/mohamedbgassama/.config/nvim/init.vim|619|20|v|vim
	ERDTreeToggle
177fef5d2684514c9b0ce9fba3a861b7|file:///Users/mohamedbgassama/.config/nvim/init.vim|619|1|v|vim
	nnoremap <leader>v vsplit<CR>
	
98ffead90bb5a7417dc3e933831dd884|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|conf
	#source ~/.config/fish/alias.fish
	#source ~/.config/fish/paths.fish
	
	
2cc1a7909db1e6343876b5bb68b5dd9e|file:///Users/mohamedbgassama/.config/fish/config.fish|5|5|V|conf
	    source ~/.config/fish/config.fish
f15697b0bf4f1ebcba52dc6bb64ce95a|file:///Users/mohamedbgassama/.config/fish/config.fish|5|27|v|conf
	config.fish
f142a1a3839a6c5c45fdbc4cd2bf6b0e|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|V|conf
	#source ~/.config/fish/alias.fish
590dd7345d8ad7c3e0bd92c0e6d2eb92|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|V|conf
	#source ~/.config/fish/paths.fish
a56b8af15ac2f5e0c1feaa5e85d5f18b|file:///Users/mohamedbgassama/.config/fish/config.fish|2|1|V|conf
	# Reloading external config files
d22cb704b0f6308e4499f861eda0cef5|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|53|1|v|vim
	"plug 'godlygeek/tabular'
7f31476fae9e3e76c723cd8542d6ecfe|file:///Users/mohamedbgassama/.config/nvim/init.vim|1|7|v|vim
	encoding utf-8
02742cbf9eb2b1176f810fba5de04e09|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|28|1|V|vim
	Make tab handle all completions
15326340bad8e301c0f3167e2b3cac04|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|28|1|V|vim
	Plug 'ervandew/supertab'
b8579adac1b62b77056b166e5d1be218|file:///Users/mohamedbgassama/.config/nvim/init.vim|55|2|^v|vim
	89
	90
	91
	92
	93
	 =
6d0bb97cff57e241961c0b634c27b5dc|file:///Users/mohamedbgassama/.config/nvim/init.vim|54|13|v|vim
	" Show (partial) command in status line 
d2c796be0a6b0177ffaf3f308ab851ba|file:///Users/mohamedbgassama/.config/nvim/init.vim|57|83|v|vim
	. 57 set autoindent
57c7de0b1f9a08b9bac19cf5b6c04a30|file:///Users/mohamedbgassama/.config/nvim/init.vim|56|67|v|vim
	          . 56 filetype plugin indent on
2116b8f07f3fbf5638abe7e3ebcb69a9|file:///Users/mohamedbgassama/.config/nvim/init.vim|60|66|v|vim
	           . 27
091eabc82b2946f002fd808d3510565e|file:///Users/mohamedbgassama/.config/nvim/init.vim|61|25|v|vim
	                                                    . 28 " Change number of spaces that a <Tab> counts for during editing ops
33d938b5e9b4a5f819c460ae75a47dd7|file:///Users/mohamedbgassama/.config/nvim/init.vim|57|1|V|vim
	" Verbose: set listchars=nbsp:¬,eol:¶,extends:»,precedes:«,trail:•
97d425ef6a84d0f53d17656bd861127d|file:///Users/mohamedbgassama/.config/nvim/init.vim|62|18|v|vim
	8                                                          . 30
6558205ceaf142b51bf4fd549d569517|file:///Users/mohamedbgassama/.config/nvim/init.vim|62|19|v|vim
	                                                          . 30
37238bb4d7a14fff96b8119b5c7918c8|file:///Users/mohamedbgassama/.config/nvim/init.vim|63|18|v|vim
	                                                           . 31 " Indentation amount for < and > commands.
288ccc423be2e9ba6b556bef28740961|file:///Users/mohamedbgassama/.config/nvim/init.vim|63|16|V|vim
	set scrolloff=2 
	set noshowmode
88766d01cc11f0ac50356649d0a5f588|file:///Users/mohamedbgassama/.config/nvim/init.vim|65|18|v|vim
	" Backspace over newlines
d8fa3494a54f154c239e98c659d97bc2|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|37|1|V|vim
	Vim enchacements
9dff2a1533b5ccffd5bf356f0d895889|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|37|1|V|vim
	" Gui enchacements
e26ca3cf25b46bbd4935eb53cc58b422|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|37|1|V|vim
	plug 'machakann/vim-highlightedyank'
87833a01c13f2c32d2924c6425e90423|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|37|1|V|vim
	plug 'andymass/vim-matchup'
6ac473e240a1ee138ad267cb0540af4c|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|38|1|V|vim
	" Multiple plug commands can be written in a single line using | separators
569e71510392850ef2030a970019af98|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|38|1|V|vim
	Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
55166300dbde49b4583807525f005ccb|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|49|1|V|vim
	plug 'dag/vim-fish'
499c06b66ce92ae3cdedfe5f522bfb9a|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|49|1|V|vim
	plug 'godlygeek/tabular'
0ad408aced37f02788af53f9843a1e89|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|49|1|V|vim
	plug 'plasticboy/vim-markdown'
71af171265ca83b80640419422a827b7|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|37|1|V|vim
	" Vim enchacements
a7dcec0cbd4f5f1f354fadfadf1dc4dd|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|47|50|v|vim
	}plug 'dag/vim-fish'
eb9d07cb167771fa892af9ce72e02f48|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|46|1|V|vim
	" Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
b9b76e581aa40f01d7d82798c0f5de1c|file:///Users/mohamedbgassama/.config/nvim/plugins.vim|46|1|v|vim
	plug 'plasticboy/vim-markdown'
	
b4e3bc22f30dab671054f897234c965c|file:///Users/mohamedbgassama/.config/nvim/init.vim|364|1|V|vim
	let g:ale_fixers = {
	 \ 'javascript': ['eslint']
	 \ }
	 
a564e80667882edcf7f7736bb1184c0c|file:///Users/mohamedbgassama/.config/fish/config.fish|96|1|V|fish
				end
d511f8439ecde36647437fbba67a4394|file:///Users/mohamedbgassama/.config/nvim/init.vim|637|10|v|vim
	Space
ddbc29b60adcf6a8fbe1549f65663565|file:///Users/mohamedbgassama/.config/nvim/init.vim|10|1|V|vim
	let g:mapleader=<Space>
8de955f3671263894214ad4c1863bdf3|file:///Users/mohamedbgassama/.config/nvim/init.vim|10|17|v|vim
	<Space>
45ad93906d570695db540c93e36020bb|file:///Users/mohamedbgassama/.config/nvim/init.vim|787|17|v|vim
	=                                                                                                   
dab48bd99137856ee2df3ff21d9b474d|file:///Users/mohamedbgassama/.config/fish/alias.fish|1|1|v|fish
	abbr
0ace7a44022d11397e742bf7421cccf0|file:///Users/mohamedbgassama/.config/fish/alias.fish|1|15|v|fish
	-a c cargo
cee8701dd0b0ef18b843d61b4c67d93b|file:///Users/mohamedbgassama/.config/fish/alias.fish|3|1|V|fish
	abbr -a m make
0744efe8481adface6ef77946eb94b8d|file:///Users/mohamedbgassama/.config/fish/alias.fish|4|1|v|fish
	abbr -a
2dd9d81d091e4045f16db7f0539ae81f|file:///Users/mohamedbgassama/.config/fish/alias.fish|4|1|V|fish
	alias g='git' git
85f20bc85ce6e8ae2470fd7f01a93e3f|file:///Users/mohamedbgassama/.config/fish/alias.fish|4|16|V|fish
	alias g='git' git
	abbr -a gc 'git checkout'
241137a60f6cfcc61092620ec1d51387|file:///Users/mohamedbgassama/.config/fish/alias.fish|5|1|V|fish
	alias gc 'git checkout'
d54b1b7d8c4690f3a0a4a5c2e8686610|file:///Users/mohamedbgassama/.config/fish/alias.fish|4|1|v|fish
	alias g='git'
	
0d4a58a18d56c4b955e3c3ff53b63a8c|file:///Users/mohamedbgassama/.config/fish/alias.fish|4|1|V|fish
	alias g='git'
dcaf757ea0473660d9361d0c46b56457|file:///Users/mohamedbgassama/.config/fish/alias.fish|10|1|v|fish
	abbr -a 
6250d54cb01e332ffd69aae11d499faa|file:///Users/mohamedbgassama/.config/fish/alias.fish|10|1|V|fish
	abbr -a h='history'
cd6d4f88cce632de63497ff310f1df9f|file:///Users/mohamedbgassama/.config/fish/alias.fish|10|1|v|fish
	abbr 
dca6157a021eb9095388a77fa6a60904|file:///Users/mohamedbgassama/.config/fish/alias.fish|5|1|v|fish
	 ct 
006d911ff55175d2457aee5d82b5b96e|file:///Users/mohamedbgassama/.config/fish/config.fish|2|1|V|fish
	function reload-config --on-variable _reload_config
1c398687069c7dbec2096bb228ffdc82|file:///Users/mohamedbgassama/.config/fish/config.fish|2|1|V|fish
	    source ~/.config/fish/alias.fish
	    source ~/.config/fish/paths.fish
27f3c538791594e9bf805e919d0feb8e|file:///Users/mohamedbgassama/.config/nvim/init.vim|570|1|V|vim
	" Left and right can switch buffers
14a68c8904a1d93b47543b3bb1135732|file:///Users/mohamedbgassama/.config/nvim/init.vim|570|1|V|vim
	nnoremap <left> :bp<CR>
e568245533b5fc38ecd7a16e2bc608bb|file:///Users/mohamedbgassama/.config/nvim/init.vim|570|1|V|vim
	nnoremap <right> :bn<CR>
6b43897333ea380fc509873725ff5330|file:///Users/mohamedbgassama/.config/nvim/init.vim|804|1|V|vim
	map <leader>bd :Bclose<CR>:tabclose<cr>gT
af17b6522532141a570f0a229450c747|file:///Users/mohamedbgassama/.config/nvim/init.vim|93|4|v|vim
	 encoding=utf-8
d8d048c44a79e5f884a05addfc76a4c8|file:///Users/mohamedbgassama/.config/nvim/init.vim|93|1|V|vim
	set scriptencoding=ut
f061435b7a5ac96d446a8b4738853aee|file:///Users/mohamedbgassama/.config/nvim/init.vim|105|1|V|vim
	au FocusGained,BufEnter * checktime
96631d0afd16213f0a6412a810382578|file:///Users/mohamedbgassama/.config/nvim/init.vim|104|1|V|vim
	set autoread
81a2ded768d4ae0d6fcc12f83039bb18|file:///Users/mohamedbgassama/.config/nvim/init.vim|103|1|V|vim
	" Set to auto read when a file is changed from the outside
619080e1b815a4be2c52ede7d1613b8e|file:///Users/mohamedbgassama/.config/nvim/init.vim|273|1|V|vim
	" Enable syntax highlighting for JSDoc
1cff3804678fa082f871ee1a3a2520f1|file:///Users/mohamedbgassama/.config/nvim/init.vim|188|2|v|vim
	utocmd! CompleteDone * if pumvisible() == 0 | pclose | endif
372460ee49b52591685adefb6906d03c|file:///Users/mohamedbgassama/.config/nvim/init.vim|52|1|V|vim
	" Add a bit extra margin to the left
254cadb46a83519454a8f91b0ad65f5c|file:///Users/mohamedbgassama/.config/nvim/init.vim|52|1|V|vim
	set foldcolumn=1
712bd8e9fbd3ef40550745d8eacb1393|file:///Users/mohamedbgassama/.config/nvim/init.vim|95|1|V|vim
	set backspace=2
b119f6fe230ddcea87883f4594c27361|file:///Users/mohamedbgassama/.config/nvim/init.vim|45|1|V|vim
	"Always show current position
06a3217b475554052b468e4990916111|file:///Users/mohamedbgassama/.config/nvim/init.vim|45|1|V|vim
	set ruler
5feb0c984e3e20ae9023262e491cef65|file:///Users/mohamedbgassama/.config/nvim/init.vim|42|1|V|vim
	" Be smart when using tabs ;)
65473c6f6295e7fd131757222bb5b7a0|file:///Users/mohamedbgassama/.config/nvim/init.vim|42|1|V|vim
	set smarttab
44e15aa53eb91fcc0ebba46890ec45c2|file:///Users/mohamedbgassama/.config/nvim/init.vim|36|1|V|vim
	" For regular expressions turn magic on
1d1dd6f343f965beca53fb14459791ff|file:///Users/mohamedbgassama/.config/nvim/init.vim|36|1|V|vim
	set magic
b77199bba7bb045c9a8546e1579f3bd7|file:///Users/mohamedbgassama/.config/nvim/init.vim|36|1|V|vim
	
	" Show matching brackets when text indicator is over them
717dfd54e96863de53aacd37d8caf994|file:///Users/mohamedbgassama/.config/nvim/init.vim|82|1|V|vim
	set autoindent
cd31dc3dd485e166ed1c93f7172b7cee|file:///Users/mohamedbgassama/.config/nvim/init.vim|365|5|V|vim
	endif
	endfunction
2ea13b683cfbf8edf6fea57abba33716|file:///Users/mohamedbgassama/.config/nvim/init.vim|746|12|V|vim
	" Generate jsdoc for function under cursor
	nmap <leader>z :JsDoc<CR>
c3c06ee71fd1e80d1da0e8580ad3d207|file:///Users/mohamedbgassama/.config/nvim/init.vim|86|1|V|vim
	" Enable filetype plugins
be043147aaaefd41571eec265cb53d04|file:///Users/mohamedbgassama/.config/nvim/init.vim|86|1|V|vim
	filetype plugin on
44dcd17f42ebd53a5ca471f41a2f9776|file:///Users/mohamedbgassama/.config/nvim/init.vim|86|1|V|vim
	filetype indent on
47f655d9fa527c3eb41684e76090cfc2|file:///Users/mohamedbgassama/.config/nvim/init.vim|25|1|V|vim
	set clipboard=unnamed
e0c5d46e7f3c33248cb7529dc215e7e2|file:///Users/mohamedbgassama/.config/nvim/init.vim|26|1|V|vim
	: Hides buffers instead of closing them
66cab462c4bffe635e37db8a3349b05f|file:///Users/mohamedbgassama/.config/nvim/init.vim|907|1|V|vim
	augroup END
95e3ac1ce53616c9327ff84a3fb89385|file:///Users/mohamedbgassama/.config/nvim/init.vim|907|1|v|vim
	augroup 
054b70e42ccad9c0c3c6780fb514924a|file:///Users/mohamedbgassama/.config/nvim/init.vim|904|8|v|vim
	 PREVENT_ACCIDENTAL_BUFFER_WRITE
70bc42b3ca391c19970aa5b0719ef454|file:///Users/mohamedbgassama/.config/nvim/init.vim|861|3|V|vim
	  " Enable line numbers
bd3f9673a511a4c422fd93b926c1766d|file:///Users/mohamedbgassama/.config/nvim/init.vim|861|3|V|vim
	  " set number
0800fc577294c34e0b28ad2839435945|file:///Users/mohamedbgassama/code/knowledgeHouse/alumni_network/server/src/microservices/user/user.model.ts|38|13|v|typescript
	hash
07a5a24372c32568cca65ff1c94a8909|file:///Users/mohamedbgassama/code/knowledgeHouse/alumni_network/server/src/microservices/post/post.model.ts|27|1|V|typescript
	        user: {
	          ref: 'user',
	          type: mongoose.Schema.Types.ObjectId,
	        },
	
	        name: {
	          type: String,
	        },
	
	        text: {
	          required: true,
	          type: String,
	        },
	
	        avatar: {
	          type: String,
	        },
	
	        date: {
	          default: Date.now,
	          type: Date,
	        },
531faed630210bb1ce2266a2b1e31481|file:///Users/mohamedbgassama/code/knowledgeHouse/alumni_network/server/src/microservices/post/post.model.ts|28|1|V|typescript
	          ref: 'user',
	          type: mongoose.Schema.Types.ObjectId,
42bfce74c01c561844b20a4a54166e51|file:///Users/mohamedbgassama/code/knowledgeHouse/alumni_network/server/src/microservices/post/post.model.ts|27|15|v|typescript
	{
	          ref: 'user',
	          type: mongoose.Schema.Types.ObjectId,
	        }
fa94b150e1e391e04d11b4f9ff5931bf|file:///Users/mohamedbgassama/code/knowledgeHouse/alumni_network/server/src/microservices/post/post.model.ts|4|1|V|typescript
	  {
	    user: {
	      ref: 'user',
	      required: true,
	      type: mongoose.Schema.Types.ObjectId,
	    },
	
	    name: {
	      required: true,
	      type: String,
	    },
	
	    text: {
	      required: true,
	      type: String,
	    },
	
	    avatar: {
	      type: String,
	    },
	
	    comments: [
	      {
	        user: {
	          ref: 'user',
	          type: mongoose.Schema.Types.ObjectId,
	        },
	
	        name: {
	          type: String,
	        },
	
	        text: {
	          required: true,
	          type: String,
	        },
	
	        avatar: {
	          type: String,
	        },
	
	        date: {
	          default: Date.now,
	          type: Date,
	        },
	      },
	    ],
	  },
	  { timestamps: true }
28962ab4062ee43707894e5714a1c627|file:///Users/mohamedbgassama/code/knowledgeHouse/alumni_network/server/src/microservices/post/post.model.ts|5|1|V|typescript
	    user: {
	      ref: 'user',
	      required: true,
	      type: mongoose.Schema.Types.ObjectId,
	    },
	
	    name: {
	      required: true,
	      type: String,
	    },
	
	    text: {
	      required: true,
	      type: String,
	    },
	
	    avatar: {
	      type: String,
	    },
	
	    comments: [
	      {
	        user: {
	          ref: 'user',
	          type: mongoose.Schema.Types.ObjectId,
	        },
	
	        name: {
	          type: String,
	        },
	
	        text: {
	          required: true,
	          type: String,
	        },
	
	        avatar: {
	          type: String,
	        },
	
	        date: {
	          default: Date.now,
	          type: Date,
	        },
	      },
	    ],
b444359ce19b9e50971aab8897d436d3|file:///Users/mohamedbgassama/code/knowledgeHouse/alumni_network/server/src/microservices/post/post.model.ts|3|61|v|typescript
	(
	  {
	    user: {
	      ref: 'user',
	      required: true,
	      type: mongoose.Schema.Types.ObjectId,
	    },
	
	    name: {
	      required: true,
	      type: String,
	    },
	
	    text: {
	      required: true,
	      type: String,
	    },
	
	    avatar: {
	      type: String,
	    },
	
	    comments: [
	      {
	        user: {
	          ref: 'user',
	          type: mongoose.Schema.Types.ObjectId,
	        },
	
	        name: {
	          type: String,
	        },
	
	        text: {
	          required: true,
	          type: String,
	        },
	
	        avatar: {
	          type: String,
	        },
	
	        date: {
	          default: Date.now,
	          type: Date,
	        },
	      },
	    ],
	  },
	  { timestamps: true }
	)
b94176c9be85164f4bb9a8d43141ed67|file:///Users/mohamedbgassama/.config/nvim/init.vim|174|7|V|vim
	      hj
239f88c4e12edc62b5122d5e511ab653|file:///Users/mohamedbgassama/.config/fish/config.fish|318|1|V|fish
	eval (starship init fish)
323a6f402104197f451e347c098bba81|file:///Users/mohamedbgassama/.tmux.conf|102|1|V|tmux
	select-pane -L
	
6d95e9fcde5e97b11f294f30c8ab764e|file:///Users/mohamedbgassama/.tmux.conf|100|1|v|tmux
	# split automatically on startup
	split-window -h -c "#{pane_current_path}"
	select-pane -L
	
	
d6da238e07432b8583d4e16bb30c0b2b|file:///Users/mohamedbgassama/.config/fish/config.fish|273|28|v|fish
	Prints information about network
4b07b041532e27fd5e6fe1b1a1447496|file:///Users/mohamedbgassama/.config/fish/config.fish|2|1|v|fish
	source ~/.config/fish/paths.fish
	
	
f54e36d6c6806cb1dbecbf1ddd848262|file:///Users/mohamedbgassama/.config/fish/config.fish|2|1|V|fish
	source ~/.config/fish/paths.fish
9db71733683e9ad81ceb6a002549a288|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|fish
	source ~/.config/fish/alias.fish
	
3fc8e5c0290da519dbf7579306e983e2|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|V|fish
	source ~/.config/fish/alias.fish
4565a52c6b31c4860ce4a033ecc76b91|file:///Users/mohamedbgassama/.config/fish/alias.fish|1|1|v|fish
	alias c='cargo'
	alias e='nvim'
	alias m='make'
	alias vimdiff='nvim -d'
	alias ct='cargo t'
	alias gah='git stash; and git pull --rebase; and git stash pop'
	
	
	# History lists your previously entered commands
	alias h='history'
	
	
	# python
	alias pyenvs='python3 -m venv env'
	alias pyenva='source env/bin/activate'
	alias host_file='python3 -m http.server'
	
	# node commands
	alias ni='npm install'
	alias nii='npm init'
	alias nis='npm install -S'
	alias nid='npm install -D'
	alias nuds='npm update -S'
	alias nudd='npm update -D'
	alias no='npm outdated'
	alias nl='npm ls --depth 0'
	alias nus='npm uninstall -S'
	alias nud='npm uninstall -D'
	alias nt='npm test'
	alias nit='npm install && npm test'
	alias nk='npm link'
	alias nr='npm run'
	alias ns='npm start'
	alias nf='npm cache clean && rm -rf node_modules && npm install'
	alias nlg='npm list --global --depth=0'
	alias nig='npm install --global'
	alias nug='npm uninstall --global'
	alias nug='npm update -g'
	alias nog='npm outdated -g --depth=0'
	alias npku='ncu --upgrade && ni'
	
	# yarn commands
	alias yi='yarn install'
	alias yii='yarn init'
	alias yas='yarn add'
	alias yad='yarn add --dsev'
	alias yr= 'yarn remove'
	alias yug='yarn upgrade'
	alias yl='yarn list --depth=0'
	alias yod='yarn outdated'
	alias yg='yarn global'
	alias yru='yarn run'
	alias yt='yarn test'
	alias ygu='yarn global upgrade'
	alias ypku='ncu --upgrade && yi'
	
	
	# git commands
	alias g='git'
	alias gi='git init'
	alias ga='git add -A'
	alias gc='git commit -m'
	alias gp='git push'
	alias gb='git branch'
	alias gbd="git branch -d"
	alias gco='git checkout'
	alias gm='git merge'
	alias gr='git reset'
	alias gpum='git pull upstream master'
	alias grv='git remote -v'
	alias grro='git remote rm origin'
	alias grao='git remote add origin'
	alias grru='git remote rm upstream'
	alias grau='git remote add upstream'
	alias gcl='git clone'
	alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
	alias gs='git status'
	alias gd='git diff'
	alias gsl='git shortlog'
	alias gk='gitk --all&'
	alias gx='gitx --all'
	alias got='git '
	
	
	# file commands
	alias work='cd code'
	alias com='cd Company'
	alias key='ssh-add'
	
	# docker commands
	alias dkps='docker ps'
	alias dkst='docker stats'
	alias dkpsa='docker ps -a'
	alias dkimgs='docker images'
	alias dkcpup='docker-compose up -d'
	alias dkcpdown='docker-compose down'
	alias dkcpstart='docker-compose start'
	alias dkcpstop='docker-compose stop'
	
	
	# heroku commands
	alias hlo='heroku login'
	alias hc= 'heroku create'
	alias hpm='git push heroku master'
	alias hp='heroku ps:scale web=1'
	alias ho='heroku open'
	alias hla='heroku local web'
	alias hacp='heroku addons:create papertrail'
	alias ha='heroku addons'
	alias haop='heroku addons:open papertrail'
	alias hrb='heroku run bash'
	alias hacbd='heroku addons:create heroku-postgresql:hobby-dev'
	alias hpsql='heroku pg:psql'
	alias hl='heroku logs --tail'
	
	# Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
	alias ta='tmux attach -t'
	alias tn='tmux new-session'
	alias tl='tmux list-sessions'
	alias trs='tmux rename-session -t'
	alias tks='tmux kill-session -t'
	
	# Change a directory
	alias cd..='cd ..'
	alias ..='cd ..'
	alias ...='cd ../..'
	alias ....='cd ../../..'
	alias .....='cd ../../../..'
	
	# Make a directory
	alias md='mkdir -p'
	
	# Permissions to files
	alias cx='chmod +x'
	alias 'c-x'='chmod -x'
	
	# Quick edits
	alias ea='nvim ~/.config/fish/alias.fish'
	alias ef='nvim ~/.config/fish/config.fish'
	alias eg='nvim ~/.gitconfig'
	alias ev='nvim ~/.config/nvim/init.vim'
	alias et= 'nvim ~/.tmux.conf'
807e4d312db5ea377e95a16d2ec18fdd|file:///Users/mohamedbgassama/.config/fish/alias.fish|1|1|v|fish
	alias c='cargo'
	alias e='nvim'
	alias m='make'
	alias vimdiff='nvim -d'
	alias ct='cargo t'
	alias gah='git stash; and git pull --rebase; and git stash pop'
	
	
	# History lists your previously entered commands
	alias h='history'
	
	
	# python
	alias pyenvs='python3 -m venv env'
	alias pyenva='source env/bin/activate'
	alias host_file='python3 -m http.server'
	
	# node commands
	alias ni='npm install'
	alias nii='npm init'
	alias nis='npm install -S'
	alias nid='npm install -D'
	alias nuds='npm update -S'
	alias nudd='npm update -D'
	alias no='npm outdated'
	alias nl='npm ls --depth 0'
	alias nus='npm uninstall -S'
	alias nud='npm uninstall -D'
	alias nt='npm test'
	alias nit='npm install && npm test'
	alias nk='npm link'
	alias nr='npm run'
	alias ns='npm start'
	alias nf='npm cache clean && rm -rf node_modules && npm install'
	alias nlg='npm list --global --depth=0'
	alias nig='npm install --global'
	alias nug='npm uninstall --global'
	alias nug='npm update -g'
	alias nog='npm outdated -g --depth=0'
	alias npku='ncu --upgrade && ni'
	
	# yarn commands
	alias yi='yarn install'
	alias yii='yarn init'
	alias yas='yarn add'
	alias yad='yarn add --dsev'
	alias yr= 'yarn remove'
	alias yug='yarn upgrade'
	alias yl='yarn list --depth=0'
	alias yod='yarn outdated'
	alias yg='yarn global'
	alias yru='yarn run'
	alias yt='yarn test'
	alias ygu='yarn global upgrade'
	alias ypku='ncu --upgrade && yi'
	
	
	# git commands
	alias g='git'
	alias gi='git init'
	alias ga='git add -A'
	alias gc='git commit -m'
	alias gp='git push'
	alias gb='git branch'
	alias gbd="git branch -d"
	alias gco='git checkout'
	alias gm='git merge'
	alias gr='git reset'
	alias gpum='git pull upstream master'
	alias grv='git remote -v'
	alias grro='git remote rm origin'
	alias grao='git remote add origin'
	alias grru='git remote rm upstream'
	alias grau='git remote add upstream'
	alias gcl='git clone'
	alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
	alias gs='git status'
	alias gd='git diff'
	alias gsl='git shortlog'
	alias gk='gitk --all&'
	alias gx='gitx --all'
	alias got='git '
	
	
	# file commands
	alias work='cd code'
	alias com='cd Company'
	alias key='ssh-add'
	
	# docker commands
	alias dkps='docker ps'
	alias dkst='docker stats'
	alias dkpsa='docker ps -a'
	alias dkimgs='docker images'
	alias dkcpup='docker-compose up -d'
	alias dkcpdown='docker-compose down'
	alias dkcpstart='docker-compose start'
	alias dkcpstop='docker-compose stop'
	
	
	# heroku commands
	alias hlo='heroku login'
	alias hc= 'heroku create'
	alias hpm='git push heroku master'
	alias hp='heroku ps:scale web=1'
	alias ho='heroku open'
	alias hla='heroku local web'
	alias hacp='heroku addons:create papertrail'
	alias ha='heroku addons'
	alias haop='heroku addons:open papertrail'
	alias hrb='heroku run bash'
	alias hacbd='heroku addons:create heroku-postgresql:hobby-dev'
	alias hpsql='heroku pg:psql'
	alias hl='heroku logs --tail'
	
	# Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
	alias ta='tmux attach -t'
	alias tn='tmux new-session'
	alias tl='tmux list-sessions'
	alias trs='tmux rename-session -t'
	alias tks='tmux kill-session -t'
	
	# Change a directory
	alias cd..='cd ..'
	alias ..='cd ..'
	alias ...='cd ../..'
	alias ....='cd ../../..'
	alias .....='cd ../../../..'
	
	# Make a directory
	alias md='mkdir -p'
	
	# Permissions to files
	alias cx='chmod +x'
	alias 'c-x'='chmod -x'
	
	# Quick edits
	alias ea='nvim ~/.config/fish/alias.fish'
	alias ef='nvim ~/.config/fish/config.fish'
	alias eg='nvim ~/.gitconfig'
	alias ev='nvim ~/.config/nvim/init.vim'
	a
96d7087fe979eb5aff14f6f080ffe23c|file:///Users/mohamedbgassama/.config/fish/config.fish|2|1|V|fish
	urce ~/.config/fish/paths.fish
8f4bd3f67fc063c353fa9e263e48ba3e|file:///Users/mohamedbgassama/.config/fish/alias.fish|143|1|v|fish
	alias et='nvim ~/.tmux.conf'
d574d4bb40c84861791a694a999cce69|file:///Users/mohamedbgassama/.config/nvim/init.vim|4|16|v|vim
	bash
4d15784ffe44277625edc74020a250ce|term://.//65053%3A/bin/bash|1|1|V|
	
	The default interactive shell is now zsh.
f9ba8ccfdaaa897d566f5e5d2cb809ac|file:///Users/mohamedbgassama/.config/nvim/init.vim|309|19|V|vim
	                \ "smartindent", "si",   "nosmartindent", "nosi",
	                \ "autoindent",  "ai",   "noautoindent", "noai",
c39cafe63e2b890485a425268af3110e|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|21|v|vim
	abstop
e0eb701995a9fd6d8602a19bbf3090da|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|v|vim
	\ 'tabstop',     'ts',
	
be1f88533abcb952da5d9d1f4d59600b|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'tabstop',     'ts',
fcaafe1acf3f860f9ca7508db315d2cb|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'shiftwidth',  'sw',
a069dfbed0a56869843dacca7180f826|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'expandtab',   'et',   'noexpandtab', 'noet',
23060d09027c5bee3940d038ec1a4f4b|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'filetype',    'ft',
2e20b13af99ce9380362ea8159ebce13|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'foldmethod',  'fdm',
662d913a78589387c1d9aebb45d49fdd|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'readonly',    'ro',   'noreadonly', 'noro',
c504ce65fc3d1ac99df9c20bbad77604|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'rightleft',   'rl',   'norightleft', 'norl',
8559c46bae9ec46379bd40bf826fa1e4|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'cindent',     'cin',  'nocindent', 'nocin',
93ab249ee1b147aecba01576e3410f09|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'smartindent', 'si',   'nosmartindent', 'nosi',
ee29d01c7de838f7c5bbe3b649c5cfcd|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'autoindent',  'ai',   'noautoindent', 'noai',
76acc4349387be29cd42f2f99d4efaf3|file:///Users/mohamedbgassama/.config/nvim/init.vim|301|17|V|vim
	                \ 'spell', 'nospell',
6d0a8c11581e61bc88cba44dcbb54cae|file:///Users/mohamedbgassama/.config/nvim/init.vim|667|10|V|vim
	  "  ccwdw<Space> - PageDown
	  "   -       - PageUp
0426af1c4915a347f96ab3dd8a53f7a8|file:///Users/mohamedbgassama/.tmux.conf|130|1|V|tmux
	# More pane shortcuts
bdec6cd20b3f3d0f4b9bf741e386b63e|file:///Users/mohamedbgassama/.tmux.conf|134|53|v|tmux
	nocjkjkjkl
93c503dda5ed54e74a8894ddaab63c10|file:///Users/mohamedbgassama/.tmux.conf|130|1|v|tmux
	# split current pane full width horizontally
	bind \ split-window -l 20 -h  -c "#{pane_current_path}"
	
	
04bcab9c6a43fef7669ec132e7d9c39d|file:///Users/mohamedbgassama/.tmux.conf|136|1|V|tmux
	
	# Smart pane switching with awareness of vim splits
5c1a0b52c7badaaa0cc78b5f4e0b799a|file:///Users/mohamedbgassama/.tmux.conf|254|15|v|tmux
	right 
7c4f29407893c334a6cb7a87bf045c0d|file:///Users/mohamedbgassama/.tmux.conf|254|15|v|tmux
	right
890832853980a8e3bfc7ff13815bcafe|file:///Users/mohamedbgassama/.tmux.conf|253|1|V|tmux
	# Add any of the supported format strings (see below) to the status-right tmux
	set -g status-left '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
c0701cf97c33792758b645a5192cc67f|file:///Users/mohamedbgassama/.tmux.conf|253|1|v|tmux
	# Add any of the supported format strings (see below) to the status-right tmux
	set -g status-left '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
	
	#
3df1f5c8e0363ec7395ee4cc8b7d59b0|file:///Users/mohamedbgassama/.config/nvim/init.vim|81|1|V|vim
	syntax on
dbaa28f56df6f2cb5ffff49113e06547|file:///Users/mohamedbgassama/.config/nvim/init.vim|334|3|v|vim
	" Colors
	  set background=dark
	  hi Normal ctermbg=NONE
	  " Get syntax
	  syntax on
	
	
adcc8b5add80054a5275a776ebc3adc3|file:///Users/mohamedbgassama/.tmux.conf|240|1|V|tmux
	set -g status-left "#{cpu_bg_color}#{cpu_fg_color} {cpu_icon}#{cpu_percentage} #{cpu_icon}"
81cd973f84ae87cea3048cb5180f862b|file:///Users/mohamedbgassama/.tmux.conf|240|52|v|tmux
	cpu_icon
6c868ec222a100f9a65584b0c3b9f7d6|file:///Users/mohamedbgassama/.tmux.conf|240|79|v|tmux
	} Online: #{online_status}"
0b1b41c8582645af0b1a821457b09d17|file:///Users/mohamedbgassama/.tmux.conf|240|86|v|tmux
	e: #{online_status}"
ced373157a1bf8759e1c4e49e1669d92|file:///Users/mohamedbgassama/.tmux.conf|242|1|V|tmux
	set -g status-left-length 85
95ffbba1ad8a97130c425fe408404265|file:///Users/mohamedbgassama/.tmux.conf|254|1|v|tmux
	# Add any of the supported format strings (see below) to the status-right tmux
	#set -g status-left '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
	
	
254dcc92b0eaf968b6d11fc9ea80a024|file:///Users/mohamedbgassama/.tmux.conf|254|1|V|tmux
	# Add any of the supported format strings (see below) to the status-right tmux
eebf93356607b03cbb64129e89b45e8f|file:///Users/mohamedbgassama/.tmux.conf|254|1|V|tmux
	#set -g status-left '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
8ca4fa7101b13b67a4ea01926f2fa280|file:///Users/mohamedbgassama/.tmux.conf|248|104|v|tmux
	| %a %h-%d %H:%M '
811882fecd5c7618d7099ebbd39ea254|file:///Users/mohamedbgassama/.tmux.conf|248|15|v|tmux
	left
35a0d4bb68d28ebab413e45dfb767428|file:///Users/mohamedbgassama/.tmux.conf|241|21|v|tmux
	Online: #{online_status}"
dec8b05ad4e411920b25e355f5960f9f|file:///Users/mohamedbgassama/.tmux.conf|251|23|v|tmux
	#{battery_status_bg} Battary: #{battery_icon} #{battery_percentage} #{battery_remain}
f5995deafa1b824794e6e0ce4bc7b4ce|file:///Users/mohamedbgassama/.tmux.conf|250|1|V|tmux
	#set -g status-right "#{battery_status_bg} Battary: #{battery_icon} #{battery_percentage} #{battery_remain}"
cb92a532c5a558c966c899f60f05fddf|file:///Users/mohamedbgassama/.tmux.conf|242|1|v|tmux
	set -g status-left-length 70
	
bb1020dc7cde5c8c2c692d1d3ebdcc85|file:///Users/mohamedbgassama/.tmux.conf|242|1|V|tmux
	#set -g status-left "Online: #{online_status}"
54fe84e3258dd360d30425dcb699f8ae|file:///Users/mohamedbgassama/.tmux.conf|250|1|v|tmux
	set -g @online_icon "OK"
	set -g @offline_icon "Offline!"
	
	
cc77b8878e1ca99969778960890f050f|file:///Users/mohamedbgassama/.tmux.conf|246|1|V|tmux
	set -g status-left-length 70
dc13515d319bde707dcdb083e877e57f|file:///Users/mohamedbgassama/.tmux.conf|250|1|v|tmux
	
	
	set -g @online_icon "OK"
	set -g @offline_icon "Offline!"
	
	
	
fa89b448f9250937a8b43fa8678924c9|file:///Users/mohamedbgassama/.tmux.conf|247|213|v|tmux
	attary
e07e7e0e6c53bd331ad8a8f33bdeae49|file:///Users/mohamedbgassama/jarvis/docs/COMMANDS.md|37|1|V|markdown
	| `<leader>dj` | normal          | Coc.nvim                        | Jump to implementation(s) of symbol under cursor  |
02405687e003a73f2a4e387d2d08cc99|file:///Users/mohamedbgassama/jarvis/docs/COMMANDS.md|37|1|V|markdown
	| `<leader>dr` | normal          | Coc.nvim                        | Show references of symbol under cursor.    |
62b88ae182ad24b6dc19e47623812a56|file:///Users/mohamedbgassama/jarvis/docs/COMMANDS.md|37|1|V|markdown
	| `<leader>dd` | normal          | Coc.nvim                        | Look up definition of word under cursor |
abb3298941f8781165643a0c965ed072|file:///Users/mohamedbgassama/code/open-source/deno/deno_typescript/bundle_loader.js|108|22|v|javascriptreact
	(exports, factory
54219f1f0e878b13e6c51f92bd25a0da|file:///Users/mohamedbgassama/.zshrc|148|1|v|zsh
	# Express backend essential node packages
	 alias expressjsPack='yas express express-validator bcryptjs config gravatar jsonwebtoken mongoose request ramda lodash chalk cors helmet morgan compression path && yad @babel/cli @babel/core @babel/plugin-proposal-class-properties @babel/plugin-proposal-object-rest-spread @babel/preset-env babel-core babel-eslint babel-jest eslint eslint-config-prettier eslint-config-standard eslint-friendly-formatter eslint-loader eslint-plugin-import eslint-plugin-jest eslint-plugin-node eslint-plugin-prettier eslint-plugin-promise eslint-plugin-standard jest mock-req-res nodemon prettier rimraf supertest concurrently'
	 alias clientjs='nis axios react-router-dom redux react-redux redux-thunk redux-devtools-extension moment react-moment styled-components prop-types @material-ui/core @material-ui/icons  redux-logger'
	 alias clientfiles='cd src && mkdir actions && cd actions && mkdir actionTypes && cd actionTypes && touch userTypes  && cd ../.. && mkdir components && cd components && mkdir Routing && cd Routing && touch Routes.js PrivateRoute.js && cd .. && mkdir Auth && cd Auth && touch Login.js Register.js && cd ../.. && mkdir reducers && cd reducers && touch userReducer.js index.js && cd .. && mkdir store && cd store && touch createAppStore.js && cd .. && mkdir libs util && cd util && touch setAuthToken.js && cd ../..'
	 alias serverfiles='mkdir src && cd src &&  mkdir config && cd config && touch db.js default.json dev.js index.js test.js prod.js && cd .. && mkdir middleware && cd middleware && touch auth.js serverMiddleware.js && cd .. && mkdir resources && cd resources && mkdir user && cd user && touch user.controllers.js user.router.js user.model.js && cd ../.. && mkdir utils && cd utils && touch crud.js scripts.js && cd .. && mkdir test && cd test && touch users.spec.js && cd ../.. && touch .gitignore .eslintrc.js .babelrc nodemon.json .prettierrc.js server.js index.js'
	 alias crarFiles='cd src && mkdir components reducer action store && cd reducer && touch index.js && cd .. && cd action && mkdir actionTypes actionCreators && cd actionTypes && touch index.js && cd .. && cd actionCreators && touch index.js && cd .. && cd .. && cd store && touch createAppStore.js && cd ../..'
	 alias crarPackages='nis axios react-router-dom  redux-logger redux react-redux redux-thunk redux-devtools-extension prop-types bootstrap'
	 alias craFiles='cd src && mkdir components && cd components && touch Indes.js && cd ..' 
	 alias craPackages='nis axios react-router-dom prop-types bootstrap'
	
	
4ad75fa06be49add9e34803e5eebf750|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|316|1|V|vim
	" ============================================================================ "
69cf7ad870dc9a19528058904bbaaddd|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|84|1|V|vim
	Plug 'ryanoasis/vim-devicons'
400a9c891bbd40d33ad55d25523fe885|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|12|1|V|vim
	 set nonumber
bbb0b449076d6d6ed7157a3cb0e63664|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|470|1|V|vim
	" Enable line numbers
b2afc5d7360ba8c15b7f1503328ae701|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|470|1|V|vim
	set number
6a3011ab36d76e5e8373176cd22b3a80|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|485|1|V|vim
	map <Enter> o<ESC>
267ff403c95d093a92dacea9e5ccfea0|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|485|1|V|vim
	map <S-Enter> O<ESC>
e03b600f37d31a5cc58fa63f07978746|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|485|1|V|vim
	p <Enter> o<ESC>
2210a2fca76bc0be329770c5b686d048|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|469|1|V|vim
	iiii
f1a28cacf6cddac728128ca70ca79087|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/App.js|11|14|V|javascriptreact
	            <li></li>
	            <li></li>
7c514f5242cc4fedb5f4583dcd2a8096|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|9|1|V|vim
	let g:mapleader=' '
4ff2247c24ae8242f79eaa13b20dbfcd|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|572|1|V|vim
	Hit Enter to go to end of file.
f2a6c498fb90ee345d997f888fce3b18|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|573|11|v|vim
	Delete
880e068e9c6af79d6aac3dfc42f4dfa1|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|574|12|v|vim
	elete
baf84d2b05beee3f231352469151dcc0|file:///Users/mohamedbgassama/.tmux.conf|101|17|v|tmux
	"(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-
c8eb9b18d29bedae25d4cce430e90bf4|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/public/index.html|3|9|v|html
	
	    <meta charset="utf-8">
	    <link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico">
	    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	    <meta name="theme-color" content="#000000">
	    <!--
	      manifest.json provides metadata used when your web app is added to the
	      homescreen on Android. See https://developers.google.com/web/fundamentals/web-app-manifest/
	    -->
	    <link rel="manifest" href="%PUBLIC_URL%/manifest.json">
	    <!--
	      Notice the use of %PUBLIC_URL% in the tags above.
	      It will be replaced with the URL of the `public` folder during the build.
	      Only files inside the `public` folder can be referenced from the HTML.
	
	      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
	      work correctly both with client-side routing and a non-root public URL.
	      Learn how to configure a non-root public URL by running `npm run build`.
	    -->
	    <title>React App</title>
	  
aa3683a9553ebf976f37760950b8a503|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/public/index.html|7|6|v|html
	meta name="theme-color" content="#000000"
19957784361cb29caaddce6d9b0eb56b|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/public/index.html|22|12|v|html
	React App
0d40f4f9427e0df696534f7aca0565a3|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/public/index.html|22|6|v|html
	title>React App
aa57e3e020b392211920e6950c3e3ee4|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/public/index.html|22|6|v|html
	title>React App<
cbcebe453bfdb72c6830e1354b420260|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/public/index.html|25|15|v|html
	
	      You need to enable JavaScript to run this app.
	    
88183790a591e7271e1726bce2685892|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/index.js|10|15|v|javascriptreact
	"Heeloj"
ad1d933ce7f1af70c28374dc4bceca72|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/index.js|8|1|v|javascriptreact
	const go = () => {
	  let name = "This is name";
	  console.log(name);
	};
b3d2e0a01896183243a4aed9bedd8e1b|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/index.js|6|17|V|javascriptreact
	import Css from "./App.css";
	ReactDOM.render(<App />, document.getElementById("root"));
4b4dcc885e048a1088de728839f1b9c0|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/index.js|6|18|v|javascriptreact
	./App.css
5fac38767930d8cacdf3279e218bbd58|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/index.js|6|18|v|javascriptreact
	./index
3c7d410e92b50f918efa4aa29f89d048|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/index.js|6|1|V|javascriptreact
	import Css from "./App.css";
4e79a1ab54741fbd99f6ee765ec467cf|file:///Users/mohamedbgassama/code/wdi/labs/crud-with-redux/backend/server.js|1|1|V|javascriptreact
	import express from 'express';
82d32ea764d6a877f93abd7d4c64b5dc|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|2|37|v|vim
	PLUGINS                                === "
	" ============================================================================ "
	
	" check whether vim-plug is installed and install it if necessary
	let plugpath = expand('<sfile>:p:h'). '/autoload/plug.vim'
	if !filereadable(plugpath)
	    if executable('curl')
	        let plugurl = 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
	        call system('curl -fLo ' . shellescape(plugpath) . ' --create-dirs ' . plugurl)
	        if v:shell_error
	            echom "Error downloading vim-plug. Please install it manually.\n"
	            exit
	        endif
	    else
	        echom "vim-plug not installed. Please install it manually or install curl.\n"
	        exit
	    endif
	endif
	
	call plug#begin('~/.config/nvim/plugged')
	
	" === Editing Plugins === "
	" Trailing whitespace highlighting & automatic fixing
	Plug 'ntpeters/vim-better-whitespace'
	
	" auto-close plugin
	Plug 'rstacruz/vim-closer'
	
	" Improved motion in Vim
	Plug 'easymotion/vim-easymotion'
	
	" Intellisense Engine
	Plug 'neoclide/coc.nvim', {'branch': 'release'}
	
	" Denite - Fuzzy finding, buffer management
	Plug 'Shougo/denite.nvim'
	
	" Snippet support
	Plug 'Shougo/neosnippet'
	Plug 'Shougo/neosnippet-snippets'
	
	" Print function signatures in echo area
	Plug 'Shougo/echodoc.vim'
	
	" === Git Plugins === "
	" Enable git changes to be shown in sign column
	Plug 'mhinz/vim-signify'
	Plug 'tpope/vim-fugitive'
	
	" === Javascript Plugins === "
	" Typescript syntax highlighting
	Plug 'HerringtonDarkholme/yats.vim'
	
	" ReactJS JSX syntax highlighting
	Plug 'mxw/vim-jsx'
	
	" Generate JSDoc commands based on function signature
	Plug 'heavenshell/vim-jsdoc'
	
	" === Syntax Highlighting === "
	
	" Syntax highlighting for nginx
	Plug 'chr4/nginx.vim'
	
	" Syntax highlighting for javascript libraries
	Plug 'othree/javascript-libraries-syntax.vim'
	
	" Improved syntax highlighting and indentation
	Plug 'othree/yajs.vim'
	
	" === UI === "
	" File explorer
	Plug 'scrooloose/nerdtree'
	
	" Colorscheme
	Plug 'mhartington/oceanic-next'
	
	" Customized vim status line
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
	
	" Icons
	Plug 'ryanoasis/vim-devicons'
	Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
	
	" My additional plugins
	
	" Tmux vim smart navigator
	Plug 'christoomey/vim-tmux-navigator'
	
	" Emmet plugin for HTML/CSS
	Plug 'mattn/emmet-vim'
	
	" Files comments
	Plug 'preservim/nerdcommenter'
	
	" For Editor Config
	Plug 'editorconfig/editorconfig-vim'
	
	" Syn
41afaea1aa867401dacc2267832ca4d7|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|115|1|v|vim
	Plug
41afaea1aa867401dacc2267832ca4d7|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|115|1|v|vim
	Plug
41afaea1aa867401dacc2267832ca4d7|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|115|1|v|vim
	Plug
41afaea1aa867401dacc2267832ca4d7|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|115|1|v|vim
	Plug
5a3aa1f0fa8948628c7b474eb2fb93dc|file:///Users/mohamedbgassama/.zshrc|21|1|v|zsh
	function zle-keymap-select {
	  if [[ ${KEYMAP} == vicmd ]] ||
	     [[ $1 = 'block' ]]; then
	    echo -ne '\e[1 q'
	  elif [[ ${KEYMAP} == main ]] ||
	       [[ ${KEYMAP} == viins ]] ||
	       [[ ${KEYMAP} = '' ]] ||
	       [[ $1 = 'beam' ]]; then
	    echo -ne '\e[5 q'
	  fi
	}
	
af0d32d70d6e13e889da6f62f094b9e2|file:///Users/mohamedbgassama/.zshrc|14|1|v|zsh
	bindkey -M menuselect 'h' vi-backward-char
	bindkey -M menuselect 'k' vi-up-line-or-history
	bindkey -M menuselect 'l' vi-forward-char
	bindkey -M menuselect 'j' vi-down-line-or-history
	bindkey -v '^?' backward-delete-char
	
	# Change cursor shape for different vi modes.
	function zle-keymap-select {
	  if [[ ${KEYMAP} == vicmd ]] ||
	     [[ $1 = 'block' ]]; then
	    echo -ne '\e[1 q'
	  elif [[ ${KEYMAP} == main ]] ||
	       [[ ${KEYMAP} == viins ]] ||
	       [[ ${KEYMAP} = '' ]] ||
	       [[ $1 = 'beam' ]]; then
	    echo -ne '\e[5 q'
	  fi
	}
cc47f560f96c83b116ffd44ba2730d84|file:///Users/mohamedbgassama/.zshrc|14|1|V|zsh
	ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bg=cyan,bold,underline"
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
cf1e8c14e54505f60aa10ceb8d5d8ab3|file:///Users/mohamedbgassama/code/knowledgeHouse/express-api/server.js|17|1|v|javascriptreact
	server
49942b698110ce2461a767b721005d29|file:///Users/mohamedbgassama/.zshrc|324|1|V|zsh
	SPACESHIP_GIT_STATUS_STASHED=''
af7fd7f20c03ef19dc3872ca15a110b1|file:///Users/mohamedbgassama/.zshrc|78|1|V|zsh
	# Edit line in vim with ctrl-e:
abbf90944f05c7bcf74c216022629cf0|file:///Users/mohamedbgassama/.zshrc|78|1|V|zsh
	autoload edit-command-line; zle -N edit-command-line
ce388a1e3fb2aafcc080ce0e04ccc7e4|file:///Users/mohamedbgassama/.zshrc|78|1|V|zsh
	bindkey '^e' edit-command-line
9b1c9ecf962fb9f7b147d939c6c5afab|file:///Users/mohamedbgassama/.zshrc|314|9|v|zsh
	gument
3b4152865c05cb2df14ca4300b813f4b|file:///Users/mohamedbgassama/.zshrc|314|1|V|zsh
	alias  
0824bf51c493727403b9a67bff7b4ac6|file:///Users/mohamedbgassama/.zshrc|7|1|V|zsh
	HISTFILE=~/.cache/zsh/history
38a59b67899687a3756d42e18e5abce3|file:///Users/mohamedbgassama/.zshrc|4|1|V|zsh
	# History in cache directory:
cb2ba551acafa5526d9b680cfcc11a66|file:///Users/mohamedbgassama/.zshrc|4|1|V|zsh
	HISTSIZE=10000
e6270974f391e3a97861c7643565e1d9|file:///Users/mohamedbgassama/.zshrc|4|1|V|zsh
	SAVEHIST=10000
867755e57598ff24f3e854f19f096bdc|file:///Users/mohamedbgassama/.zshrc|4|1|v|zsh
	# History in cache directory:
	HISTSIZE=10000
	SAVEHIST=10000
	HISTFILE=~/.cache/zsh/history
	
	
4eebacd1270382092c6708b572070225|file:///Users/mohamedbgassama/.config/fish/config.fish|1|1|v|
	alias c='cargo'
	
	alias e='nvim'
	alias m='make'
	alias vimdiff='nvim -d'
	alias ct='cargo t'
	alias gah='git stash; and git pull --rebase; and git stash pop'
	
	
	# History lists your previously entered commands
	alias h='history'
	
	
b7169bb0c6499bb8d973d914033c86a3|file:///Users/mohamedbgassama/.config/fish/config.fish|117|1|v|
	# Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
	alias ta='tmux attach -t'
	alias tn='tmux new-session'
	alias tl='tmux list-sessions'
	alias trs='tmux rename-session -t'
	alias tks='tmux kill-session -t'
	
	# Change a directory
	alias cd..='cd ..'
	alias ..='cd ..'
	alias ...='cd ../..'
	alias ....='cd ../../..'
	alias .....='cd ../../../..'
	
	# Make a directory
	alias md='mkdir -p'
	
	# Permissions to files
	alias cx='chmod +x'
	alias 'c-x'='chmod -x'
	
	# Quick edits
	alias ea='nvim ~/.config/fish/alias.fish'
	alias ef='nvim ~/.config/fish/config.fish'
	alias eg='nvim ~/.gitconfig'
	alias ev='nvim ~/.config/nvim/init.vim'
	alias et='nvim ~/.tmux.conf'
	
	
518dc10de442af2903bb4819e9a028b4|file:///Users/mohamedbgassama/.config/fish/config.fish|117|2|v|
	 Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
	alias ta='tmux attach -t'
	alias tn='tmux new-session'
	alias tl='tmux list-sessions'
	alias trs='tmux rename-session -t'
	alias tks='tmux kill-session -t'
	
	# Change a directory
	alias cd..='cd ..'
	alias ..='cd ..'
	alias ...='cd ../..'
	alias ....='cd ../../..'
	alias .....='cd ../../../..'
	
	# Make a directory
	alias md='mkdir -p'
	
	# Permissions to files
	alias cx='chmod +x'
	alias 'c-x'='chmod -x'
	
	# 
69a540a840c1c47abee8ce7eef4930d7|file:///Users/mohamedbgassama/.config/fish/config.fish|117|1|V|
	# Some tmux-related shell aliases
	alias t='tmux attach || tmux new-session'
d72f25670e4f0a3b544e478ffa633261|file:///Users/mohamedbgassama/.config/fish/config.fish|151|1|v|
	if which exa >/dev/null 2>/dev/null
		abbr -a l 'exa'
		abbr -a ls 'exa'
		abbr -a ll 'exa -l'
		abbr -a lll 'exa -la'
	else
		abbr -a l 'ls'
		abbr -a ll 'ls -l'
		abbr -a lll 'ls -la'
	end
2ed410b0f7ee72ee56d5e08b6730b1c0|file:///Users/mohamedbgassama/.config/fish/config.fish|151|1|v|
	if which exa >/dev/null 2>/dev/null
		abbr -a l 'exa'
		abbr -a ls 'exa'
		abbr -a ll 'exa -l'
		abbr -a lll 'exa -la'
	else
		abbr -a l 'ls'
		abbr -a ll 'ls -l'
		abbr -a lll 'ls -la'
	end
	
	
4196e892190a78d8469eb473b39963b4|file:///Users/mohamedbgassama/.config/fish/config.fish|150|1|v|
	if which exa >/dev/null 2>/dev/null
		abbr -a l 'exa'
		abbr -a ls 'exa'
		abbr -a ll 'exa -l'
		abbr -a lll 'exa -la'
	else
		abbr -a l 'ls'
		abbr -a ll 'ls -l'
		abbr -a lll 'ls -la'
	end
	
	i
7eb9be0643003787bf97b031ac5683bf|file:///Users/mohamedbgassama/.config/fish/config.fish|150|1|V|
	if which exa >/dev/null 2>/dev/null
		abbr -a l 'exa'
1606eac976755a7d7e984740bb0d9b2a|file:///Users/mohamedbgassama/.config/fish/config.fish|150|1|V|
	if which exa >/dev/null 2>/dev/null
3d8155e545c369e96094f7f77783b8dd|file:///Users/mohamedbgassama/.zshrc|312|1|^v|zsh
	     alias -a
	     alias -a
	     alias -a
	     alias -a
	e
	     alias -a
	     alias -a
	     alias -a
	
2ceec44386f996207edfa5425073654c|file:///Users/mohamedbgassama/.config/fish/config.fish|149|1|v|
	
	if which exa >/dev/null 2>/dev/null
		abbr -a l 'exa'
		abbr -a ls 'exa'
		abbr -a ll 'exa -l'
		abbr -a lll 'exa -la'
	else
		abbr -a l 'ls'
		abbr -a ll 'ls -l'
		abbr -a lll 'ls -la'
	end
39be3faa6756adbe3c5ceabd9265b7b9|file:///Users/mohamedbgassama/.zshrc|27|3|v|zsh
	elif
66f00faa702328ee0aa7efc8e6cf1d9b|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|117|1|V|vim
	Plug 'vimwiki/vimwiki'
bcdcfdea598cab2d15c39f53bd591552|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|282|1|V|vim
	"VimWiki currently ships with 3 syntaxes: VimWiki (default), Markdown (markdown), and MediaWiki (media)
510dd06f5e7a9a0333a15811e6caa211|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|117|1|V|vim
	" Insights
bb1226d0ceabc7ce8997d8cf3dd8a737|file:///Users/mohamedbgassama/.zshrc|335|1|V|zsh
	alias ea='nvim ~/.config/fish/alias.fish'
84ea7c7045341f9c9d756d20d504c567|file:///Users/mohamedbgassama/.zshrc|335|1|V|zsh
	alias ef='nvim ~/.config/fish/config.fish'
5a0f4cf7923cb49bc15251a92cd1f5ad|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|584|1|v|vim
	noremap <leader>G <C-a>z :Goyo<CR>
	
b2004a734372cf911ebc768e0b1267e2|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|569|1|v|vim
	" Move a line of text using ALT+[jk] or Command+[jk] on mac
	nmap <M-j> mz:m+<CR>`z
	nmap <M-k> mz:m-2<CR>`z
	vmap <M-j> :m'>+<CR>`<my`>mzgv`yo`z
	vmap <M-k> :m'<-2<CR>`>my`<mzgv`yo`z
	
	"
be21889d577ff33d1515a30d78861a69|file:///Users/mohamedbgassama/.zshrc|22|1|v|zsh
	# Change cursor shape for different vi modes.
	function zle-keymap-select {
	  if [[ ${KEYMAP} == vicmd ]] ||
	     [[ $1 = 'block' ]]; then
	    echo -ne '\e[1 q'
	  elif [[ ${KEYMAP} == main ]] ||
	       [[ ${KEYMAP} == viins ]] ||
	       [[ ${KEYMAP} = '' ]] ||
	       [[ $1 = 'beam' ]]; then
	    echo -ne '\e[5 q'
	  fi
	}
	zle -N zle-keymap-select
	zle-line-init() {
	    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
	    echo -ne "\e[5 q"
	}
	zle -N zle-line-init
	echo -ne '\e[5 q' # Use beam shape cursor on startup.
	preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.
	
	# Use lf to switch directories and bind it to ctrl-o
	lfcd () {
	    tmp="$(mktemp)"
	    lf -last-dir-path="$tmp" "$@"
	    if [ -f "$tmp" ]; then
	        dir="$(cat "$tmp")"
	        rm -f "$tmp"
	        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
	    fi
	}
	bindkey -s '^o' 'lfcd\n'
	
	
0c25552390b852785e61bdf5e64f1b44|file:///Users/mohamedbgassama/.zshrc|22|1|V|zsh
	# Change cursor shape for different vi modes.
	function zle-keymap-select {
a7797c27d4daea4e701c34702f951c15|file:///Users/mohamedbgassama/.zshrc|23|1|v|zsh
	function zle-keymap-select {
	  if [[ ${KEYMAP} == vicmd ]] ||
	     [[ $1 = 'block' ]]; then
	    echo -ne '\e[1 q'
	  elif [[ ${KEYMAP} == main ]] ||
	       [[ ${KEYMAP} == viins ]] ||
	       [[ ${KEYMAP} = '' ]] ||
	       [[ $1 = 'beam' ]]; then
	    echo -ne '\e[5 q'
	  fi
	}
	zle -N zle-keymap-select
	zle-line-init() {
	    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
	    echo -ne "\e[5 q"
	}
	zle -N zle-line-init
	echo -ne '\e[5 q' # Use beam shape cursor on startup.
	preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.
	
	# Use lf to switch directories and bind it to ctrl-o
	lfcd () {
	    tmp="$(mktemp)"
	    lf -last-dir-path="$tmp" "$@"
	    if [ -f "$tmp" ]; then
	        dir="$(cat "$tmp")"
	        rm -f "$tmp"
	        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
	    fi
	}
	b
32a3678ce053958a166730a714016c7f|file:///Users/mohamedbgassama/.zshrc|491|1|v|zsh
	alias et='nvim ~/.tmux.conf'
	
a23abcfd918f14f15f05cfa7867e5d72|file:///Users/mohamedbgassama/.zshrc|492|19|v|zsh
	tmux.conf'
6c2a413d159252907d17799b9e302415|file:///Users/mohamedbgassama/.zshrc|492|1|v|zsh
	alias ez='nvim ~/.zshrc'
7e19cfccabdf5cc16daff07854045508|file:///Users/mohamedbgassama/.zshrc|493|18|v|zsh
	.zshrc'
d7b28517f4966d0600508314d9a6d922|file:///Users/mohamedbgassama/.zshrc|495|6|V|zsh
	if [ which exa > /dev/null 2> ];
	then
	  alias l='exa'
50b9be60aa654432ce812a510db45b10|file:///Users/mohamedbgassama/.zshrc|495|6|v|zsh
	which exa 
890b2c132ee6c8dd6e7a950831f032e7|file:///Users/mohamedbgassama/.zshrc|495|5|v|zsh
	 which exa > /dev/null 2> 
d305834a3cdeafef9c33424cfc9bb843|file:///Users/mohamedbgassama/.zshrc|495|4|V|zsh
	if [command -v exa > /dev/null];
	then
d10dcae79a2ba2d36fb5d1a28438a607|file:///Users/mohamedbgassama/.zshrc|495|5|v|zsh
	command -v exa > /dev/null
05453bdcea57aeeee7590480f21de390|file:///Users/mohamedbgassama/.zshrc|495|1|V|zsh
	#if [ command -v exa > /dev/null 2>&1];
e364ea9a7779b44199cf44c2f3a1d10f|file:///Users/mohamedbgassama/.zshrc|495|1|V|zsh
	#then
8c16a47c9f89996ed2113d6695f8a8cb|file:///Users/mohamedbgassama/.zshrc|499|1|V|zsh
	#else
6ffed5122614815ab2da4650747566cf|file:///Users/mohamedbgassama/.zshrc|499|2|V|zsh
	 # alias l='ls'
e9c97d2ccb4011ea8f52c67f8ef5b1c8|file:///Users/mohamedbgassama/.zshrc|499|2|V|zsh
	 # alias ll='ls -l'
683a930f2da731ed13d9b6d26dbcbfff|file:///Users/mohamedbgassama/.zshrc|499|2|V|zsh
	 # alias lll='ls -la'
007406c854c8f98905c2ce034d6728ef|file:///Users/mohamedbgassama/.zshrc|466|15|v|zsh
	e 👋'
73446be974ae9ac5b6dabdf1a9e63fbb|file:///Users/mohamedbgassama/.zshrc|466|9|v|zsh
	bye bye 
af03e6b7ecca92e43ad200fc04a09b3a|file:///Users/mohamedbgassama/.zshrc|462|1|V|zsh
	Exiting from zsh
71ec47a2368d5283b1ad013013bea415|file:///Users/mohamedbgassama/.zshrc|462|1|V|zsh
	#alias bye='exit'
105d9bc12bdeb7deb743825eaa32fce1|file:///Users/mohamedbgassama/.zshrc|462|1|v|zsh
	
	if [ bye ]; then
	  echo 'Hey 👋'
	fi
	
	
e378e3066cca70b230c0a98ba9eef407|file:///Users/mohamedbgassama/.zshrc|468|1|v|zsh
	if [ bye ]; then
	  echo 'Hey 👋'
	fi
	
	
eb4d2ba53f6c8d613019b5a89aeb1d2e|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/App.js|10|11|v|javascriptreact
	<ul>
	            <li>This is a test</li>
	            <li />
	            <li />
	            <li />
	            <li />
	          </ul>
	
686f5a8617578adc8ef8ed5930633757|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/App.js|11|11|v|javascriptreact
	  <l1>
	              <h1></h1>
	              <h1></h1>
	              <h1></h1>
	              <h1></h1>
	            </l1>
	
f6a8c21021aad45854402c037507c98f|file:///Users/mohamedbgassama/.zshrc|498|1|V|zsh
	alias ell='exa -l'
c30c365d9b1f35217526b193779e5cf4|file:///Users/mohamedbgassama/.zshrc|499|1|V|zsh
	alias elll='exa -la'
97cc7dad1b93b0254926420e0a9d327f|file:///Users/mohamedbgassama/.zshrc|312|1|v|zsh
	function wr() {
	  emulate -L zsh
	
	  local THRESHOLD=200
	  local COLS=$(tput cols)
	  if ! tmux has-session -t WriteRoom 2> /dev/null; then
	    tmux new-session -d -s WriteRoom -c ~/Documents/Corpus -x $(tput cols) -y $(tput lines)
	    # TODO: something less clowny here (want width of created session, not width
	    # of current pane).
	    if [ "$COLS" -gt "$THRESHOLD" ]; then
	      local PERCENT=25
	    else
	      local PERCENT=20
	    fi
	    tmux split-window -t WriteRoom -h -p $PERCENT
	    tmux split-window -t WriteRoom.1 -b -h -p $PERCENT
	    tmux select-pane -t WriteRoom.2
	    tmux send-keys -t WriteRoom.2 "sleep .25; vim -c CommandT" Enter
	  fi
	  if [ -z "$TMUX" ]; then
	    tmux attach -t WriteRoom
	  else
	    tmuxswitch-client -t WriteRoom
	  fi
	}
	
	
bec8771fd2a91597460d14a954c7ecbe|file:///Users/mohamedbgassama/.zshrc|311|1|V|zsh
	# WriteRoom-style focused workspace.
a13a9ecdc6da47a17460aea35746124b|file:///Users/mohamedbgassama/.zshrc|300|1|v|zsh
	function _jump_complete() {
	  emulate -L zsh
	  local word completions
	  word="$1"
	  completions="$(hash -d|cut -d= -f1)"
	  reply=( "${(ps:\n:)completions}" )
	}
	
	# Complete filenames and `hash -d` entries.
	compctl -f -K _jump_complete jump
	
	
a87ae996aca8c926aa12480cafeb7b62|file:///Users/mohamedbgassama/.zshrc|281|1|v|zsh
	
	# Mutt email
	function email() {
	  if ! tmux has-session -t email 2> /dev/null; then
	    # Make saved attachments go to ~/Downloads by default.
	    tmux new-session -d -s email -c ~/Downloads -n mutt
	    tmux send-keys -t email:mutt mutt Enter
	    tmux new-window -t email -c ~/.mutt -n sync
	    tmux send-keys -t email:sync '~/.mutt/scripts/control.sh --daemon' Enter
	    tmux split-window -t email:sync -v -f -l 8 -c ~/.mutt
	    tmux send-keys -t email:sync.bottom '~/.mutt/scripts/control.sh' Enter
	  fi
	  if [ -z "$TMUX" ]; then
	    tmux attach -t email:mutt
	  else
	    tmux switch-client -t email:mutt
	  fi
	}
	
	
922968537cc7b6a1d0b8d0c180b73ea4|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|126|1|V|vim
	"  Enhanced multi-file search for Vim
02eef9ea41ed8d1a3200287e29955bbb|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|126|1|V|vim
	plug 'wincent/ferret'
94a67395821711cfeb3d1f4b9cb5def2|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|636|1|V|vim
	"noremap <leader>G <C-a> z :Goyo<CR>
79dae5691ff8d5a9bb82f78d455de81c|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|636|1|V|vim
	"noremap <leader>g <C-a> z :Goyo!<CR>
2b951982d6e4922fee895a2dcfcda777|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|638|1|V|vim
	nmap <Leader>l <Plug>(Limelight)
	xmap <Leader>l <Plug>(Limelight)
435037c8da46470c0bb3f2765873a227|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|638|1|V|vim
	" "noremap <leader>g <C-a> z :Goyo!<CR>
472aa9b6dee9b7f2821c8ce7adc80085|file:///Users/mohamedbgassama/.zshrc|319|1|V|zsh
	# alias ls="colorls -lA --sd"
ee7d13ce469dc86d7b15bdc6eda515d7|file:///Users/mohamedbgassama/.zshrc|317|1|v|zsh
	alias e="nvim"
	
0af0bd74cee4fa02ed2882e09b45c2f1|file:///Users/mohamedbgassama/.tmux.conf|105|1|V|tmux
	bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
7d793037a0760186574b0282f2f435e7|file:///Users/mohamedbgassama/code/rust/cool_rust_app/src/main.rs|3|22|v|rust
	world
3c9aa281ced92294f259c0c55520b2cf|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/App.js|32|1|V|javascriptreact
	uuuuu
a3bcbdf52974452c8c238f148fd2387a|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/App.js|9|1|V|javascriptreact
	        <header className="App-header">
	          <ul>
	            <li>This is a test</li>
	            <li />
	            <li />
	            <li />
	            <li />
	          </ul>
	          <img src={logo} className="App-logo" alt="logo" />
	          <p>
	            Edit <code>src/App.js</code> and save to reload.
	          </p>
	          <a
	            className="App-link"
1e43ac576dda953f689ed5de5c842b19|file:///Users/mohamedbgassama/code/wdi/labs/cool-app/src/App.js|11|1|v|javascriptreact
	            <li>This is a test</li>
	            <li />
	            <li />
	            <li />
	            <li />
	 
111a48cb5bc3c5fd1ef471f832636132|file:///Users/mohamedbgassama/.zshrc|199|1|V|zsh
	  local DIR
	  DIR=$(bfs ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$DIR"
b3f1928de9b14fdd503b863635a4b902|file:///Users/mohamedbgassama/.zshrc|139|1|V|zsh
	fgr() {
94b9059af8c72753e650b91762d9e84b|file:///Users/mohamedbgassama/.zshrc|139|1|v|zsh
	fgr() 
e6dd788c94ed949b14ad278e724e61c7|file:///Users/mohamedbgassama/.zshrc|140|1|V|zsh
	  local file
	  local line
	
	  read -r file line <<<"$(rg --no-heading --line-number $@ | fzf -0 -1 | awk -F: '{print $1, $2}')"
	
	  if [[ -n $file ]]
	  then
	     vim $file +$line
	  fi
0687aa236d3fa8fc73c98cc4417ec7be|file:///Users/mohamedbgassama/.zshrc|110|1|V|zsh
	  local branches branch
	  branches=$(git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)") &&
	  branch=$(echo "$branches" |
	           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
	  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
f2b5fbf723d9caf6d6bb004e2d25c617|file:///Users/mohamedbgassama/code/open-source/deno/.github/workflows/ci.yml|13|16|v|yaml
	'test_release', 'test_debug', 'bench', 'lint'
9e3028ea3484fa4d26a49be3c95dfb96|file:///Users/mohamedbgassama/code/open-source/deno/.github/workflows/ci.yml|13|14|v|yaml
	 ['test_release', 'test_debug', 'bench', 'lint']
	        exclude:
	
b79d7cbf28b7320256a451ba1c7883bf|file:///Users/mohamedbgassama/.tmux.conf|65|8|v|tmux
	split-window -v
	
701d72213deb9cf70a040cf2a3b42c26|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|500|33|v|vim
	vsplit
bc2b06d0d6aef24c1d8441404a74cef4|file:///Users/mohamedbgassama/.zshrc|477|1|v|zsh
	autoload
a11bbc295f8978ae72c15aabf152a04c|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|76|1|V|vim
	call denite#custom#var('grep', 'default_opts', ['--hidden', '--vimgrep', '--heading', '-S'])
eefec303079ad17405c889e092e105b0|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|467|33|v|vim
	split
802fe4c5c358a5c3faeb7f510f6e87e3|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|465|33|v|vim
	tabopen
7b79426757fd0feede46793de2302d13|file:///Users/mohamedbgassama/.tmux.conf|68|8|v|tmux
	split-window -h
	
e3246922aeaa06cb747435a78ad43042|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|467|33|v|vim
	split-window -v
2f17b659f4fdf511bdd80af84bcd81d7|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|469|33|v|vim
	split-window -h
65530835525c6f5da2f1d54c6a057eff|file:///Users/mohamedbgassama/jarvis/install/link.sh|22|5|v|sh
	 ! -d $HOME/.config 
7280ae74fed47d33c9062d10c5819279|file:///Users/mohamedbgassama/jarvis/install/link.sh|22|17|v|sh
	.config ]; then
52598efd928e0701c98cbf89d428a829|file:///Users/mohamedbgassama/jarvis/install/link.sh|12|5|v|sh
	echo 
41af014f03d7a041f01ec37ade85a571|file:///Users/mohamedbgassama/jarvis/install/link.sh|11|10|v|sh
	"---------------------------------------------------------"
	    
13bd08024d9cad5c71dac920f2d63c4d|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|7|1|v|zsh
	if type brew &>/dev/null; then
	  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
	fi
ec3bb462edfc8ae32bf0f842fc8de75d|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|48|1|v|zsh
	HOMEBREW_FOLDER="/usr/local/share"
	
8ee531305436d4af116685e0b78a33c3|file:///Users/mohamedbgassama/.zshrc|13|1|V|zsh
	HOMEBREW_FOLDER="/usr/local/share"
8f887852957472c73d372554976cf7a0|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|47|1|v|zsh
	# Load Zsh tools for syntax highlighting and autosuggestions
	HOMEBREW_FOLDER="/usr/local/share"
	source "$HOMEBREW_FOLDER/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	source "$HOMEBREW_FOLDER/zsh-autosuggestions/zsh-autosuggestions.zsh"
	
2e787b7789b04b699138f2691ee42d03|file:///Users/mohamedbgassama/.zshrc|321|1|V|zsh
	# Enabled zsh-autosuggestions
feae067b47976d192e6edaf484a52207|file:///Users/mohamedbgassama/.zshrc|321|1|V|zsh
	source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
1f3e6fd86913b9b3eb4a3f98eb233ec2|file:///Users/mohamedbgassama/.zshrc|323|1|V|zsh
	source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
110f17d38224bda5cd2461bc755583da|file:///Users/mohamedbgassama/.zshrc|322|1|V|zsh
	# Enabled zsh highlighting
2d42ff44c3c476ec034720be530c8509|file:///Users/mohamedbgassama/.zshrc|486|1|v|zsh
	source ~/.bash_profile
	source $ZSH/oh-my-zsh.sh
	
	
87f186fe4f68f7b3b9641bc0e8e2fd12|file:///Users/mohamedbgassama/.zshrc|7|1|V|zsh
	export PATH=$HOME/usr/local/sbin:$PATH
	export PATH=$HOME/bin:$PATH
07e8392ac6766fda5caaa3e8fc64ed5e|file:///Users/mohamedbgassama/.zshrc|7|1|v|zsh
	export PATH=$HOME/usr/local/sbin:$PATH
	export PATH=$HOME/bin:$PATH
	
	
28fa943831f5acd64cd8bdf6b6783d48|file:///Users/mohamedbgassama/.zshrc|9|1|V|zsh
	export PATH=$HOME/usr/local/sbin:$PATH
869e489fc764ba987c7866307c9bf367|file:///Users/mohamedbgassama/.zshrc|9|1|V|zsh
	export PATH=$HOME/bin:$PATH
36817d68c976f8699a08c01fab7e5ef1|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|47|1|v|zsh
	# Load Zsh tools for syntax highlighting and autosuggestions
	HOMEBREW_FOLDER="/usr/local/share"
	source "$HOMEBREW_FOLDER/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	source "$HOMEBREW_FOLDER/zsh-autosuggestions/zsh-autosuggestions.zsh"
	
	#
0568c6658e7d6a7e0fface45d99135d1|file:///Users/mohamedbgassama/.zshrc|494|1|V|zsh
	source ~/.bash_profile
310cd08e3fff0f3e0848806418ce4e3c|file:///Users/mohamedbgassama/.zshrc|494|1|V|zsh
	source $ZSH/oh-my-zsh.sh
c1589a50b63e6fabac6676f8200746ee|file:///Users/mohamedbgassama/.zshrc|4|1|v|zsh
	export PATH=$HOME/usr/local/sbin:$PATH
	export PATH=$HOME/bin:$PATH
	
	source ~/.bash_profile
	source $ZSH/oh-my-zsh.sh
	
	# Load Zsh tools for syntax highlighting and autosuggestions
	HOMEBREW_FOLDER="/usr/local/share"
	source "$HOMEBREW_FOLDER/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	source "$HOMEBREW_FOLDER/zsh-autosuggestions/zsh-autosuggestions.zsh"
	
	
ecb3503b2a6c64e4e8fc253505f9e8a4|file:///Users/mohamedbgassama/.zshrc|4|1|v|zsh
	export PATH=$HOME/usr/local/sbin:$PATH
	export PATH=$HOME/bin:$PATH
	
	source ~/.bash_profile
	source $ZSH/oh-my-zsh.sh
	
	# Load Zsh tools for syntax highlighting and autosuggestions
	HOMEBREW_FOLDER="/usr/local/share"
	source "$HOMEBREW_FOLDER/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	source "$HOMEBREW_FOLDER/zsh-autosuggestions/zsh-autosuggestions.zsh"
	
	#
ac2cbe4d093e9f35295aeacd9a614ee4|file:///Users/mohamedbgassama/.zshrc|122|1|V|zsh
	# Set location of z installation
0ebe27b50a303c63aed71ab1889b67c0|file:///Users/mohamedbgassama/.zshrc|6|1|V|zsh
	# Load Zsh tools for syntax highlighting and autosuggestions
922e929e8456c35545de3f7ab1f5c4de|file:///Users/mohamedbgassama/.zshrc|6|1|V|zsh
	source "$HOMEBREW_FOLDER/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
7e654b16b984c379ec5d5db99dfdfcbb|file:///Users/mohamedbgassama/.zshrc|6|1|V|zsh
	source "$HOMEBREW_FOLDER/zsh-autosuggestions/zsh-autosuggestions.zsh"
628704d51d8317c6c3d9bf54b4a66186|file:///Users/mohamedbgassama/.zshrc|5|1|v|zsh
	if type brew &>/dev/null; then
	  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
	fi
	
	# Greetings
	if [ bye ]; then
	  echo 'Hey 👋'
	fi
	
	# Basic auto/tab complete:
	autoload -U compinit
	zstyle ':completion:*' menu select
	zmodload zsh/complist
	compinit
	_comp_options+=(globdots)		# Include hidden files.
	
	# vi mode
	bindkey -v
	export KEYTIMEOUT=1
	
	# commands edit
	autoload -U edit-command-line
	zle -N edit-command-line
	bindkey '^x^x' edit-command-line
	
	# Use vim keys in tab complete menu:
	bindkey -M menuselect 'h' vi-backward-char
	bindkey -M menuselect 'k' vi-up-line-or-history
	bindkey -M menuselect 'l' vi-forward-char
	bindkey -M menuselect 'j' vi-down-line-or-history
	bindkey -v '^?' backward-delete-char
	
	# ci"
	autoload -U select-quoted
	zle -N select-quoted
	for m in visual viopp; do
	  for c in {a,i}{\',\",\`}; do
	    bindkey -M $m $c select-quoted
	  done
	done
	
	# ci{, ci(, di{ etc..
	autoload -U select-bracketed
	zle -N select-bracketed
	for m in visual viopp; do
	  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
	    bindkey -M $m $c select-bracketed
	  done
	done
	
	
8cbc1b1f40355976ae49e903aa1d8736|file:///Users/mohamedbgassama/.zshrc|4|1|v|zsh
	# Homwbrew
	if type brew &>/dev/null; then
	  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
	fi
	
	# Greetings
	if [ bye ]; then
	  echo 'Hey 👋'
	fi
	
	# Basic auto/tab complete:
	autoload -U compinit
	zstyle ':completion:*' menu select
	zmodload zsh/complist
	compinit
	_comp_options+=(globdots)		# Include hidden files.
	
	# vi mode
	bindkey -v
	export KEYTIMEOUT=1
	
	# commands edit
	autoload -U edit-command-line
	zle -N edit-command-line
	bindkey '^x^x' edit-command-line
	
	# Use vim keys in tab complete menu:
	bindkey -M menuselect 'h' vi-backward-char
	bindkey -M menuselect 'k' vi-up-line-or-history
	bindkey -M menuselect 'l' vi-forward-char
	bindkey -M menuselect 'j' vi-down-line-or-history
	bindkey -v '^?' backward-delete-char
	
	# ci"
	autoload -U select-quoted
	zle -N select-quoted
	for m in visual viopp; do
	  for c in {a,i}{\',\",\`}; do
	    bindkey -M $m $c select-quoted
	  done
	done
	
	# ci{, ci(, di{ etc..
	autoload -U select-bracketed
	zle -N select-bracketed
	for m in visual viopp; do
	  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
	    bindkey -M $m $c select-bracketed
	  done
	done
	
	
cf97f358dc91d4c02ac1ff875c017b20|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|103|1|v|zsh
	
	# auto-completion
	if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
	  . /opt/local/etc/profile.d/bash_completion.sh
	fi
	
	a
f43ec2b00b25abe0a4fef48d35e63c55|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|104|1|v|zsh
	# auto-completion
	if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
	  . /opt/local/etc/profile.d/bash_completion.sh
	fi
	
	autoload -U compinit && compinit
	zmodload -i zsh/complist
	
	
ce698137541efca8d64de9519ca68209|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|272|1|V|zsh
	# ssh
515e7e7ea85ef3498223f85812033d40|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|272|1|v|zsh
	# ssh
	 export SSH_KEY_PATH="~/.ssh/rsa_id"
	
	
d36257162f532f3156ad2f972344dc93|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|70|1|V|zsh
	
	# Uncomment the following line to enable command auto-correction.
3cb45bd06520d303a438353718de0330|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|71|1|v|zsh
	# Uncomment the following line to enable command auto-correction.
	ENABLE_CORRECTION="true"
	
	#
e164ff8c31f059934e4974c80a3c7710|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|52|1|v|zsh
	# Uncomment the following line to use case-sensitive completion.
	 CASE_SENSITIVE="true"
	
	
cf4e010da392958d806e3a2ea6116f3e|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|82|1|v|zsh
	# Uncomment the following line if you want to change the command execution time
	# stamp shown in the history command output.
	# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
	HIST_STAMPS="mm/dd/yyyy"
	
	#
b1f4f9a523e36fd969f4573e25af4540|file:///Users/mohamedbgassama/test/with-graphql-hooks-app/pages/about.js|28|20|v|javascriptreact
	cool
b87a83961b009ab07ff9a442db9d2940|file:///Users/mohamedbgassama/test/with-graphql-hooks-app/pages/about.js|28|7|v|javascriptreact
	<ul>
	        <li>
	          <h1 className="cool"></h1>
	        </li>
	        <li>
	          <h1 className="cool"></h1>
	        </li>
	        <li>
	          <h1 className="cool"></h1>
	        </li>
	        <li>
	          <h1 className="cool"></h1>
	        </li>
	        <li>
	          <h1 className="cool"></h1>
	        </li>
	      </ul>
	    </articl
234c4a67d541ba71f400b296624b3211|file:///Users/mohamedbgassama/test/with-graphql-hooks-app/pages/about.js|28|6|V|javascriptreact
	      
	  </App>
1545e945d5c3e7d9fa642d0a57fc8432|file:///Users/mohamedbgassama/test/with-graphql-hooks-app/pages/about.js|28|5|V|javascriptreact
	     
21cbe206161ec58a59ba6b97171359d5|file:///Users/mohamedbgassama/test/with-graphql-hooks-app/pages/about.js|28|9|v|javascriptreact
	<ul>
	          <li>
	            <h1 className="cool"></h1>
	          </li>
	          <li>
	            <h1 className="cool"></h1>
	          </li>
	          <li>
	            <h1 className="cool"></h1>
	          </li>
	          <li>
	            <h1 className="cool"></h1>
	          </li>
	          <li>
	            <h1 className="cool"></h1>
	          </li>
	        </ul>
	
	
d15438459e4df039d33f95d633f17f5d|file:///Users/mohamedbgassama/.bash_profile|53|1|V|sh
	# scripts and programs
	PATH="$HOME/.rbenv/bin:$PATH"                              # RBENV
aab521ecf4930a8004d7ad5ca829692a|file:///Users/mohamedbgassama/.bash_profile|52|1|v|sh
	# A list of all directories in which to look for commands,
	# scripts and programs
	PATH="$HOME/.rbenv/bin:$PATH"                              # RBENV
	PATH="/usr/local/share/npm/bin:$PATH"                      # NPM
	PATH="/usr/local/bin:/usr/local/sbin:$PATH"                # Homebrew
	PATH="/usr/local/heroku/bin:$PATH"                         # Heroku Toolbelt
	
	#
0a4bcd0e2d84d875c49752735541fb4b|file:///Users/mohamedbgassama/.zshrc|61|1|V|zsh
	ATH="$HOME/.rbenv/bin:$PATH"                              # RBENV
14371f4a33bd501a4a9b5c642107c6a8|file:///Users/mohamedbgassama/.bash_profile|52|1|V|sh
	# A list of all directories in which to look for commands,
	# scripts and programs
92d558820e991ff3456bbb5577cf2417|file:///Users/mohamedbgassama/.zshrc|67|1|V|zsh
	#
	ms
fb5761128bd7f7e27935e9844070e47e|file:///Users/mohamedbgassama/.zshrc|361|62|v|zsh
	 nvi
d5475b92cce75a2cc15f642d617b44a1|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/App.tsx|8|7|v|typescriptreact
	<h1>This is first vim typescript</h1>
	
fbb2490b000dccc9d553f777023a3c3c|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/App.tsx|8|1|V|typescriptreact
	      <h1>This is first vim typescript</h1>
9030aa1a97b90c685145fd2fb9fce93d|file:///Users/mohamedbgassama/.zshrc|81|1|V|zsh
	# auto-completion
08aafdc17a8afabb7744a5edbcef098a|file:///Users/mohamedbgassama/.zshrc|81|1|v|zsh
	# auto-completion
	if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
	  . /opt/local/etc/profile.d/bash_completion.sh
	fi
	
	
89c03abe007575e28344bde1b3e28bcc|file:///Users/mohamedbgassama/.zshrc|81|1|v|zsh
	jjj# auto-completion
	if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
	  . /opt/local/etc/profile.d/bash_completion.sh
	fi
	
	autoload -U compinit && compinit
	zmodload -i zsh/complist
	
	
5df12f2da378875f737f97728c8cc543|file:///Users/mohamedbgassama/.zshrc|29|1|V|zsh
	# Uncomment the following line to enable command auto-correction.
ccf37560ea1e2893f3937e28aac48cb8|file:///Users/mohamedbgassama/.zshrc|29|1|v|zsh
	# Uncomment the following line to enable command auto-correction.
	ENABLE_CORRECTION="true"
	
	# Uncomment the following line to use case-sensitive completion.
	 CASE_SENSITIVE="true"
	
	# Uncomment the following line if you want to change the command execution time
	# stamp shown in the history command output.
	# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
	HIST_STAMPS="mm/dd/yyyy"
	
	#
a41c74e034aa5a3c643a68ed16df234a|file:///Users/mohamedbgassama/.tmux.conf|120|1|V|tmux
	# Detach
3050eab709ec8957e97b38739ddc2044|file:///Users/mohamedbgassama/.tmux.conf|120|1|V|tmux
	bind-key -n C-j detach
1a8b3857bab957b1978e598947ea809e|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/App.tsx|10|9|V|typescriptreact
	        <h1>This is first vim typescript</h1>
6c78117bd618a00f074b24b61659ff9b|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/kaky.tsx|11|1|V|typescriptreact
	ejjddxport default Kaky;
3fcdb73d36d54f2cc22d0f68e6b6e182|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/kaky.tsx|1|14|v|typescriptreact
	form
a13a776763fcbe732ddd9fe7ad367994|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/kaky.tsx|11|2|v|typescriptreact
	efault
b2507468f95156358fa490fd543ad2f0|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/kaky.tsx|11|8|v|typescriptreact
	export
2a5d67489e8d7d3308e2ed1a3a5d22b8|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|129|1|v|vim
	" ES2015 code snippets (Optional)
	Plug 'epilande/vim-es2015-snippets'
	
	" React code snippets
	Plug 'epilande/vim-react-snippets'
	
93007a3387e3b9c7913ce6c2b813470b|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/bouya.tsx|7|7|v|typescriptreact
	bouya
37a6259cc0c1dae299a7866489dff0bd|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/bouya.tsx|6|10|v|typescriptreact
	null
aa2d67a5a65204e747e3b247d99eb057|file:///Users/mohamedbgassama/code/wdi/labs/kaky_cassama/src/bouya.tsx|8|11|v|typescriptreact
	jjjjouya
33f4062beaf6ca34c00b17b85837276b|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|162|3|v|vim
	NERDTree 
02e1323c0c72070cd9cfb1b58fad929b|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|3|5|V|rust
	    fs::write(crate);
2a8cbf50f6f93716094dddf7aea74644|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|1|8|v|rust
	::fs;
061185163e4c6a08325ad40821ab5731|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|3|5|V|rust
	    os::macos::fs::MetadataExt;
1b626e6f5d073a6faf41735cca984e63|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|1|1|V|rust
	use std::os;
b10a8db164e0754105b7a99be72e3fe5|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|3|25|v|rust
	Hello World
4b26c051ae76e1c58c085dffba850a71|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|3|15|v|rust
	THis is a 
c06f8009127834ce4e5808e4ccfa7bf6|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|3|28|v|rust
	{});
3839f5cd5315039f1c393923ac62eea2|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|2|9|v|rust
	mut 
99b1ff8f11781541f7f89f9bd41c4a17|file:///Users/mohamedbgassama/code/rust/learn_rust/src/hello_world.rs|1|8|v|rust
	hello_world
3f294832050ffa06064d14a1d5cfb1a8|file:///Users/mohamedbgassama/code/rust/learn_rust/src/main.rs|2|1|v|rust
	fn main() {
6a5394a4967522a87fc8b760f65ed899|file:///Users/mohamedbgassama/code/open-source/rust/x.py|10|1|v|python
	import bootstrap
	
9fc028e8205480197ede93b662a2f01a|file:///Users/mohamedbgassama/code/open-source/rust/x.py|6|1|V|python
	import bootstrap
0b25012ceed4259f1d2abda1d4e4444a|file:///Users/mohamedbgassama/code/open-source/rust/x.py|16|1|V|python
	
	return "name"
dc36f7c0117cbc679aab3a75d773f649|file:///Users/mohamedbgassama/code/open-source/rust/x.py|15|1|v|python
	
	
	print
cab82538a743d96a50be6e9cffc1c28a|file:///Users/mohamedbgassama/code/open-source/rust/x.py|14|2|v|python
	ef name():
	  
5e69abf553030adf554db6ff581e8b04|file:///Users/mohamedbgassama/code/open-source/rust/x.py|14|1|V|python
	d  s print("name")
fd7b6bfa588d00c0846839730fef11bc|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|142|1|V|vim
	"Node vim support
10ba941d394842593f55188328b0a606|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|142|1|V|vim
	Plug 'moll/vim-node'
d1e5c88806429b2fd7031162136e4894|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|142|1|V|vim
	 " Scss for vim
55a73f3c603a86d8433e861385db15b1|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|142|1|V|vim
	Plug 'cakebaker/scss-syntax.vim'
68934a3e9455fa72420237eb05902327|file:///Users/mohamedbgassama/.zshrc|513|24|v|zsh
	false
705154be968b9582a9761da3d500b2b0|file:///Users/mohamedbgassama/jarvis/backup/.tmux.conf|160|1|v|tmux
	# Kill current pane
	bind-key q confirm-before kill-pane
	
	
34abfa539e47fdf822473bd7467ea347|file:///Users/mohamedbgassama/jarvis/backup/.tmux.conf|67|1|v|tmux
	# Renaming session
	unbind $ # rename-session
	bind S command-prompt -I "#{session_name}" "rename-session '%%'"
	
	
d079e074e9464791552ffea13c9e17fb|file:///Users/mohamedbgassama/jarvis/backup/.tmux.conf|114|1|v|tmux
	# window focus
	set -g focus-events on
	
	
909ab838df89a2d88556db94175a2004|file:///Users/mohamedbgassama/code/wdi/webproject/server.ts|5|27|v|typescript
	NODE_ENV 
a35fe7f7fe8217b4369a0af4244d1fca|file:///Users/mohamedbgassama/code/wdi/webproject/server.ts|5|27|v|typescript
	5000
60aaf44d4b562252c04db7f98497e9aa|file:///Users/mohamedbgassama/code/wdi/webproject/server.ts|5|24|v|typescript
	Port
4ca65a8bdbeae8b6ee400801a8a8f812|file:///Users/mohamedbgassama/code/wdi/webproject/server.ts|8|12|v|typescript
	express
0a28fb20f15fd652826f0047ff275642|file:///Users/mohamedbgassama/code/wdi/webproject/tsconfig.json|2|5|v|json
	"compilerOptions": {
	        "module": "commonjs",
	        "target": "es5",
	        "noImplicitAny": false,
	        "sourceMap": false
	    }
	
	
9655d692142d2e4716bb6f4310eeb9b5|file:///Users/mohamedbgassama/code/wdi/webproject/tslint.json|7|5|V|json
	    "rules": {},
4e64bf86f66832e98c673b8962d24eb2|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|23|1|V|typescriptreact
	  );
b39b1ecf8e654dafba650e9dbb25f149|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|6|1|V|typescriptreact
	  return (
e706cefae4a3d75f0bb90a816b5aea25|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|6|10|v|typescriptreact
	(
	    <div className="App">
	      <header className="App-header">
	        <img src={logo} className="App-logo" alt="logo" />
	        <p>
	          Edit <code>src/App.tsx</code> and save to reload.
	        </p>
	        <a
	          className="App-link"
	          href="https://reactjs.org"
	          target="_blank"
	          rel="noopener noreferrer"
	        >
	          Learn React
	        </a>
	      </header>
	    </div>
	  )
33d7f8d3b4a233f7503663f4d000aac3|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|31|1|V|typescriptreact
	import React from 'react';
0a9f8e62e0d3e574f48af9e665fc29b4|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|26|1|V|typescriptreact
	export default App;
c5db1be4058f131ada584227e0a505a7|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|5|1|V|typescriptreact
	function App() {
e6bc2a9f5b41e14cf7b0777b4a89e6c7|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|5|3|v|typescriptreact
	return 
92f7a18459d9ad250228b596b3d0ac66|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|28|1|V|typescriptreact
	ffce
d9a9205037884297b68d485cd8ad17f9|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|5|1|v|typescriptreact
	const App = props => {
d9a9205037884297b68d485cd8ad17f9|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.tsx|5|1|v|typescriptreact
	const App = props => {
12accbfd139bef37a3b420658a2ea4fe|file:///Users/mohamedbgassama/code/wdi/webproject/client/src/App.css|35|1|v|css
	  to {
	    transform: rotate(360deg);
	  }
	}
6a7867218fe6b3ffcf8ffbf003489380|file:///Users/mohamedbgassama/code/myrust/rust_book/src/main.rs|4|5|V|rust
	    let mut map<HashMap> = HashMap::new();
dd6e18de7dc8d2a4fc00dd6e2247a58b|file:///Users/mohamedbgassama/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/collections/hash/map.rs|202|12|V|rust
	pub struct HashMap<K, V, S = RandomState> {
	    base: base::HashMap<K, V, S>,
692d62725dae8bce9b0edf807f9f738f|file:///Users/mohamedbgassama/code/myrust/rust_book/src/main.rs|5|1|V|rust
	    map.insert(2, 1);
6a77ceb29feaa27240c196a44e1bfd17|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|1|1|v|typescript
	import express from "express";
	
	const server = express();
	
	const port = process.env.Port || 5000;
	
	server.get("/", (req: any, res: any) => {
	  res.json({ Express_Status: "OK" });
	});
	
	server.listen(port, () => {
	  console.log(`Server run on port ${port}`);
	}
11a70132bdf59b72a5f1131d9056fc4c|file:///Users/mohamedbgassama/code/wdi/webproject/package.json|8|1|v|json
	    "build": "tsc ",
	    "restart": "rimraf dist && yarn build && yarn start",
	    "start": "nodemon ./dist/server.js"
	
5541cd1330b9843d1e9d8c338e959984|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|2|1|V|typescript
	    "build": "tsc ",
b7f0735c9b2354fd7227ff5dd9bbe088|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|2|1|v|typescript
	    "build": "tsc ",
	    "restart": "rimraf dist && yarn build && yarn start",
	    "start": "nodemon ./dist/server.js"
bba9ce9f79e89a6db0a9bfe4d4b00836|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|1|1|v|typescript
	
	    "build": "tsc ",
	    "restart": "rimraf dist && yarn build && yarn start",
	    "start": "nodemon ./dist/server.js"
a04393caa9a5e426fd05cf6d6b28dc62|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|6|25|v|typescript
	Gateway 
69a34a18b5977bed734a8c60b0223b24|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|3|3|V|typescript
	  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.
b22fcd883b374d81ff4eb7da75c987ab|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|4|1|V|typescript
	  # This "Book" type defines the queryable fields for every book in our data source.
d23ccab3f3e4a9b514a900dcd2f001ae|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|9|3|V|typescript
	  # The "Query" type is special: it lists all of the available queries that
cfb154d73075e5b94f982329ae3201cf|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|9|3|V|typescript
	  # clients can execute, along with the return type for each. In this
85cbe4d1d92db0f5176aec75b469f2a0|file:///Users/mohamedbgassama/code/wdi/webproject/src/server.ts|9|3|V|typescript
	  # case, the "books" query returns an array of zero or more Books (defined above).
4cf3abc1818cbd12289e0f06a8f742c2|file:///Users/mohamedbgassama/code/wdi/webproject/src/resources/books/author/author.model.ts|8|3|V|typescript
	  required: true
b068931cc450442b63f5b3d276ea4297|file:///Users/mohamedbgassama/code/wdi/webproject/src/resources/books/author/author.model.ts|5|5|v|typescript
	name
575e22bc356137a41abdef379b776dba|file:///Users/mohamedbgassama/code/wdi/webproject/src/resources/books/author/author.model.ts|3|9|v|typescript
	thor
beccb9072a968f907f67c1d7d1569e96|file:///Users/mohamedbgassama/code/wdi/webproject/src/resources/books/author/author.typeDef.ts|5|16|V|typescript
	type Mutation {}
	`;
cfee3f448b18bb5bb058fbce7f19dff8|file:///Users/mohamedbgassama/code/wdi/webproject/src/resources/books/author/author.typeDef.ts|7|1|V|typescript
	type Mutation {}
f81297a0bc0d26088402a3d8a86be3f7|file:///Users/mohamedbgassama/code/wdi/webproject/src/resources/books/author/author.typeDef.ts|27|15|v|typescript
	SignInInput
aafebb7118a8d46c1c43fc9a2365eabe|file:///Users/mohamedbgassama/code/wdi/webproject/src/resources/books/author/author.typeDef.ts|26|1|V|typescript
	    email: String!
ab65073665550b61c4b6349e0cdf23b5|file:///Users/mohamedbgassama/code/myrust/rust_sandbox/src/arrays.rs|3|1|V|rust
	use std::mem;
5487c0489e37cefeac7f162618c3767c|file:///Users/mohamedbgassama/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/libcore/mem/mod.rs|22|1|V|rust
	pub use maybe_uninit::MaybeUninit;
61d16a33347cc9719d25aa6ceb7c6e4f|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter1/hello_cargo/src/main.rs|1|1|V|rust
	use regex::Regex;
60a09ebcf2f1148265dd94f3374ccd94|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter1/hello_cargo/src/main.rs|2|5|V|rust
	    let re = Regex::new();
281f2b037820f6b04a0b8008de1af2bc|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter1/hello_cargo/src/main.rs|1|1|V|rust
	use rand::random;
81a2289996dd1f43b8fc1190660e4799|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter1/hello_cargo/src/main.rs|2|1|V|rust
	    let ran = random();
d91588bc700c37b39495d4989c9c6db0|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|2|1|V|rust
	    println!("Hello, world!");
19aec92a843731c2d67f2efc0dc29e79|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|2|1|V|rust
	use std::option::Option::{None, Some, self};
d1a46b409f1c44797f8cd617cb85f72c|file:///Users/mohamedbgassama/code/myrust/rust-graphql-example/src/db.rs|7|1|v|rust
	fn init_pool
1e7007513d247a1d29245fc6e3b6a1b0|file:///Users/mohamedbgassama/code/myrust/rust-graphql-example/src/db.rs|7|14|v|rust
	database_url: &str
b89601529179d7c3c42577e68fe92369|file:///Users/mohamedbgassama/code/myrust/rust-graphql-example/src/db.rs|7|44|v|rust
	PgPool, PoolError
e49a4c43dd418d4f236249eac5a3dec1|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|3|24|v|rust
	App::new())
	}
da8377b325cee7c606cef919f4499841|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|3|5|V|rust
	    HttpServer::new(|| App::new().route("/", web::get().to(status)))
9fadcf92365ec6e7175e5bb4eb1f0934|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|8|26|v|rust
	App::new("/", web::new().to(status))
e9a86708cce738af7de2d224c5537514|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|10|20|V|rust
	    HttpServer::new(||{App::new("/", web::new().to(status)} ).bind("127.0.0.1:8080").run().await()
	}
5cc5b2a7aee77f1e3257858ef39f2782|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|10|5|V|rust
	    HttpServer::new(||{App::new("/", web::new().to(status)} ).bind("127.0.0.1:8080").run().await()
43f3724066fdabeeb75470c5477ee9d8|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|11|10|v|rust
	"/", 
9acb44549b41563697bb490144ec6258|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|11|10|v|rust
	status
72812e30873455dcee2ce2d1ee26e4ab|file:///Users/mohamedbgassama/jarvis/config/nvim/coc-settings.json|4|141|v|jsonc
	rust
ec6ce88f672616d89260328a259060cb|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|1|1|V|rust
	use actix_web::{web, App, HttpServer, Responder};
4b5585450c1f81318ed484dba0f8a7f6|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|1|1|V|rust
	use std::io;
99852fb88d9f5674461af9ad158a601b|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|1|1|V|rust
	use actix-web::{HttpServer, web, Responder }
8111e09bbbb5ff95e3c48f0cc536db97|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|2|1|V|rust
	use std:io
90b6f1388b55ab7dc52bc6157f6e91ee|file:///Users/mohamedbgassama/code/myrust/todo_actix/src/main.rs|1|1|V|rust
	use actix_rt; 
69eb3d82b7e414b7afe0829425ce0ccc|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|3|1|V|rust
	    pr
469cf80e57be2d3fe55657cf9c157d21|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|3|14|v|rust
	"Hello, world!"
fdcf02688c1a7b19190f90bdc0bbe03a|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|4|14|v|rust
	"cc"
71ced24eb1f41a16055a0863273fd726|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|6|5|V|rust
	    io::stdin::res:
088cd54b95d05ff7a230a4e86de303c0|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|15|1|V|rust
	    // printin to the standard out 
b0671179c30fb8ce58124d4fb908ea15|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|357|1|v|vim
	" How to show cursorline only in active window of Vim
	augroup CursorLineOnlyInActiveWindow
	  autocmd!
	  autocmd VimEnter,WinEnter,BufWinEnter * setlocal cursorline
	  autocmd WinLeave * setlocal nocursorline
	augroup END
	
90029ae64aea238ecde79389bd6c54ed|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|717|1|V|vim
	Help filetype detection
87f08a2c7c959b0d90fbb0ac4184fd6e|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|701|1|V|vim
	autocmd BufRead *.orig set readonly
cd081d39e70a33795f9684d223833362|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|700|1|V|vim
	" Prevent accidental writes to buffers that shouldn't be edited
8bd823ecf3151d47c8b0f90a557e427a|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|700|1|V|vim
	autocmd BufRead *.pacnew set readonly
da911cf6ea5639ac1e1b6753b96a2f7f|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|701|1|V|vim
	
	" Jump to last edit position on opening file
d8a45a8872d67bfd09de2563d31418bc|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|357|1|v|vim
	" Making the active window in vim more obvious
	augroup BgHighlight
	    autocmd!
	    autocmd WinEnter * set number
	    autocmd WinLeave * set nonumber
	augroup END
	
	
529ebecd0bd232a3bbd5ccebfa131668|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|15|20|v|rust
	mguess
7e76ffbda615d3bda27de1858354a3f9|file:///Users/mohamedbgassama/.zshrc|342|1|v|zsh
	transfer() {
	  if [ $# -eq 0 ]; then
	   echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md";
	   return 1;
	  fi
	tmpfile=$( mktemp -t transferXXX );
	if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); 
	curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; 
	else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ;
	 fi;
	  cat $tmpfile; rm -f $tmpfile;
	};
	
	
	#
	#
557cf123825860a6e5ff76f4f80fb1a2|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|25|1|V|rust
	jj   match guess.cmp(&secret_number) {}
089138416e360291006ea80dbddebf4a|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|27|9|v|rust
	Ordering::
b90f6c28f6e875cc820aafc75f4c4d91|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|20|5|v|rust
	io::
255c09504a2b67d0d763d84c74f17019|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|24|46|v|rust
	.expect("Please type a number");
35c01fa3ed75f455b0b13b0ebc73ebcc|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|24|7|v|rust
	  let guess: u32 = match guess.trim().parse() {
	     Ok(num) => num;
	            Err(_) => continue;
	        }
	
	       
32cb39d91512e5e60c0d887df4d2b96d|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|21|43|v|rust
	.expect("Failed to read line");
640cdeb97197383d1de9f6747a235f7e|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|22|16|v|rust
	&mut 
cca0cc020176c627fe6dff7365f0d2c0|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter2/guessing_guess/src/main.rs|11|1|V|rust
	    println!("The secret number is {}", secret_number);
6cd3556deb0da54bca060b4c39479839|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|6|15|v|rust
	Hello, world!
7caa91fcfec7e5fa45fd11c7b63ab337|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|6|25|v|rust
	mutable 
d9031d259f51b7f788194fbfc77eb69e|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|6|39|v|rust
	}", 
032edbfc6a680d193b62270528cd925c|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|2|5|V|rust
	    #[allow(unused_mut)]
e9890a1b5e1147bcb6804b877aa55698|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|14|5|V|rust
	    const MY_MAX_NUMBER: u32 = 120;
6680dba00f3a88f66f8029a93d71d93c|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|14|5|v|rust
	const
779aa75bec6532fef68683175c5682e5|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|16|39|v|rust
	MY_MAX_NUMBER
bc95dfc14146aa23e43f2ea7af04d310|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|14|1|v|rust
	            
fb6f939b97582e6a73fd389024fb97da|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|14|1|V|rust
	cwconst MY_MAX_NUMBER: u32 = 120hhhhhhhhhhh
8c9c9dfa0ee5bd8c5bba6b26d683a072|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|14|1|V|rust
	        cwconst MY_MAX_NUMBER: u32 = 120hhhhhhhhhhh
bfb5101b804d6e0c679d050d81a2d999|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|18|9|V|rust
	        //
2c6f8c00347422e00c60982da9da950d|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|19|21|v|rust
	// the second is x = 5 and bound to a shadowed variable let x and x = 6
	
6b024292eea20ab3a59066e9888b0e53|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|2|1|v|rust
	    // Variables and Mutability
	
	    // Immutable variable "In Rust variable are immutable by default"
	    let i_am_immutable = "Immutable";
	    println!("This is a {} variable", i_am_immutable);
	
	    // Mutable variable
	    #[allow(unused_mut)]
	    let mut i_am_mutable = "Mutable";
	    println!("This is a {} variable", i_am_mutable);
	
	    // Constant variable
	    const MAX_POINTS: u32 = 100_000;
	    println!("This is a {} variable", MAX_POINTS);
	
	    // Variables Shadowing
	    // Variable is immutable by default in this case putting mut keyword it will return an error
	
	    let x = 5;
	    let x = x + 1; // the second is x = 5 and bound to a shadowed variable let x and x = 6
	    let x = x * 2; // the second is now  x = 6 and bound to a shadowed variable let x and x = 12
	    println!("This is a shadowed variable {}", x);
	
	    // Another example of variable shadowing
	    let spaces = "   ";
	    let spaces = spaces.len();
	    println!("This is the length of a variable {}", spaces)
	
0c4cdcb814953ffed0a858ac7aca8928|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|1|29|v|rust
	::variables_and_mutability
d0373719fb3619efea122c6c25bc9220|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|3|1|V|rust
	fn main() {
	}
0c6958203cfa2c166d037e65d213f2f5|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|1|1|V|rust
	use variables_and_mutability;
1bf51dbd65e87181ad18eca837573345|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/main.rs|1|29|v|rust
	variables_and_mutability
9ddf0821d4da4cc2f3d013e15a0f78bf|file:///Users/mohamedbgassama/code/myrust/rust_sandbox/src/structs.rs|62|3|v|rust
	let p = Person::{to_tuple, new,set_last_name}
	
0aa46c50888f669b61eda364825a8034|file:///Users/mohamedbgassama/code/myrust/rust_sandbox/src/structs.rs|62|3|v|rust
	let p = Person::{to_tuple, new,set_last_name}
64b6546c222237d725e2cf1101630a17|file:///Users/mohamedbgassama/code/myrust/rust_sandbox/src/structs.rs|62|3|V|rust
	  let p = Person::{to_tuple, new,set_last_name}
22c88ea7717aa77fb109f1dc74f172ce|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|4|26|v|rust
	A scalar type 
a717b3b00c9bb9e0c20975f6f65fbc3d|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|4|26|v|rust
	A scalar 
a775578e406ae060a4415dc5e9ea8386|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|4|28|v|rust
	are type represents a single value
a560fd241ca36fc41135cf259ea8079b|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|5|5|V|rust
	    //
8e69f73f0d74192bec05ae583ee56396|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|13|5|v|rust
	let eight_byte_signed: i8 = 127;
	    println!("This is an eight signed {}", eight_byte_signed);
	
	
	
43ca94dd646dbbaa78034918d61043e9|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|18|63|v|rust
	signed
8009c075d0cf6e2f952499b279d9bfde|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|19|9|v|rust
	eight_byte_signed
3e60996c4d7c48a10434b1d484f337ed|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|19|9|v|rust
	thirty_two_byte_signed:
3134866fd5b3d0d84b8b2c698bfeeeb1|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|20|45|v|rust
	eight_byte_signe
180b5d0ebd7ffc7da0753988f13c0a87|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|19|9|v|rust
	thirty_two_byte_signed
dccc15c6ff334cc7581990ef563db040|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|25|9|v|rust
	sixty_four_byte_signed
5b7e836b0af88b9a13ba66eedbd708c9|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|30|1|v|rust
	
	    let hundred_and_twenty_eight_byte_signed: i128 = 7;
	    println!("This is an eight signed {}", hundred_and_twenty_eight_byte_signed);
	
64807258ec96a16fa4861c2c9565953d|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|35|44|v|rust
	hundred_and_twenty_eight_byte_signed
24d27c169c2c881eb09a065116f2aa5c|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|20|26|v|rust
	eight
923fa962270cc5cb948ddad53d632a3b|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|20|39|v|rust
	signed 
d1d3e018a70fc6bbda50112f688168e5|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|37|26|v|rust
	eight 
c907e6f0e6fa964c335d68965988a14a|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|56|1|V|rust
	    let sixty_four_byte_or_thirty_two_byte_bit_architecture_signed: isize = 9;
	    println!(
9e44551a1ad473548412e70882c7b5b5|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|56|5|v|rust
	let sixty_four_byte_or_thirty_two_byte_bit_architecture_signed: isize = 9;
	    println!(
	        "This is a sixty four byte or thirty two byte bit architecture signed {}",
	        sixty_four_byte_or_thirty_two_byte_bit_architecture_signed
	    );
	
	
b535b68f4f73f5963779b8339a4c5423|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|18|1|V|rust
	// o a u8 can store numbers from 0 to 28 - 1, which equals 0 to 255.
7ae7e905bd93de01b40e046a751d4764|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|75|28|v|rust
	u32 
bd569cbd32bd4937a411c574e9db9901|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|78|28|v|rust
	isize
fb8256c38c95949e2a4fc3700d6b2d50|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|85|1|v|rust
	0b1111_00
84716eecc85ecfd17217c83ab2d3ea7a|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|25|1|v|rust
	    // So an i8 can store numbers from -(2^7) to 2^7 - 1  -128 to 127 bits in memory
	
4ce444239c20bfab9feb3eb75a171d4c|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|30|56|v|rust
	128 
4cb963385fef3671543ba772675cc10b|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|30|61|v|rust
	127 
184871f697d7bb3e78d4390e04bacd00|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|30|76|v|rust
	bits 
54ca9a08f40f13e41d2fee7f477ed4ca|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|24|8|v|rust
	which equals 
59845b26113d1a14dfefb9d7fcd7c518|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|51|40|v|rust
	) to 
81e70d5c59758a78170abbf14776ca01|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|52|8|v|rust
	d2to 
f387e39ede6d10fdaee23ed1ae2d86c7|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|61|8|v|rust
	d127 
7425238bf281c26818560cd83dc8e8eb|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|61|63|v|rust
	its 
a5580fee6957047b6b24d78276a7a70b|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|70|5|V|rust
	    // So an i8 can store numbers from ) to 2^7 - 1  -128 to 127 bits in memory
de3b2373a4c42e49fccafca1f3c9a30e|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|77|5|V|rust
	    // So an i8 can store numbers from -(2^7) to 2^7 - 1  -128 to 127 bits in memory
0f5ed716583178819b1fa1cb38210fcb|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|76|1|v|rust
	// It for i32 or i64 bit architecture
00cda12376fb05cea18c69593fbf02b3|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|71|8|v|rust
	-128 
2f01c5df9201a7c54130f3f640808839|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|115|21|v|rust
	which are
1efd7feb6540e2b400af354928035403|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|120|36|v|rust
	f34 
c3aa66f70eef9538cf4a0adc75ea52c7|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|126|2|V|rust
	 The f32 type is a single-precision floa
27cd16654ebeba1d897d823410e87e80|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|125|1|V|rust
	he f32 type is a single-precision float
87dcebb5336d5805c345c3f7acd55231|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|125|1|V|rust
	
	    //-- Compound Data Types
be9fb49383409690fcd88ff9b38a3a23|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|138|1|v|rust
	println!("This is an addition {}", sum)
	
fb65d84b071409ed4ff27dc3d9342039|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|138|1|v|rust
	println!("This is an addition {}", sum);
6fc95ce02a24dfa2360ba30f708a78c6|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|148|8|v|rust
	ivision
12e0559800b9ab2c6df98129fdbf0a87|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|160|5|v|rust
	// True
	    let is_true: bool = true;
	    println!("This is true {}", is_true);
	
f827cf462f62848df37c5e1e94a4da74|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|163|4|v|rust
	True
b326b5062b2f0e69046810717534cb09|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|164|12|v|rust
	true
188318eb81a46f838e658539af147ca0|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|179|1|V|rust
	'??';
abe2812fe645eb4e202b7ccb5d5a1dab|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|178|9|v|rust
	moji
87b0a034453a4210d2e751522a1a1f33|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|189|46|v|rust
	// 3) The Tuple Type
	
1acaf998d21c4acb18ea09815aa8068f|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|190|46|v|rust
	// 3) The Tuple Type
cdcf38d1d0e2bd32a008b846f48b9287|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|198|3|v|rust
	  let tup = (500, 6.4, 1);
	
24c0ba9e4b9f747044eabe98085b869f|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|199|3|V|rust
	    let tup = (500, 6.4, 1);
11cbd66fb9c3a575fd1978429be5203d|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|203|5|v|rust
	#[allow(unused_variables)]
	
e7b06888592efa16d8543e8681206b42|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|196|1|V|rust
	    #[allow(unused_variables)]
d12145b56f92b39ee712fe00b94701b6|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|196|1|v|rust
	    let _five_hundred = tup.0;
	    let _six_point_four = tup.1;
	    let _one = tup.2;
	
	
8647e9edc201edeafd414f29a9193d6d|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|196|5|V|rust
	    let _five_hundred = tup.0;
	    let _six_point_four = tup.1;
	    let _one = tup.2;
f94e4fc050c77d1f780a4c28a7588ec5|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|41|20|v|rust
	byte_signed_min
0a7c00e7729fb518f94957a1b9c3acab|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|63|62|v|rust
	./configure 
5e7661e7e8d890a176f8eb57d3ea5233|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|63|62|v|rust
	--prefix=...
3385d67a338f0d8d8b1fc20fa97a0f4a|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|73|1|V|rust
	
	        sixty_four_bits_unsigned_min, sixty_four_bits_unsigned_max
3f28d4829f8223899d8cbe02a14c1160|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|74|1|V|rust
	        sixty_four_bits_unsigned_min, sixty_four_bits_unsigned_max
	    );
994fa4ce2c2fc650d6577c73419eaf49|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|83|8|v|rust
	{}",
0e6c92d6d6293d73387af6a56c0f5a57|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|105|1|v|rust
	    let sixty_four_bits_or_thirty_two_bits_architecture_unsigned: usize = 10;
	
63a1ae35e1723c3e15169f708acc18ed|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|278|14|v|rust
	"This is an"h
cb5e100e5a9a3e7f6d1fd97512215282|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|239|91|v|rust
	error
2f24365b3f3df61d6babdec5d229a138|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|239|60|v|rust
	 and the 
c1437efdd861d6a0dc5075a96edca969|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/data_types.rs|239|60|v|rust
	initial value 
e0fbb3651f921381b86323df0b4ac379|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|2|78|v|rust
	: the main function,
f5ddaf0ca7929578b408c909429f68f2|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|9|8|v|rust
	local
509820290d57f333403f490dde7316f4|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|15|4|v|rust
	Local
41a4c2825e61478a3d1d2545dd6c8e02|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|55|1|v|vim
	set complete+=k
	
f749f6f73fcda76362eedfb882a383ea|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|55|1|V|vim
	set complete+=k
7560e15664fea44a28893f19a08fdd54|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|53|1|V|vim
	jsskk kkj
7516c3b35580b3490248629cff5e498c|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|53|1|V|vim
	school
aca4a22d06512142438effaa29fca03d|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|27|1|V|rust
	// Function with a parameters
507b6d22274820f53979cc270edf029a|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|27|2|V|rust
	// Functions can also be defined to have parameters
	// Which are special variables that are part of a function’s signature
c461f83089589981e45be38ef883ad8c|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|37|14|v|rust
	one_params
4700c142f5dd251be3c3d6cca2018933|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|51|18|v|rust
	unction 
b7489090215cb6de64a9e52655061082|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|55|1|v|rust
	    let y = 6;
	
458466d95cfda4303dc7b79ad4a3ec74|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|55|1|V|rust
	    let y = 6;
c87a2e3dc518ca06256704050d15b9b9|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|58|1|V|rust
	     let y = 6;
46622503e40ed996d51a6790aa2b25a4|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|60|45|v|rust
	and 6 is an expression
97f5883459fa501b4d72157e53735ce3|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|63|1|V|rust
	    let x = 6; // let x = 6; is a statement 
f732cc5d9eee95fa1f725162bc5f3141|file:///Users/mohamedbgassama/code/myrust/rust_book/chapter3/common_programming_concepts/src/function.rs|63|9|V|rust
	        let x = 6; // let x = 6; is a statement 
e9093aa4d1b2cdae329b37cad71499a9|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|141|3|v|vim
	vimpyter
2a726dca8f8d59515a7383d95e22669a|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|361|21|v|vim
	in Vim/Neovim
4559a184943bb35a301a2ef5a05b4477|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|58|2|V|vim
	set dictionary
	set dictionary+=/usr/share/dict/words
d5aa9c8d00f44d8f819f2dccbe04c9ed|file:///Users/mohamedbgassama/jarvis/config/nvim/coc-settings.json|7|3|V|jsonc
	  "suggest.autoTrigger": "none",
3c6cff51cbf3356e5b08149aa8405e91|file:///Users/mohamedbgassama/jarvis/config/nvim/plugins.vim|145|1|v|vim
	" Dark powered asynchronous completion framework for neovim/Vim
	if has('nvim')
	  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
	else
	  Plug 'Shougo/deoplete.nvim'
	  Plug 'roxma/nvim-yarp'
	  Plug 'roxma/vim-hug-neovim-rpc'
	endif
	
3985d620150036ea93508ef330a72c3f|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|369|1|V|vim
	Use deoplete.
911115fea331b4a69698ed7263a2ef98|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|369|1|V|vim
	let g:deoplete#enable_at_startup = 1
4eec26784b86afd8df9160cca58a6431|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|42|1|V|vim
	spellie
dc127998904c675356d373a32d7116a6|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|59|1|V|vim
	set dictionary+=/usr/share/dict/words
b594e46c607eef1df3ca672992bfc0d3|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network-alt/client/lib/apollo.js|2|1|V|javascriptreact
	import React from "react";
52a17cd9568e805fc0886361a43c0e97|file:///Users/mohamedbgassama/.zshrc|71|6|V|zsh
	if [ bye ]; then
	  echo 'Hey 👋'
0cae736454e460e84bffce14a70730ab|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network-alt/client/pages-sections/Components-Sections/SectionBasics.js|593|1|V|javascriptreact
	              <br />
9feb6aa7949c1832c26e316f39740cf3|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network-alt/client/pages-sections/Components-Sections/SectionBasics.js|594|18|v|javascriptreact
	v id="sliderDouble" className="slider-info" />
e6d09e4bf0c584d4dec36225a84f6c08|file:///Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network-alt/client/pages-sections/Components-Sections/SectionNavbars.js|31|1|V|javascriptreact
	div.c2.list
a3c3eeff069227b4bb68ee746a2b1d9b|file:///var/folders/dy/gwgj29jd4752166v_jc0mlvm0000gn/T//numpy.ipynb|503|1|V|ipynb
	```{.python .input}
4262e4e82336a7b69cfd5731c60f8b0c|file:///var/folders/dy/gwgj29jd4752166v_jc0mlvm0000gn/T//numpy.ipynb|490|1|V|ipynb
	```{.json .output n=130}
	[
	 {
	  "data": {
	   "text/plain": "array([6, 7, 9, 8])"
	  },
	  "execution_count": 130,
	  "metadata": {},
	  "output_type": "execute_result"
	 }
	]
	```
3321c51a16cb287628616f7ca2bb58e0|file:///var/folders/dy/gwgj29jd4752166v_jc0mlvm0000gn/T//numpy.ipynb|486|1|V|ipynb
	```{.python .input  n=130}
	f + 2
	```
e73982b05e5f0cd4ae3d180155fa33f5|file:///Users/mohamedbgassama/jarvis/config/nvim/coc-settings.json|4|144|V|jsonc
	  "coc.preferences.formatOnSaveFiletypes": ["javascript", "typescript", "typescriptreact","ts","json", "javascriptreact", "typescript.tsx","py"j "python", "css", "scss"],
	  "eslint.filetypes": ["javascript", "typescript", "typescriptreact", "javascriptreact", "typescript.tsx"],
9bdf1403166a4fdf4d4d3c9f903779ea|file:///Users/mohamedbgassama/PycharmProjects/Guiapp/app.py|16|1|V|python
	print("hello")
e55eae0d591ad383c6639251dba23cb4|file:///Users/mohamedbgassama/PycharmProjects/Guiapp/app.py|4|1|V|python
	port numpy
cf4339e5dad26c57bbf32fa9c427d4f6|file:///Users/mohamedbgassama/PycharmProjects/TestPython/hello.py|1|1|V|python
	import numpy
9d076fb440b88f5f3072119d78823b62|file:///Users/mohamedbgassama/PycharmProjects/TestPython/hello.py|18|5|V|python
	    g = ""
33c89dd51d947144cb9f0d1714ae42f2|file:///Users/mohamedbgassama/PycharmProjects/TestPython/hello.py|19|4|V|python
	    word = 1
7a5e002b4e0d0d6be2a5192f3cb5dfb8|file:///Users/mohamedbgassama/.zshrc|558|7|^v|zsh
	eg
	ev
	et
	ez
	eb
5fee694501404a8f13050f3a788ef015|file:///Users/mohamedbgassama/.zshrc|58|1|v|zsh
	 # openblas
	export LDFLAGS="-L/usr/local/opt/openblas/lib"                       │+ # ssh
	export CPPFLAGS="-I/usr/local/opt/openblas/include"
	export PKG_CONFIG_PATH="/usr/local/opt/openblas/lib/pkgconfig"
	
	
9259c2b0e1e11a9fd8646fd58cd23466|file:///Users/mohamedbgassama/.bash_profile|348|1|v|sh
	 # openblas
	export LDFLAGS="-L/usr/local/opt/openblas/lib"                       ‚îÇ+ # ssh
	export CPPFLAGS="-I/usr/local/opt/openblas/include"
	export PKG_CONFIG_PATH="/usr/local/opt/openblas/lib/pkgconfig"
	
	
a0f3c367d5070d358c744afd606a980c|file:///Users/mohamedbgassama/.bash_profile|348|1|v|sh
	 # openblas
	export LDFLAGS="-L/usr/local/opt/openblas/lib"                       ‚îÇ+ # ssh
	export CPPFLAGS="-I/usr/local/opt/openblas/include"
	export PKG_CONFIG_PATH="/usr/local/opt/openblas/lib/pkgconfig"
	
	
	
d07d0a647b19a072a15774dd2f99bc5f|file:///Users/mohamedbgassama/.bash_profile|348|1|V|sh
	 # openblas
	export LDFLAGS="-L/usr/local/opt/openblas/lib"                       ‚îÇ+ # ssh
5658ffccee7f0ebfda2b226238b1eb6e|file:///Users/mohamedbgassama/.zshrc|128|28|v|zsh
	email@example.com
97be93ce5fab29a431bb0d20e89cd9ff|file:///Users/mohamedbgassama/.zshrc|428|28|v|zsh
	.177.110"
7f08a412ee69afe84d59a60cd56a9965|file:///Users/mohamedbgassama/.zshrc|1|1|V|zsh
	ias sg='eval `ssh-agent -s`'
704408a29d7e3429dd7be29b5b59883b|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|58|1|V|vim
	" set dictionary
3beb75d1563ebc22253341be4ce57f44|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|57|1|V|vim
	Dictionary
e0bb7d62b16ea2b936c08fbe86d8ba72|file:///Users/mohamedbgassama/.zshrc|1|1|V|zsh
	alias sg='eval `ssh-agent -s`'
884eb28b0e5d535ce99b10525edaa587|file:///Users/mohamedbgassama/.zshrc|229|1|V|zsh
	``` bash
de9967e85c28b1bdf4f4ab24732d8e1c|file:///Users/mohamedbgassama/.zshrc|262|1|v|zsh
	function email() {
	  if ! tmux has-session -t email 2> /dev/null; then
	    # Make saved attachments go to ~/Downloads by default.
	    tmux new-session -d -s email -c ~/Downloads -n mutt
	    tmux send-keys -t email:mutt mutt Enter
	    tmux new-window -t email -c ~/.mutt -n sync
	    tmux send-keys -t email:sync '~/.mutt/scripts/control.sh --daemon' Enter
	    tmux split-window -t email:sync -v -f -l 8 -c ~/.mutt
	    tmux send-keys -t email:sync.bottom '~/.mutt/scripts/control.sh' Enter
	  fi
	  if [ -z "$TMUX" ]; then
	    tmux attach -t email:mutt
	  else
	    tmux switch-client -t email:mutt
	  fi
	}
	
	
bd6607823ff3a283ef71f418f05a24d8|file:///Users/mohamedbgassama/.zshrc|293|1|v|zsh
	# WriteRoom-style focused workspace.
	function wr() {
	  emulate -L zsh
	
	  local THRESHOLD=200
	  local COLS=$(tput cols)
	  if ! tmux has-session -t WriteRoom 2> /dev/null; then
	    tmux new-session -d -s WriteRoom -c ~/Documents/Corpus -x $(tput cols) -y $(tput lines)
	    # TODO: something less clowny here (want width of created session, not width
	    # of current pane).
	    if [ "$COLS" -gt "$THRESHOLD" ]; then
	      local PERCENT=25
	    else
	      local PERCENT=20
	    fi
	    tmux split-window -t WriteRoom -h -p $PERCENT
	    tmux split-window -t WriteRoom.1 -b -h -p $PERCENT
	    tmux select-pane -t WriteRoom.2
	    tmux send-keys -t WriteRoom.2 "sleep .25; vim -c CommandT" Enter
	  fi
	  if [ -z "$TMUX" ]; then
	    tmux attach -t WriteRoom
	  else
	    tmux switch-client -t WriteRoom
	  fi
	}
2527ce85089b38833f5f485f2bda37bf|file:///Users/mohamedbgassama/.zshrc|155|1|v|zsh
	function mvim() {
	  emulate -L zsh
	
	  # Makes user-installed fonts visible to MacVim.
	  if which reattach-to-user-namespace &> /dev/null ; then
	    reattach-to-user-namespace mvim
	  else
	    command mvim
	  fi
	}
	
	
ff4c8ff01d544500ea4bfea43e6108c1|file:///Users/mohamedbgassama/.zshrc|308|1|V|zsh
	
	
	
	
	
71b5fb2d0b0a2bb355da7d4c517488cb|file:///Users/mohamedbgassama/.zshrc|308|1|V|zsh
	
	
	
	
	# Enabled zsh-autosuggestions
febc409eb110c9afd02752b7b67e2076|file:///Users/mohamedbgassama/.zshrc|142|1|v|zsh
	function scratch() {
	  local SCRATCH=$(mktemp -d)
	  echo 'Spawing subshell in scratch directory:'
	  echo "  $SCRATCH"
	  (cd $SCRATCH; zsh)
	  echo "Removing scratch directory"
	  rm -r "$SCRATCH"
	}
198ead2119969de620a654b4e7b000a1|file:///Users/mohamedbgassama/.zshrc|303|1|v|zsh
	# Quit
	alias q='exit'
	
	
b54a896a14669ba63d172788c3df6c51|file:///Users/mohamedbgassama/.zshrc|303|1|V|zsh
	# Quit
e4c9064fda6854727b059ee65fb4cb5d|file:///Users/mohamedbgassama/.zshrc|303|1|V|zsh
	alias q='exit'
fdbaf170d59fbb483b9c43fcdb2652a5|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|7|1|v|zsh
	if type brew &>/dev/null; then
	  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
	fi
	
	#
1ca58a113335ea9e5853cca3f92ba326|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|7|1|v|zsh
	if type brew &>/dev/null; then
	  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
	fi
	
	
a7452154466ebdb99806efda8318a1d0|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|47|1|v|zsh
	# Load Zsh tools for syntax highlighting and autosuggestions
	HOMEBREW_FOLDER="/usr/local/share"
	source "$HOMEBREW_FOLDER/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	source "$HOMEBREW_FOLDER/zsh-autosuggestions/zsh-autosuggestions.zsh"
	
	
bf98029ccb7f9b4a34e37b69db804982|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|74|1|v|zsh
	# Uncomment the following line to display red dots whilst waiting for completion.
	# COMPLETION_WAITING_DOTS="true"
	
	
56e85bd3adb3edc2ef2d022e07e2688f|file:///Users/mohamedbgassama/jarvis/backup/.zshrc|82|1|v|zsh
	# Uncomment the following line if you want to change the command execution time
	# stamp shown in the history command output.
	# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
	HIST_STAMPS="mm/dd/yyyy"
	
	
433b3ab2151385bda7d6c5351a3b48a2|file:///Users/mohamedbgassama/.zshrc|31|1|V|zsh
	
	# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
9e83c946b3ea60c3ce7b4f0378657185|file:///Users/mohamedbgassama/.zshrc|350|30|v|zsh
	init.vi
2b0aa7ee6675f69233c68ab94934cbe5|file:///Users/mohamedbgassama/.zshrc|350|30|v|zsh
	init.vim
3e82875f30595fcc3e2ea7112a52aec3|file:///Users/mohamedbgassama/.zshrc|382|12|v|zsh
	cd ..
dbe2934156c96f2e7ae0dbb61720aa98|file:///Users/mohamedbgassama/.zshrc|387|34|v|zsh
	rust/rust-ansi-pars
0529a68bf5925c9905acf2a092638c23|file:///Users/mohamedbgassama/.zshrc|387|34|v|zsh
	rust/rust-ansi-parse
c8fbae69172968cb993418798ed062bf|file:///Users/mohamedbgassama/.zshrc|66|15|v|zsh
	_profil
2f865a3fcf0d4bef378df093c73b0009|file:///Users/mohamedbgassama/.zshrc|503|1|V|zsh
	# Some tmux-related shell aliases
5319cf5a990e3ea0de475ae462b960db|file:///Users/mohamedbgassama/.zshrc|509|1|V|zsh
	alias t='tmux attach || tmux new-session\; split-window -h'
ee988ae987f95ae2acda03f879f88ec6|file:///Users/mohamedbgassama/.zshrc|361|29|v|zsh
	198.199.87.66
3e8f7f0dd27c5e8604e9e4178aaa2903|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|374|21|v|vim
	'space
ff2364a0be3d20e46cc69efb36afe9a5|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|374|22|v|vim
	space
2ac43aa43bf473f9a9c09b4b608619d3|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|374|33|v|vim
	light
a82fd95db10ff25dfad39f07372ebe37|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|449|16|v|vim
	dark
b435e227d5dd201e1768b2bcb2e0aa81|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|666|50|v|vim
	height
d38c1cd2a4098216d652e1ffb585ed07|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|666|1|V|vim
	nnoremap <silent> <leader>- :exe "resize " . (winheight(0) * 3/2)<CR>
	nnoremap <silent> <leader>+ :exe "resize " . (winheight(0) * 2/3)<CR>
9d3494e3929600661644cb44d312d726|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|665|1|V|vim
	" Window height
	nnoremap <silent> <leader>- :exe "resize " . (winheight(0) * 3/2)<CR>
455c864df1825665968236fdbef16418|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|666|2|v|vim
	noremap <silent> <leader>- :exe "resize " . (winheight(0) * 3/2)<CR>
	nnoremap <silent> <leader>+ :exe "resize " . (winheight(0) * 2/3)<CR>
	
b0c638dc13077982c6665d0fc9176d76|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|663|1|v|vim
	 Vim window sizing
	
	" Window height
	" nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
	" nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
	
	"Window width
	" nnoremap <silent> <leader>\ :exe "resize " . (winwidth(0) * 3/2)<CR>
	" nnoremap <silent> <leader>/ :exe "resize " . (winwidth(0) * 2/3)<CR>
	
030fdc52f73158455988d2e541e9091b|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|663|1|v|vim
	" Vim window sizing
	
	" Window height
	nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
	nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
	
	" Window width
	nnoremap <silent> <Leader>[] :exe "resize " . (winwidth(0) * 3/2)<CR>
	nnoremap <silent> <Leader>] :exe "resize " . (winwidth(0) * 2/3)<CR>
	
357cac5ee781614071ca472df04509fb|file:///Users/mohamedbgassama/org/studies.org|1|1|V|org
	* Software need to know
	
c95b0e8ca11546211f0fd815f15367d1|file:///Users/mohamedbgassama/code/dockerTutorial/redis-image/Dockerfile|6|1|v|Dockerfile
	RUN apk add --update gcc
	
bae548a776dc78d04ba0e782fd933f29|file:///Users/mohamedbgassama/code/dockerTutorial/redis-image/Dockerfile|7|1|V|Dockerfile
	RUN apk add --update gcc
901555fb06e346cb065ceb9808dcfc25|file:///Users/mohamedbgassama/code/dockerTutorial/web-app/server.ts|10|22|v|typescript
	port
ee434023cf89d7dfb21f63d64f0f9d74|file:///Users/mohamedbgassama/code/dockerTutorial/web-app/Dockerfile|1|6|v|Dockerfile
	nginx
9492a220dcfe5eba58d5c534eef91d8b|file:///Users/mohamedbgassama/code/dockerTutorial/web-app/Dockerfile|1|1|V|Dockerfile
	COPY . .
b1be88316c9d802e4877be940cc82161|file:///Users/mohamedbgassama/code/dockerTutorial/web-app/Dockerfile|3|1|V|Dockerfile
	RUN apk add --update node
396199333edbf40ad43e62a1c1397793|file:///Users/mohamedbgassama/code/dockerTutorial/web-app/server.ts|7|13|v|typescript
	Hi there!
174ee094d87133b8c1eff625fa464feb|file:///Users/mohamedbgassama/code/dockerTutorial/visists/server.ts|8|10|v|typescript
	{name: "Hello World"}
b8444c159c4f8ff0967581f6d388387f|file:///Users/mohamedbgassama/code/dockerTutorial/visists/package.json|9|21|v|json
	tart
5601d73427897297ea982354f6770ee9|file:///Users/mohamedbgassama/code/dockerTutorial/visists/server.ts|1|25|v|typescript
	"exgress
f5e7e6f78de63154d4c79ced46253541|file:///Users/mohamedbgassama/code/dockerTutorial/visists/server.ts|9|3|V|typescript
	  res.send("Hello World");
59013703e0163f51b032eee999c84c65|file:///Users/mohamedbgassama/code/dockerTutorial/visists/server.ts|6|12|v|typescript
	<F8>
7118fa5ba6607fd534d9259ac67ca51b|file:///Users/mohamedbgassama/code/dockerTutorial/visists/Dockerfile|1|17|v|Dockerfile
	:node
f06e30e3f2e2ff6cc212ed17635e0318|file:///Users/mohamedbgassama/.gvimrc|1|1|V|vim
	.gvimrc
540d0a93513156c5dd7e08c68b0d2fc1|file:///Users/mohamedbgassama/code/dockerTutorial/frontend/src/App.js|11|11|V|javascriptreact
	          Edit <code>src/App.js</code> and save to reload.
5975812ced9348eaf88377b2bf6aff45|file:///Users/mohamedbgassama/code/dockerTutorial/frontend/docker-compose.yml|9|7|V|yaml.docker-compose
	      - 333000:3000
16019daaef8b09cb9810bfbab316a841|file:///Users/mohamedbgassama/code/dockerTutorial/frontend/Dockerfile.dev|1|1|V|Dockerfile
	RROM node:alpine
54ee876a88a09886d3adc4a673ed44a6|file:///Users/mohamedbgassama/code/dockerTutorial/frontend/src/App.js|2|1|V|javascriptreact
	;'p]kjpo0=<F23>P:io0<F10>iop[;]
d97cc0b6b2ee1d704cfec08ee9dfc420|file:///Users/mohamedbgassama/code/dockerTutorial/frontend/src/App.js|9|9|V|javascriptreact
	        <p>Hi There! it is cool!</p>
486c6d92888ccff5824e3533dbafd1d3|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|213|1|V|vim
	let g:airline#extensions#tabline#enabled = 1
d910219c281cc10881a7271b1c0894a5|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|376|1|v|vim
	" Nord Vim
	colorscheme nord
	
6542505101bb354341ff6046910c7855|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|377|1|V|vim
	colorscheme nord
df957832a11ebb478941c0e58811781b|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|376|1|V|vim
	" Nord Vim
2885402b15a3609661e6a065649b76ab|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|367|1|V|vim
	" Uniform background highlighting where the foreground color is used to mark the changes instead
ed1257063db5f44722805819aa7a5c05|file:///Users/mohamedbgassama/jarvis/config/nvim/init.vim|369|1|V|vim
	let g:nord_underline = 1
